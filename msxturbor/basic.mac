; BASIC.MAC
;
; MSX BASIC ROM
;
; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA
;
; Source edited by Arjen Zeilemaker
;
; version 1.0 17-11-2005 

	.Z80
	ASEG
	ORG	268CH


	INCLUDE	MSX.INC


CGTABL		EQU	0004H	; ---LI
SYNCHR		EQU	0008H
RDSLT		EQU	000CH	; -C--I
CHRGTR		EQU	0010H
OUTDO		EQU	0018H	; -C---
CALSLT		EQU	001CH	; JC--I
DCOMPR		EQU	0020H
ENASLT		EQU	0024H	; -C---
GETYPR		EQU	0028H
INITIO		EQU	003BH	; -C---
INIFNK		EQU	003EH	; -C---
WRTVDP		EQU	0047H	; J----
WRTVRM		EQU	004DH	; -C---
RDVRM		EQU	004AH	; -C---
LDIRMV		EQU	0059H	; -C---
LDIRVM		EQU	005CH	; -C---
CALPAT		EQU	0084H	; -C---
CALATR		EQU	0087H	; -C---
GSPSIZ		EQU	008AH	; -C---
GRPPRT		EQU	008DH	; J----
GICINI		EQU	0090H	; -C--I
WRTPSG		EQU	0093H	; J----
STRTMS		EQU	0099H	; -C---
CHSNS		EQU	009CH	; -C---
CHGET		EQU	009FH	; -C---
CHPUT		EQU	00A2H	; J----
LPTOUT		EQU	00A5H	; -C---
CNVCHR		EQU	00ABH	; -C---
PINLIN		EQU	00AEH	; -C---
INLIN		EQU	00B1H	; -C---
QINLIN		EQU	00B4H	; -C---
ISCNTC		EQU	00BAH	; -C---
CKCNTC		EQU	00BDH	; -C---
BEEP		EQU	00C0H
CLS		EQU	00C3H	; J----
POSIT		EQU	00C6H	; -C---
FNKSB		EQU	00C9H	; -C---
ERAFNK		EQU	00CCH	; J----
DSPFNK		EQU	00CFH	; J----
TOTEXT		EQU	00D2H	; -C---
GTSTCK		EQU	00D5H	; -C---
GTTRIG		EQU	00D8H	; -C---
GTPAD		EQU	00DBH	; -C---
GTPDL		EQU	00DEH	; -C---
TAPION		EQU	00E1H	; -C---
TAPIN		EQU	00E4H	; -C---
TAPIOF		EQU	00E7H	; -C---
TAPOON		EQU	00EAH	; -C---
TAPOUT		EQU	00EDH	; -C---
LFTQ		EQU	00F6H	; -C---
PUTQ		EQU	00F9H	; -C---
LEFTC		EQU	00FFH	; -C--I
TUPC		EQU	0105H	; -C---
DOWNC		EQU	0108H	; -C--I
TDOWNC		EQU	010BH	; -C---
SCALXY		EQU	010EH	; -C---
MAPXYC		EQU	0111H	; -C---
FETCHC		EQU	0114H	; -C---
STOREC		EQU	0117H	; -C---
SETATR		EQU	011AH	; -C---
READC		EQU	011DH	; -C---
SETC		EQU	0120H	; -C---
NSETCX		EQU	0123H	; -C---
GTASPC		EQU	0126H	; -C---
PNTINI		EQU	0129H	; -C---
SCANR		EQU	012CH	; -C---
SCANL		EQU	012FH	; -C---
ISFLIO		EQU	014AH	; -C---
OUTDLP		EQU	014DH	; J----
GETVCP		EQU	0150H	; -C---
GETVC2		EQU	0153H	; -C---
EXTROM		EQU	015FH	; JC---
CHKSLZ		EQU	0162H	; -C---
CHKNEW		EQU	0165H	; -C--I
BIGFIL		EQU	016BH	; -C---
CHGCPU		EQU	0180H	; -C---
GETCPU		EQU	0183H	; -C---

S.PAINT		EQU	0069H	; ----I
S.PSET		EQU	006DH	; ----I
S.GLINE		EQU	0075H	; ----I
S.DOGRPH	EQU	0085H	; ----I
S.PUTSPRT	EQU	0151H	; ----I
S.COLOR		EQU	0155H	; ----I
S.SCREEN	EQU	0159H	; ----I
S.WIDTHS	EQU	015DH	; ----I
S.VDP		EQU	0161H	; ----I
S.VDPF		EQU	0165H
S.BASE		EQU	0169H	; ----I
S.BASEF		EQU	016DH	; ----I
S.VPOKE		EQU	0171H	; ----I
S.VPEEK		EQU	0175H	; ----I
S.SETS		EQU	0179H	; ----I
S.PROMPT	EQU	0181H	; ----I
S.SDFSCR	EQU	0185H	; ----I
S.SETSCR	EQU	0189H	; ----I
S.SCOPY		EQU	018DH	; ----I
S.GETPUT	EQU	01B1H	; ----I

J01BB		EQU	001BBH	; Patch routine PRINT USING for kanji
J1A31		EQU	01A31H	; Patch routine init midi hardware
JF37D		EQU	0F37DH	; BDOS routine for diskbasic
VARWRK		EQU	0F380H	; ----I

CLPRM1		EQU	0F398H	; -C---
USRTAB		EQU	0F39AH	; ----I
LINL40		EQU	0F3AEH	; --S--
LINLEN		EQU	0F3B0H	; ---L-
CLMLST		EQU	0F3B2H	; --SL-
CSRY		EQU	0F3DCH	; --SL-
RG0SAV		EQU	0F3DFH	; ----I
FORCLR		EQU	0F3E9H	; ---L-
BAKCLR		EQU	0F3EAH	; ---L-
MAXUPD		EQU	0F3ECH	; -C---
MINUPD		EQU	0F3EFH	; -C---
ATRBYT		EQU	0F3F2H	; ---L-
CS1200		EQU	0F3FCH	; ----I
LOW		EQU	0F406H	; ----I
ENDPRG		EQU	0F40FH	; ----I
ERRFLG		EQU	0F414H	; --SL-
LPTPOS		EQU	0F415H	; --SL-
PRTFLG		EQU	0F416H	; --SL-
NTMSXP		EQU	0F417H	; --S--
VLZADR		EQU	0F419H	; --SL-
VLZDAT		EQU	0F41BH	; --SL-
CURLIN		EQU	0F41CH	; --SL-
KBFMIN		EQU	0F41EH	; --S-I
KBUF		EQU	0F41FH	; ----I
BUFMIN		EQU	0F55DH	; --S-I
BUF		EQU	0F55EH	; ----I
ENDBUF		EQU	0F660H	; --S--
TTYPOS		EQU	0F661H	; --SL-
DIMFLG		EQU	0F662H	; --SL-
VALTYP		EQU	0F663H	; --SL-
DORES		EQU	0F664H	; --SL-
DONUM		EQU	0F665H	; --SL-
CONTXT		EQU	0F666H	; --SL-
CONSAV		EQU	0F668H	; --SL-
CONTYP		EQU	0F669H	; --SL-
CONLO		EQU	0F66AH	; --SLI
MEMSIZ		EQU	0F672H	; --SL-
STKTOP		EQU	0F674H	; --SL-
TXTTAB		EQU	0F676H	; --SL-
TEMPPT		EQU	0F678H	; --SL-
TEMPST		EQU	0F67AH	; ----I
DSCTMP		EQU	0F698H	; ----I
FRETOP		EQU	0F69BH	; --SLI
TEMP3		EQU	0F69DH	; --SL-
TEMP8		EQU	0F69FH	; --SL-
ENDFOR		EQU	0F6A1H	; --SL-
DATLIN		EQU	0F6A3H	; ---L-
SUBFLG		EQU	0F6A5H	; --SL-
FLGINP		EQU	0F6A6H	; --SL-
TEMP		EQU	0F6A7H	; --SL-
PTRFLG		EQU	0F6A9H	; --SL-
AUTFLG		EQU	0F6AAH	; --SL-
AUTLIN		EQU	0F6ABH	; --SL-
AUTINC		EQU	0F6ADH	; --SL-
SAVTXT		EQU	0F6AFH	; --SL-
SAVSTK		EQU	0F6B1H	; --SL-
ERRLIN		EQU	0F6B3H	; --SL-
DOT		EQU	0F6B5H	; --SL-
ERRTXT		EQU	0F6B7H	; --SL-
ONELIN		EQU	0F6B9H	; --SL-
ONEFLG		EQU	0F6BBH	; --SLI
TEMP2		EQU	0F6BCH	; --SL-
OLDLIN		EQU	0F6BEH	; --S--
OLDTXT		EQU	0F6C0H	; --SL-
VARTAB		EQU	0F6C2H	; --SL-
ARYTAB		EQU	0F6C4H	; --SL-
STREND		EQU	0F6C6H	; --SL-
DATPTR		EQU	0F6C8H	; --SL-
DEFTBL		EQU	0F6CAH	; ----I
PRMSTK		EQU	0F6E4H	; --SLI
PRMLEN		EQU	0F6E6H	; --SL-
PARM1		EQU	0F6E8H	; ----I
PRMPRV		EQU	0F74CH	; --S-I
PRMLN2		EQU	0F74EH	; --SL-
PARM2		EQU	0F750H	; ----I
PRMFLG		EQU	0F7B4H	; --SL-
ARYTA2		EQU	0F7B5H	; --SL-
NOFUNS		EQU	0F7B7H	; --SL-
TEMP9		EQU	0F7B8H	; --SL-
FUNACT		EQU	0F7BAH	; --SL-
SWPTMP		EQU	0F7BCH	; ----I
TRCFLG		EQU	0F7C4H	; --SL-
FBUFFR		EQU	0F7C5H	; --SLI
DECTMP		EQU	0F7F0H	; --SL-
DECTM2		EQU	0F7F2H	; --SL-
DECCNT		EQU	0F7F4H	; --SL-
DAC		EQU	0F7F6H	; --SLI
HOLD8		EQU	0F806H	; ----I
ARG		EQU	0F847H	; --SLI
RNDX		EQU	0F857H	; ----I
MAXFIL		EQU	0F85FH	; --SL-
FILTAB		EQU	0F860H	; --SL-
NULBUF		EQU	0F862H	; --S--
PTRFIL		EQU	0F864H	; --SL-
FILNAM		EQU	0F866H	; --SLI
NLONLY		EQU	0F87CH	; --SL-
SAVEND		EQU	0F87DH	; --S--
FNKSTR		EQU	0F87FH	; ----I
CGPNT		EQU	0F91FH	; --S--
MINDEL		EQU	0F92DH	; --SL-
MAXDEL		EQU	0F92FH	; --SL-
ASPECT		EQU	0F931H	; --SL-
CENCNT		EQU	0F933H	; --SL-
CLINEF		EQU	0F935H	; --SLI
CNPNTS		EQU	0F936H	; --SL-
CPLOTF		EQU	0F938H	; --SL-
CPCNT		EQU	0F939H	; --SL-
CPCNT8		EQU	0F93BH	; --S--
CRCSUM		EQU	0F93DH	; --SL-
CSTCNT		EQU	0F93FH	; ---L-
CSCLXY		EQU	0F941H	; --SL-
CSAVEA		EQU	0F942H	; --SL-
CSAVEM		EQU	0F944H	; --SL-
CXOFF		EQU	0F945H	; --SL-
CYOFF		EQU	0F947H	; --SL-
LOHMSK		EQU	0F949H	; --SL-
LOHDIR		EQU	0F94AH	; --SL-
LOHADR		EQU	0F94BH	; --SL-
LOHCNT		EQU	0F94DH	; ---L-
SKPCNT		EQU	0F94FH	; ---L-
MOVCNT		EQU	0F951H	; --SL-
PDIREC		EQU	0F953H	; --SL-
LFPROG		EQU	0F954H	; --SL-
RTPROG		EQU	0F955H	; --SL-
MCLTAB		EQU	0F956H	; --SL-
MCLFLG		EQU	0F958H	; --SL-
QUETAB		EQU	0F959H
PRSCNT		EQU	0FB35H	; --SLI
SAVSP		EQU	0FB36H	; --SL-
VOICEN		EQU	0FB38H	; --SL-
SAVVOL		EQU	0FB39H	; --SL-
MCLLEN		EQU	0FB3BH	; --SLI
MCLPTR		EQU	0FB3CH	; --SL-
MUSICF		EQU	0FB3FH	; ---L-
PLYCNT		EQU	0FB40H	; ----I
BASROM		EQU	0FBB1H	; --S--
FNKFLG		EQU	0FBCEH	; ----I
ONGSBF		EQU	0FBD8H	; --SL-
KEYBUF		EQU	0FBF0H
BOTTOM		EQU	0FC48H	; --SL-
HIMEM		EQU	0FC4AH	; --SL-
TRPTBL		EQU	0FC4CH	; ----I
INTFLG		EQU	0FC9BH	; ---L-
JIFFY		EQU	0FC9EH	; ---L-
INTVAL		EQU	0FCA0H	; --S--
INTCNT		EQU	0FCA2H	; --S--
FLBMEM		EQU	0FCAEH	; --S--
SCRMOD		EQU	0FCAFH	; ---L-
GXPOS		EQU	0FCB3H	; --SL-
GYPOS		EQU	0FCB5H	; --SL-
GRPACX		EQU	0FCB7H	; --SL-
GRPACY		EQU	0FCB9H	; --SL-
DRWFLG		EQU	0FCBBH	; --SLI
DRWSCL		EQU	0FCBCH	; --SL-
DRWANG		EQU	0FCBDH	; --SL-
RUNBNF		EQU	0FCBEH	; --SL-
SAVENT		EQU	0FCBFH	; --SL-
EXPTBL		EQU	0FCC1H	; ----I
SLTTBL		EQU	0FCC5H	; --S--
SLTATR		EQU	0FCC9H	; ----I
SLTWRK		EQU	0FD09H	; ----I
PROCNM		EQU	0FD89H	; ----I
DEVICE		EQU	0FD99H	; --S--

H.KEYI		EQU	0FD9AH	; ----I
H.ONGO		EQU	0FDEAH	; -C---
H.DSKO		EQU	0FDEFH	; -C---
H.SETS		EQU	0FDF4H	; -C---
H.NAME		EQU	0FDF9H	; -C---
H.KILL		EQU	0FDFEH	; -C---
H.IPL		EQU	0FE03H	; -C---
H.COPY		EQU	0FE08H	; -C---
H.CMD		EQU	0FE0DH	; -C---
H.DSKF		EQU	0FE12H	; -C---
H.DSKI		EQU	0FE17H	; -C---
H.ATTR		EQU	0FE1CH	; -C---
H.LSET		EQU	0FE21H	; -C---
H.RSET		EQU	0FE26H	; -C---
H.FIEL		EQU	0FE2BH	; -C---
H.MKI$		EQU	0FE30H	; -C---
H.MKS$		EQU	0FE35H	; -C---
H.MKD$		EQU	0FE3AH	; -C---
H.CVI		EQU	0FE3FH	; -C---
H.CVS		EQU	0FE44H	; -C---
H.CVD		EQU	0FE49H	; -C---
H.GETP		EQU	0FE4EH	; -C---
H.SETF		EQU	0FE53H	; -C---
H.NOFO		EQU	0FE58H	; -C---
H.NULO		EQU	0FE5DH	; -C---
H.NTFL		EQU	0FE62H	; -C---
H.MERG		EQU	0FE67H	; -C---
H.SAVE		EQU	0FE6CH	; -C---
H.BINS		EQU	0FE71H	; -C---
H.BINL		EQU	0FE76H	; -C---
H.FILE		EQU	0FE7BH	; -C---
H.DGET		EQU	0FE80H	; -C---
H.FILO		EQU	0FE85H	; -C---
H.INDS		EQU	0FE8AH	; -C---
H.RSLF		EQU	0FE8FH	; -C---
H.SAVD		EQU	0FE94H	; -C---
H.LOC		EQU	0FE99H	; -C---
H.LOF		EQU	0FE9EH	; -C---
H.EOF		EQU	0FEA3H	; -C---
H.FPOS		EQU	0FEA8H	; -C---
H.BAKU		EQU	0FEADH	; -C---
H.PARD		EQU	0FEB2H	; -C---
H.NODE		EQU	0FEB7H	; -C---
H.POSD		EQU	0FEBCH	; -C---
H.GEND		EQU	0FEC6H	; -C---
H.RUNC		EQU	0FECBH	; -C---
H.CLEA		EQU	0FED0H	; -C---
H.LOPD		EQU	0FED5H	; -C---
H.STKE		EQU	0FEDAH	; -C---
H.CRDO		EQU	0FEE9H	; -C---
H.DSKC		EQU	0FEEEH	; -C---
H.DOGR		EQU	0FEF3H	; -C---
H.PRGE		EQU	0FEF8H	; -C---
H.ERRP		EQU	0FEFDH	; -C---
H.ERRF		EQU	0FF02H	; -C---
H.READ		EQU	0FF07H	; -C---
H.MAIN		EQU	0FF0CH	; -C---
H.DIRD		EQU	0FF11H	; -C---
H.FINI		EQU	0FF16H	; -C---
H.FINE		EQU	0FF1BH	; -C---
H.CRUN		EQU	0FF20H	; -C---
H.CRUS		EQU	0FF25H	; -C---
H.ISRE		EQU	0FF2AH	; -C---
H.NTFN		EQU	0FF2FH	; -C---
H.NOTR		EQU	0FF34H	; -C---
H.SNGF		EQU	0FF39H	; -C---
H.NEWS		EQU	0FF3EH	; -C---
H.GONE		EQU	0FF43H	; -C---
H.CHRG		EQU	0FF48H	; -C---
H.RETU		EQU	0FF4DH	; -C---
H.PRTF		EQU	0FF52H	; -C---
H.COMP		EQU	0FF57H	; -C---
H.FINP		EQU	0FF5CH	; -C---
H.TRMN		EQU	0FF61H	; -C---
H.FRME		EQU	0FF66H	; -C---
H.NTPL		EQU	0FF6BH	; -C---
H.EVAL		EQU	0FF70H	; -C---
H.FING		EQU	0FF7AH	; -C---
H.ISMI		EQU	0FF7FH	; -C---
H.WIDT		EQU	0FF84H	; -C---
H.LIST		EQU	0FF89H	; -C---
H.BUFL		EQU	0FF8EH	; -C---
H.SCNE		EQU	0FF98H	; -C---
H.FRET		EQU	0FF9DH	; -C---
H.PTRG		EQU	0FFA2H	; -C---
H.ERRO		EQU	0FFB1H	; -C---
H.SCRE		EQU	0FFC0H	; -C---
H.PLAY		EQU	0FFC5H
EXTBIO		EQU	0FFCAH	; JC---
D.FFFF		EQU	0FFFFH	; --SLI




KEYWRD	MACRO	X,Y
G	ASET	0
Q	ASET	0
	IRPC	D,<X>
	IF	G EQ 0
G	ASET	1
	ELSE
	IF	Q NE 0
	DEFB	Q
	ENDIF
Q	ASET	"&D"
	ENDIF
	ENDM
	DEFB	Q+128
	DEFB	Y
	ENDM


TOKEN	MACRO	X,Y
	DEFB	"&X"+128
	DEFB	Y
	ENDM



;	  Subroutine DECSUB
;	     Inputs  ________________________
;	     Outputs ________________________

C268C:	LD	HL,ARG
	LD	A,(HL)
	OR	A
	RET	Z			; 2nd operand zero, quit
	XOR	80H
	LD	(HL),A			; negate 2nd operand
	JR	J26A0			; and do ADD

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C2697:	CALL	C2EEF			; ARG = (single)

;	  Subroutine DECADD
;	     Inputs  ________________________
;	     Outputs ________________________

C269A:	LD	HL,ARG
	LD	A,(HL)
	OR	A
	RET	Z			; 2nd operand zero, quit
J26A0:	AND	7FH
	LD	B,A
	LD	DE,DAC
	LD	A,(DE)
	OR	A
	JP	Z,C2F05			; DAC = ARG and quit
	AND	7FH
	SUB	B
	JR	NC,J26C1
	CPL	
	INC	A
	PUSH	AF
	PUSH	HL
	LD	B,8
J26B6:	LD	A,(DE)
	LD	C,(HL)
	LD	(HL),A
	LD	A,C
	LD	(DE),A
	INC	DE
	INC	HL
	DJNZ	J26B6
	POP	HL
	POP	AF
J26C1:	CP	10H	; 16 
	RET	NC
	PUSH	AF
	XOR	A
	LD	(DAC+8),A
	LD	(ARG+8),A
	LD	HL,ARG+1
	POP	AF
	CALL	C27A3
	LD	HL,ARG
	LD	A,(DAC)
	XOR	(HL)
	JP	M,J26F7
	LD	A,(ARG+8)
	LD	(DAC+8),A
	CALL	C2759
	JP	NC,C273C		; round DAC and quit
	EX	DE,HL
	LD	A,(HL)
	INC	(HL)
	XOR	(HL)
	JP	M,J4067
	CALL	C27DB
	SET	4,(HL)
	JR	C273C			; round DAC and quit

J26F7:	CALL	C276B

;	  Subroutine DECNRM
;	     Inputs  ________________________
;	     Outputs ________________________

C26FA:	LD	HL,DAC+1
	LD	BC,0800H
J2700:	LD	A,(HL)
	OR	A
	JR	NZ,J270C
	INC	HL
	DEC	C
	DEC	C
	DJNZ	J2700
	JP	J2E7D

J270C:	AND	0F0H
	JR	NZ,J2716
	PUSH	HL
	CALL	C2797
	POP	HL
	DEC	C
J2716:	LD	A,08H	; 8 
	SUB	B
	JR	Z,J272D
	PUSH	AF
	PUSH	BC
	LD	C,B
	LD	DE,DAC+1
	LD	B,00H
	LDIR	
	POP	BC
	POP	AF
	LD	B,A
	XOR	A
J2729:	LD	(DE),A
	INC	DE
	DJNZ	J2729
J272D:	LD	A,C
	OR	A
	JR	Z,C273C			; round DAC and quit
	LD	HL,DAC
	LD	B,(HL)
	ADD	A,(HL)
	LD	(HL),A
	XOR	B
	JP	M,J4067
	RET	Z

;	  Subroutine DECROU
;	     Inputs  ________________________
;	     Outputs ________________________

C273C:	LD	HL,DAC+8
	LD	B,07H	; 7 
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2741:	LD	A,(HL)
	CP	50H	; "P"
	RET	C
	DEC	HL
	XOR	A
	SCF	
J2748:	ADC	A,(HL)
	DAA	
	LD	(HL),A
	RET	NC
	DEC	HL
	DJNZ	J2748
	LD	A,(HL)
	INC	(HL)
	XOR	(HL)
	JP	M,J4067
	INC	HL
	LD	(HL),10H	; 16 
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2759:	LD	HL,ARG+7
	LD	DE,DAC+7
	LD	B,07H	; 7 
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2761:	XOR	A
J2762:	LD	A,(DE)
	ADC	A,(HL)
	DAA	
	LD	(DE),A
	DEC	DE
	DEC	HL
	DJNZ	J2762
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C276B:	LD	HL,ARG+8
	LD	A,(HL)
	CP	50H	; "P"
	JR	NZ,J2774
;
	INC	(HL)
J2774:	LD	DE,DAC+8
	LD	B,08H	; 8 
	XOR	A
J277A:	LD	A,(DE)
	SBC	A,(HL)
	DAA	
	LD	(DE),A
	DEC	DE
	DEC	HL
	DJNZ	J277A
;
	RET	NC
;
	EX	DE,HL
	LD	A,(HL)
	XOR	80H
	LD	(HL),A
	LD	HL,DAC+8
	LD	B,08H	; 8 
	XOR	A
J278E:	LD	A,00H
	SBC	A,(HL)
	DAA	
	LD	(HL),A
	DEC	HL
	DJNZ	J278E
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2797:	LD	HL,DAC+8
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C279A:	PUSH	BC
	XOR	A
J279C:	RLD	
	DEC	HL
	DJNZ	J279C
;
	POP	BC
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C27A3:	OR	A
	RRA	
	PUSH	AF
	OR	A
	JP	Z,J27E2
;
	PUSH	AF
	CPL	
	INC	A
	LD	C,A
	LD	B,0FFH
	LD	DE,7
	ADD	HL,DE
	LD	D,H
	LD	E,L
	ADD	HL,BC
	LD	A,08H	; 8 
	ADD	A,C
	LD	C,A
	PUSH	BC
	LD	B,00H
	LDDR	
	POP	BC
	POP	AF
	INC	HL
	INC	DE
	PUSH	DE
	LD	B,A
	XOR	A
J27C7:	LD	(HL),A
	INC	HL
	DJNZ	J27C7
;
	POP	HL
	POP	AF
	RET	NC
;
	LD	A,C
J27CF:	PUSH	HL
	PUSH	BC
	LD	B,A
	XOR	A
J27D3:	RRD	
	INC	HL
	DJNZ	J27D3
;
	POP	BC
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C27DB:	LD	HL,DAC+1
J27DE:	LD	A,08H	; 8 
	JR	J27CF
;
;	-----------------
J27E2:	POP	AF
	RET	NC
	JR	J27DE

;	  Subroutine DECMUL
;	     Inputs  ________________________
;	     Outputs ________________________

C27E6:	CALL	C2E71			; get sign DAC
	RET	Z
;
	LD	A,(ARG)
	OR	A
	JP	Z,J2E7D
;
	LD	B,A
	LD	HL,DAC
	XOR	(HL)
	AND	80H
	LD	C,A
	RES	7,B
	LD	A,(HL)
	AND	7FH
	ADD	A,B
	LD	B,A
	LD	(HL),00H
	AND	0C0H
	RET	Z
;
	CP	0C0H
	JR	NZ,J280C
;
	JP	J4067
;
;	-----------------
J280C:	LD	A,B
	ADD	A,40H	; "@"
	AND	7FH
	RET	Z
;
	OR	C
	DEC	HL
	LD	(HL),A
	LD	DE,HOLD8+63
	LD	BC,8
	LD	HL,DAC+7
	PUSH	DE
	LDDR	
	INC	HL
	XOR	A
	LD	B,08H	; 8 
J2825:	LD	(HL),A
	INC	HL
	DJNZ	J2825
;
	POP	DE
	LD	BC,J2883
	PUSH	BC
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C282E:	CALL	C288A
;
	PUSH	HL
	LD	BC,8
	EX	DE,HL
	LDDR	
	EX	DE,HL
	LD	HL,HOLD8+55
	LD	B,08H	; 8 
	CALL	C2761
;
	POP	DE
	CALL	C288A
;
	LD	C,07H	; 7 
	LD	DE,ARG+7
J284A:	LD	A,(DE)
	OR	A
	JR	NZ,J2852
;
	DEC	DE
	DEC	C
	JR	J284A
;
;	-----------------
J2852:	LD	A,(DE)
	DEC	DE
	PUSH	DE
	LD	HL,HOLD8+7
J2858:	ADD	A,A
	JR	C,J2863
;
	JR	Z,J2871
;
J285D:	LD	DE,8
	ADD	HL,DE
	JR	J2858
;
;	-----------------
J2863:	PUSH	AF
	LD	B,08H	; 8 
	LD	DE,DAC+7
	PUSH	HL
	CALL	C2761
;
	POP	HL
	POP	AF
	JR	J285D
;
;	-----------------
J2871:	LD	B,0FH	; 15 
	LD	DE,DAC+14
	LD	HL,DAC+15
	CALL	C2EFE
;
	LD	(HL),00H
	POP	DE
	DEC	C
	JR	NZ,J2852
;
	RET	
;
;	-----------------
J2883:	DEC	HL
	LD	A,(HL)
	INC	HL
	LD	(HL),A
	JP	C26FA			; normalize DAC
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C288A:	LD	HL,-8
	ADD	HL,DE
	LD	C,03H	; 3 
J2890:	LD	B,08H	; 8 
	OR	A
J2893:	LD	A,(DE)
	ADC	A,A
	DAA	
	LD	(HL),A
	DEC	HL
	DEC	DE
	DJNZ	J2893
;
	DEC	C
	JR	NZ,J2890
;
	RET	
;
;	-----------------
;
;	  Subroutine DECDIV
;	     Inputs  ________________________
;	     Outputs ________________________
;
C289F:	LD	A,(ARG)
	OR	A
	JP	Z,J4058
;
	LD	B,A
	LD	HL,DAC
	LD	A,(HL)
	OR	A
	JP	Z,J2E7D
;
	XOR	B
	AND	80H
	LD	C,A
	RES	7,B
	LD	A,(HL)
	AND	7FH
	SUB	B
	LD	B,A
	RRA	
	XOR	B
	AND	40H	; "@"
	LD	(HL),00H
	JR	Z,J28C9
;
	LD	A,B
	AND	80H
	RET	NZ
;
J28C6:	JP	J4067
;
;	-----------------
J28C9:	LD	A,B
	ADD	A,41H	; "A"
	AND	7FH
	LD	(HL),A
	JR	Z,J28C6
;
	OR	C
	LD	(HL),00H
	DEC	HL
	LD	(HL),A
	LD	DE,DAC+7
	LD	HL,ARG+7
	LD	B,07H	; 7 
	XOR	A
J28DF:	CP	(HL)
	JR	NZ,J28E6
;
	DEC	DE
	DEC	HL
	DJNZ	J28DF
;
J28E6:	LD	(DECTM2),HL
	EX	DE,HL
	LD	(DECTMP),HL
	LD	A,B
	LD	(DECCNT),A
	LD	HL,HOLD8+56
J28F4:	LD	B,0FH	; 15 
J28F6:	PUSH	HL
	PUSH	BC
	LD	HL,(DECTM2)
	EX	DE,HL
	LD	HL,(DECTMP)
	LD	A,(DECCNT)
	LD	C,0FFH
J2904:	INC	C
	LD	B,A
	PUSH	HL
	PUSH	DE
	XOR	A
	EX	DE,HL
J290A:	LD	A,(DE)
	SBC	A,(HL)
	DAA	
	LD	(DE),A
	DEC	HL
	DEC	DE
	DJNZ	J290A
;
	LD	A,(DE)
	SBC	A,B
	LD	(DE),A
	POP	DE
	POP	HL
	LD	A,(DECCNT)
	JR	NC,J2904
;
	LD	B,A
	EX	DE,HL
	CALL	C2761
;
	JR	NC,J2925
;
	EX	DE,HL
	INC	(HL)
J2925:	LD	A,C
	POP	BC
	LD	C,A
	PUSH	BC
	SRL	B
	INC	B
	LD	E,B
	LD	D,00H
	LD	HL,0F7F5H
	ADD	HL,DE
	CALL	C279A
;
	POP	BC
	POP	HL
	LD	A,B
	INC	C
	DEC	C
	JR	NZ,J2973
;
	CP	0FH	; 15 
	JR	Z,J2964
;
	RRCA	
	RLCA	
	JR	NC,J2973
;
	PUSH	BC
	PUSH	HL
	LD	HL,DAC
	LD	B,08H	; 8 
	XOR	A
J294D:	CP	(HL)
	JR	NZ,J295F
;
	INC	HL
	DJNZ	J294D
;
	POP	HL
	POP	BC
	SRL	B
	INC	B
	XOR	A
J2959:	LD	(HL),A
	INC	HL
	DJNZ	J2959
;
	JR	J2985
;
;	-----------------
J295F:	POP	HL
	POP	BC
	LD	A,B
	JR	J2973
;
;	-----------------
J2964:	LD	A,(DECCNT+1)
	LD	E,A
	DEC	A
	LD	(DECCNT+1),A
	XOR	E
	JP	P,J28F4
;
	JP	J2E7D
;
;	-----------------
J2973:	RRA	
	LD	A,C
	JR	C,J297C
;
	OR	(HL)
	LD	(HL),A
	INC	HL
	JR	J2981
;
;	-----------------
J297C:	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	(HL),A
J2981:	DEC	B
	JP	NZ,J28F6
;
J2985:	LD	HL,DAC+8
	LD	DE,HOLD8+63
	LD	B,08H	; 8 
	CALL	C2EFE
;
	JP	J2883

;	  Subroutine COS function
;	     Inputs  ________________________
;	     Outputs ________________________

C2993:	LD	HL,I2D63
	CALL	C2C3B			; DAC = DAC * 0.15915494309190
	LD	A,(DAC)
	AND	7FH
	LD	(DAC),A
	LD	HL,I2D23
	CALL	C2C32			; DAC = DAC - 0.25
	CALL	C2E8D			; NEG DAC
	JR	J29B2

;	  Subroutine SIN function
;	     Inputs  ________________________
;	     Outputs ________________________

C29AC:	LD	HL,I2D63
	CALL	C2C3B			; DAC = DAC * 0.15915494309190
J29B2:	LD	A,(DAC)
	OR	A
	CALL	M,C2C80
	CALL	C2CCC			; push DAC
	CALL	INT
	CALL	C2C4D			; ARG = DAC
	CALL	C2CE1			; pop DAC
	CALL	C268C			; DAC - ARG
	LD	A,(DAC)
	CP	40H
	JP	C,J29F5
	LD	A,(DAC+1)
	CP	25H
	JP	C,J29F5
	CP	75H
	JP	NC,J29EC
	CALL	C2C4D			; ARG = DAC
	LD	HL,I2D11
	CALL	C2C5C			; DAC = 0.5
	CALL	C268C			; DAC - ARG
	JP	J29F5

J29EC:	LD	HL,I2D1B
	CALL	C2C50			; ARG = 1.0
	CALL	C268C			; DAC - ARG
J29F5:	LD	HL,I2DEF
	JP	C2C88			; polynomial approximation odd series

;	  Subroutine TAN function
;	     Inputs  ________________________
;	     Outputs ________________________

C29FB:	CALL	C2CCC			; push DAC
	CALL	C2993			; COS DAC
	CALL	C2C6F			; exchange DAC with stack
	CALL	C29AC			; SIN DAC
	CALL	C2CDC			; pop ARG
	LD	A,(ARG)
	OR	A
	JP	NZ,C289F		; DAC / ARG and quit
	JP	J4067

;	  Subroutine ATN function
;	     Inputs  ________________________
;	     Outputs ________________________

C2A14:	LD	A,(DAC)
	OR	A
	RET	Z
	CALL	M,C2C80
	CP	41H	; "A"
	JP	C,C2A3C
	CALL	C2C4D			; ARG = DAC
	LD	HL,I2D1B
	CALL	C2C5C			; DAC = 1.0
	CALL	C289F			; DAC / ARG
	CALL	C2A3C
	CALL	C2C4D			; ARG = DAC
	LD	HL,I2D43
	CALL	C2C5C			; DAC = 1.5707963267949
	JP	C268C			; DAC - ARG
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2A3C:	LD	HL,I2D4B
	CALL	C2C47			; compare DAC with 0.26794919243112
	JP	M,C2A6C
	CALL	C2CCC			; push DAC
	LD	HL,I2D53
	CALL	C2C2C			; DAC = DAC + 1.7320508075689
	CALL	C2C6F			; exchange DAC with stack
	LD	HL,I2D53
	CALL	C2C3B			; DAC = DAC * 1.7320508075689
	LD	HL,I2D1B
	CALL	C2C32			; DAC = DAC - 1.0
	CALL	C2CDC			; pop ARG
	CALL	C289F			; DAC / ARG
	CALL	C2A6C
	LD	HL,I2D5B
	JP	C2C2C			; DAC = DAC + 0.52359877559830

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C2A6C:	LD	HL,I2E30
	JP	C2C88			; polynomial approximation odd series

;	  Subroutine LOG function
;	     Inputs  ________________________
;	     Outputs ________________________

C2A72:	CALL	C2E71			; get sign DAC
	JP	M,C475A
	JP	Z,C475A
	LD	HL,DAC
	LD	A,(HL)
	PUSH	AF
	LD	(HL),41H
	LD	HL,I2D2B
	CALL	C2C47			; compare DAC with 3.1622776601684
	JP	M,J2A92
	POP	AF
	INC	A
	PUSH	AF
	LD	HL,DAC
	DEC	(HL)
J2A92:	POP	AF
	LD	(TEMP3),A
	CALL	C2CCC			; push DAC
	LD	HL,I2D1B
	CALL	C2C2C			; DAC = DAC + 1.0
	CALL	C2C6F			; exchange DAC with stack
	LD	HL,I2D1B
	CALL	C2C32			; DAC = DAC - 1.0
;
	CALL	C2CDC			; pop ARG
;
	CALL	C289F			; DAC / ARG
	CALL	C2CCC			; push DAC
	CALL	C2C38			; DAC = DAC^2
	CALL	C2CCC			; push DAC
	CALL	C2CCC			; push DAC
;
	LD	HL,I2DC6
	CALL	C2CA3
;
	CALL	C2C6F			; exchange DAC with stack
;
	LD	HL,I2DA5
	CALL	C2CA3
;
	CALL	C2CDC			; pop ARG
;
	CALL	C289F			; DAC / ARG
;
	CALL	C2CDC			; pop ARG
;
	CALL	C27E6			; DAC * ARG
	LD	HL,I2D33
	CALL	C2C2C			; DAC = DAC + 0.86858896380650
	CALL	C2CDC			; pop ARG
;
	CALL	C27E6			; DAC * ARG
;
	CALL	C2CCC			; push DAC
;
	LD	A,(TEMP3)
	SUB	41H	; "A"
	LD	L,A
	ADD	A,A
	SBC	A,A
	LD	H,A
	CALL	C2FCB			; convert to single precision real
	CALL	C3042
	CALL	C2CDC			; pop ARG
	CALL	C269A			; DAC + ARG
	LD	HL,I2D3B
	JP	C2C3B			; DAC = DAC * 2.3025850929940

;	  Subroutine SQR function
;	     Inputs  ________________________
;	     Outputs ________________________

C2AFF:	CALL	C2E71			; get sign DAC
	RET	Z
	JP	M,C475A
	CALL	C2C4D			; ARG = DAC
	LD	A,(DAC)
	OR	A
	RRA	
	ADC	A,20H	; " "
	LD	(ARG),A
	LD	A,(DAC+1)
	OR	A
	RRCA	
	OR	A
	RRCA	
	AND	33H	; "3"
	ADD	A,10H	; 16 
	LD	(ARG+1),A
	LD	A,07H	; 7 
J2B23:	LD	(TEMP3),A
	CALL	C2CCC			; push DAC
	CALL	C2CC7			; push ARG
	CALL	C289F			; DAC / ARG
	CALL	C2CDC			; pop ARG
	CALL	C269A			; DAC + ARG
	LD	HL,I2D11
	CALL	C2C3B			: DAC = DAC * 0.5
	CALL	C2C4D			; ARG = DAC
	CALL	C2CE1			; pop DAC
	LD	A,(TEMP3)
	DEC	A
	JR	NZ,J2B23
	JP	C2C59			; DAC = ARG

;	  Subroutine EXP function
;	     Inputs  ________________________
;	     Outputs ________________________

C2B4A:	LD	HL,I2D09
	CALL	C2C3B			; DAC = DAC * 0.43429448190324
	CALL	C2CCC			; push DAC
	CALL	C2F8A			; convert DAC to integer
	LD	A,L
	RLA	
	SBC	A,A
	CP	H
	JR	Z,J2B70
	LD	A,H
	OR	A
	JP	P,J2B6D
	CALL	C304F
	CALL	C2CE1			; pop DAC
	LD	HL,I2D13
	JP	C2C5C			; DAC = 0
;
;	-----------------
J2B6D:	JP	J4067
;
;	-----------------
J2B70:	LD	(TEMP3),HL
	CALL	C303A			; convert DAC to double real
	CALL	C2C4D			; ARG = DAC
	CALL	C2CE1			; pop DAC
	CALL	C268C			; DAC - ARG
	LD	HL,I2D11
	CALL	C2C47			; compare DAC with 0.5
	PUSH	AF
	JR	Z,J2B90
	JR	C,J2B90
	LD	HL,I2D11
	CALL	C2C32			; DAC = DAC - 0.5
J2B90:	CALL	C2CCC			; push DAC
	LD	HL,I2D8C
	CALL	C2C88			; polynomial approximation odd series
	CALL	C2C6F			; exchange DAC with stack
	LD	HL,I2D6B
	CALL	C2C9A			; polynomial approximation even series
	CALL	C2CDC			; pop ARG
	CALL	C2CC7			; push ARG
	CALL	C2CCC			; push DAC
	CALL	C268C			; DAC - ARG
	LD	HL,HOLD8+56
	CALL	C2C67			; = DAC
	CALL	C2CDC			; pop ARG
	CALL	C2CE1			; pop DAC
	CALL	C269A			; DAC + ARG
	LD	HL,HOLD8+56
	CALL	C2C50			; ARG =
	CALL	C289F			; DAC / ARG
	POP	AF
	JR	C,J2BD1
	JR	Z,J2BD1
	LD	HL,I2D2B
	CALL	C2C3B			; DAC = DAC * 3.1622776601684
J2BD1:	LD	A,(TEMP3)
	LD	HL,DAC
	LD	C,(HL)
	ADD	A,(HL)
	LD	(HL),A
	XOR	C
	RET	P
	JP	J4067

;	  Subroutine RND function
;	     Inputs  ________________________
;	     Outputs ________________________

C2BDF:	CALL	C2E71			; get sign DAC
	LD	HL,RNDX
	JR	Z,J2C15
	CALL	M,C2C67			; = DAC
	LD	HL,HOLD8+56
	LD	DE,RNDX
	CALL	C2C6A			; = RNDX
	LD	HL,I2CF9
	CALL	C2C50			; ARG = 0.21132486540519
	LD	HL,I2CF1
	CALL	C2C5C			; DAC = 0.14389820420821
	LD	DE,HOLD8+63
	CALL	C282E
	LD	DE,DAC+8
	LD	HL,RNDX+1
	LD	B,07H	; 7 
	CALL	C2EF7
	LD	HL,RNDX
	LD	(HL),00H
J2C15:	CALL	C2C5C			; DAC =
	LD	HL,DAC
	LD	(HL),40H
	XOR	A
	LD	(DAC+8),A
	JP	C26FA			; normalize DAC

;	  Subroutine initialize RNDX
;	     Inputs  ________________________
;	     Outputs ________________________

C2C24:	LD	DE,I2D01
	LD	HL,RNDX
	JR	C2C6A			; RNDX = 0.40649651372358 and quit

;	  Subroutine DAC = DAC + operand
;	     Inputs  HL = pointer to operand
;	     Outputs ________________________

C2C2C:	CALL	C2C50			; ARG =
	JP	C269A			; DAC + ARG

;	  Subroutine DAC = DAC - operand
;	     Inputs  HL = pointer to operand
;	     Outputs ________________________

C2C32:	CALL	C2C50			; ARG =
	JP	C268C			; DAC - ARG

;	  Subroutine DAC = DAC^2
;	     Inputs  ________________________
;	     Outputs ________________________

C2C38:	LD	HL,DAC

;	  Subroutine DAC = DAC * operand
;	     Inputs  HL = pointer to operand
;	     Outputs ________________________

C2C3B:	CALL	C2C50			; ARG =
	JP	C27E6			; DAC * ARG and quit

;	  Subroutine DAC = DAC / operand
;	     Inputs  HL = pointer to operand
;	     Outputs ________________________
;	     Remark  unused code

?2C41:	CALL	C2C50			; ARG =
	JP	C289F			; DAC / ARG and quit

;	  Subroutine compare with DAC
;	     Inputs  HL = pointer to operand
;	     Outputs ________________________

C2C47:	CALL	C2C50			; ARG =
	JP	C2F5C			; compare double real

;	  Subroutine MAF (copy DAC to ARG)
;	     Inputs  ________________________
;	     Outputs ________________________

C2C4D:	LD	HL,DAC

;	  Subroutine MAM (copy HL to ARG)
;	     Inputs  ________________________
;	     Outputs ________________________

C2C50:	LD	DE,ARG

;	  Subroutine MOV8DH (copy HL to DE)
;	     Inputs  ________________________
;	     Outputs ________________________

J2C53:	EX	DE,HL
	CALL	C2C6A			; copy
	EX	DE,HL
	RET	

;	  Subroutine MFA (copy ARG to DAC)
;	     Inputs  ________________________
;	     Outputs ________________________

C2C59:	LD	HL,ARG

;	  Subroutine MFM (copy HL to DAC)
;	     Inputs  ________________________
;	     Outputs ________________________

C2C5C:	LD	DE,DAC
	JR	J2C53

;	  Subroutine initialize RNDX
;	     Inputs  HL = value
;	     Outputs ________________________
;	     Remark  unused code

?2C61:	CALL	C2FCB			; convert to single precision real
	LD	HL,RNDX

;	  Subroutine MMF (copy DAC to HL)
;	     Inputs  ________________________
;	     Outputs ________________________

C2C67:	LD	DE,DAC

;	  Subroutine MOV8HD
;	     Inputs  ________________________
;	     Outputs ________________________

C2C6A:	LD	B,8
	JP	C2EF7

;	  Subroutine XTF (exchange DAC with stack)
;	     Inputs  ________________________
;	     Outputs ________________________

C2C6F:	POP	HL
	LD	(FBUFFR),HL
	CALL	C2CDC			; pop ARG
	CALL	C2CCC			; push DAC
	CALL	C2C59			; DAC = ARG
	LD	HL,(FBUFFR)
	JP	(HL)

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C2C80:	CALL	C2E8D			; NEG DAC
	LD	HL,C2E8D
	EX	(SP),HL			; NEG DAC afterwards
	JP	(HL)

;	  Subroutine polynomial approximation odd series
;	     Inputs  ________________________
;	     Outputs ________________________

C2C88:	LD	(FBUFFR),HL
	CALL	C2CCC			; push DAC
	LD	HL,(FBUFFR)
	CALL	C2C9A			; polynomial approximation even series
	CALL	C2CDC			; pop ARG
	JP	C27E6			; DAC * ARG and quit

;	  Subroutine polynomial approximation even series
;	     Inputs  ________________________
;	     Outputs ________________________

C2C9A:	LD	(FBUFFR),HL
	CALL	C2C38			; DAC = DAC^2
	LD	HL,(FBUFFR)

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C2CA3:	LD	A,(HL)
	PUSH	AF
	INC	HL
	PUSH	HL
	LD	HL,FBUFFR
	CALL	C2C67			; = DAC
	POP	HL
	CALL	C2C5C			; DAC =
J2CB1:	POP	AF
	DEC	A
	RET	Z
	PUSH	AF
	PUSH	HL
	LD	HL,FBUFFR
	CALL	C2C3B			; DAC = DAC * .
	POP	HL
	CALL	C2C50			; ARG =
	PUSH	HL
	CALL	C269A			; DAC + ARG
	POP	HL
	JR	J2CB1

;	  Subroutine PHA (push ARG on stack)
;	     Inputs  ________________________
;	     Outputs ________________________

C2CC7:	LD	HL,ARG+7
	JR	J2CCF

;	  Subroutine PHF (push DAC on stack)
;	     Inputs  ________________________
;	     Outputs ________________________

C2CCC:	LD	HL,DAC+7
J2CCF:	LD	A,04H
	POP	DE
J2CD2:	LD	B,(HL)
	DEC	HL
	LD	C,(HL)
	DEC	HL
	PUSH	BC
	DEC	A
	JR	NZ,J2CD2
	EX	DE,HL
	JP	(HL)

;	  Subroutine PPA (pop ARG from stack)
;	     Inputs  ________________________
;	     Outputs ________________________

C2CDC:	LD	HL,ARG
	JR	J2CE4

;	  Subroutine PPF (pop DAC from stack)
;	     Inputs  ________________________
;	     Outputs ________________________

C2CE1:	LD	HL,DAC
J2CE4:	LD	A,04H
	POP	DE
J2CE7:	POP	BC
	LD	(HL),C
	INC	HL
	LD	(HL),B
	INC	HL
	DEC	A
	JR	NZ,J2CE7
	EX	DE,HL
	JP	(HL)

I2CF1:	DEFB	000H,014H,038H,098H,020H,042H,008H,021H		; 0.14389820420821
I2CF9:	DEFB	000H,021H,013H,024H,086H,054H,005H,019H		; 0.21132486540519
I2D01:	DEFB	000H,040H,064H,096H,051H,037H,023H,058H		; 0.40649651372358
I2D09:	DEFB	040H,043H,042H,094H,048H,019H,003H,024H		; 0.43429448190324
I2D11:	DEFB	040H,050H					; 0.5
I2D13:	DEFB	000H,000H,000H,000H,000H,000H,000H,000H		; 0.0
I2D1B:	DEFB	041H,010H,000H,000H,000H,000H,000H,000H		; 1.0
I2D23:	DEFB	040H,025H,000H,000H,000H,000H,000H,000H		; 0.25
I2D2B:	DEFB	041H,031H,062H,027H,076H,060H,016H,084H		; 3.1622776601684
I2D33:	DEFB	040H,086H,085H,088H,096H,038H,006H,050H		; 0.86858896380650
I2D3B:	DEFB	041H,023H,002H,058H,050H,092H,099H,040H		; 2.3025850929940
I2D43:	DEFB	041H,015H,070H,079H,063H,026H,079H,049H		; 1.5707963267949
I2D4B:	DEFB	040H,026H,079H,049H,019H,024H,031H,012H		; 0.26794919243112
I2D53:	DEFB	041H,017H,032H,005H,008H,007H,056H,089H		; 1.7320508075689
I2D5B:	DEFB	040H,052H,035H,098H,077H,055H,098H,030H		; 0.52359877559830
I2D63:	DEFB	040H,015H,091H,054H,094H,030H,091H,090H		; 0.15915494309190
I2D6B:	DEFB	4
	DEFB	041H,010H,000H,000H,000H,000H,000H,000H		; 1.0
	DEFB	043H,015H,093H,074H,015H,023H,060H,031H		; 159.37415236031
	DEFB	044H,027H,009H,031H,069H,040H,085H,016H		; 2709.3169408516
	DEFB	044H,044H,097H,063H,035H,057H,040H,058H		; 4497.6335574058
I2D8C:	DEFB	3
	DEFB	042H,018H,031H,023H,060H,015H,092H,075H		; 18.312360159275
	DEFB	043H,083H,014H,006H,072H,012H,093H,071H		; 831.40672129371
	DEFB	044H,051H,078H,009H,019H,091H,051H,062H		; 5178.0919915162
I2DA5:	DEFB	4
	DEFB	0C0H,071H,043H,033H,082H,015H,032H,026H		; -0.71433382153226
	DEFB	041H,062H,050H,036H,051H,012H,079H,008H		; 6.2503651127908
	DEFB	0C2H,013H,068H,023H,070H,024H,015H,003H		; -13.682370241503
	DEFB	041H,085H,016H,073H,019H,087H,023H,089H		; 8.5167319872389
I2DC6:	DEFB	5
	DEFB	041H,010H,000H,000H,000H,000H,000H,000H		; 1.0
	DEFB	0C2H,013H,021H,004H,078H,035H,001H,056H		; -13.210478350156
	DEFB	042H,047H,092H,052H,056H,004H,038H,073H		; 47.925256043873
	DEFB	0C2H,064H,090H,066H,082H,074H,009H,043H		; -64.906682740943
	DEFB	042H,029H,041H,057H,050H,017H,023H,023H		; 29.415750172323
I2DEF:	DEFB	8
	DEFB	0C0H,069H,021H,056H,092H,029H,018H,009H		; -0.69215692291809
	DEFB	041H,038H,017H,028H,086H,038H,057H,071H		; 3.8172886385771
	DEFB	0C2H,015H,009H,044H,099H,047H,048H,001H		; -15.094499474801
	DEFB	042H,042H,005H,086H,089H,066H,073H,055H		; 42.058689667355
	DEFB	0C2H,076H,070H,058H,059H,068H,032H,091H		; -76.705859683291
	DEFB	042H,081H,060H,052H,049H,027H,055H,013H		; 81.605249275513
	DEFB	0C2H,041H,034H,017H,002H,024H,003H,098H		; -41.341702240398
	DEFB	041H,062H,083H,018H,053H,007H,017H,096H		; 6.2831853071796
I2E30:	DEFB	8
	DEFB	0BFH,052H,008H,069H,039H,004H,000H,000H		; -0.05208693904000
	DEFB	03FH,075H,030H,071H,049H,013H,048H,000H		; 0.07530714913480
	DEFB	0BFH,090H,081H,034H,032H,024H,070H,050H		; -0.09081343224705
	DEFB	040H,011H,011H,007H,094H,018H,040H,029H		; 0.11110794184029
	DEFB	0C0H,014H,028H,057H,008H,055H,048H,084H		; -0.14285708554884
	DEFB	040H,019H,099H,099H,099H,094H,089H,067H		; 0.19999999948967
	DEFB	0C0H,033H,033H,033H,033H,033H,031H,060H		; -0.33333333333160
	DEFB	041H,010H,000H,000H,000H,000H,000H,000H		; 1.0

;	  Subroutine SIGN
;	     Inputs  ________________________
;	     Outputs ________________________

C2E71:	LD	A,(DAC+0)
	OR	A
	RET	Z
	DEFB	0FEH		; CP xx, skip next instruction
J2E77:	CPL
J2E78:	RLA	
J2E79:	SBC	A,A
	RET	NZ
	INC	A
	RET	

J2E7D:	XOR	A
	LD	(DAC+0),A
	RET	

;	  Subroutine ABS function
;	     Inputs  ________________________
;	     Outputs ________________________

C2E82:	CALL	C2EA1
;
	RET	P
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2E86:	RST	GETYPR
;
	JP	M,J322B
;
	JP	Z,J406D

;	  Subroutine NEG
;	     Inputs  ________________________
;	     Outputs ________________________

C2E8D:	LD	HL,DAC
J2E90:	LD	A,(HL)
	OR	A
	RET	Z
;
	XOR	80H
	LD	(HL),A
	RET	

;	  Subroutine SGN function
;	     Inputs  ________________________
;	     Outputs ________________________

C2E97:	CALL	C2EA1
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2E9A:	LD	L,A
	RLA	
	SBC	A,A
	LD	H,A
	JP	C2F99			; put HL in DAC
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2EA1:	RST	GETYPR
	JP	Z,J406D
	JP	P,C2E71			; get sign DAC and quit
	LD	HL,(DAC+2)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2EAB:	LD	A,H
J2EAC:	OR	L
	RET	Z
;
J2EAE:	LD	A,H
	JR	J2E78

;	  Subroutine PUSHF (push DAC on stack, single)
;	     Inputs  ________________________
;	     Outputs ________________________

C2EB1:	EX	DE,HL
	LD	HL,(DAC+2)
	EX	(SP),HL
	PUSH	HL
	LD	HL,(DAC+0)
	EX	(SP),HL
	PUSH	HL
	EX	DE,HL
	RET	

;	  Subroutine MOVFM (DAC =)
;	     Inputs  HL = adres
;	     Outputs ________________________

C2EBE:	CALL	C2EDF			; load from HL (single)

;	  Subroutine MOVFR (DAC =)
;	     Inputs  DEBC = single
;	     Outputs ________________________

C2EC1:	EX	DE,HL
	LD	(DAC+2),HL
	LD	H,B
	LD	L,C
	LD	(DAC+0),HL
	EX	DE,HL
	RET	

;	  Subroutine MOVRF (= DAC)
;	     Inputs  none
;	     Outputs DEBC = single

C2ECC:	LD	HL,(DAC+2)
	EX	DE,HL
	LD	HL,(DAC+0)
	LD	C,L
	LD	B,H
	RET	

;	  Subroutine MOVRMI
;	     Inputs  HL = adres
;	     Outputs DEBC =

C2ED6:	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	RET	

;	  Subroutine MOVRM
;	     Inputs  HL = adres
;	     Outputs BCDE =

C2EDF:	LD	E,(HL)
	INC	HL

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C2EE1:	LD	D,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2EE6:	INC	HL
	RET	

;	  Subroutine MOVMF (DAC =)
;	     Inputs  ________________________
;	     Outputs ________________________

C2EE8:	LD	DE,DAC

;	  Subroutine MOVE ( =)
;	     Inputs  ________________________
;	     Outputs ________________________

C2EEB:	LD	B,4
	JR	C2EF7

;	  Subroutine VMOVAM (ARG =)
;	     Inputs  ________________________
;	     Outputs ________________________

C2EEF:	LD	DE,ARG

;	  Subroutine MOVVFM (DE = HL)
;	     Inputs  ________________________
;	     Outputs ________________________

C2EF2:	EX	DE,HL

;	  Subroutine VMOVE (HL = DE)
;	     Inputs  ________________________
;	     Outputs ________________________

C2EF3:	LD	A,(VALTYP)
	LD	B,A

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C2EF7:	LD	A,(DE)
	LD	(HL),A
	INC	DE
	INC	HL
	DJNZ	C2EF7
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2EFE:	LD	A,(DE)
	LD	(HL),A
	DEC	DE
	DEC	HL
	DJNZ	C2EFE
	RET	

;	  Subroutine VMOVFA (DAC = ARG)
;	     Inputs  _______________________
;	     Outputs ________________________

C2F05:	LD	HL,ARG

;	  Subroutine VMOVFM (DAC = HL)
;	     Inputs  _______________________
;	     Outputs ________________________

C2F08:	LD	DE,C2EF2		; afterwards DE = HL
	JR	J2F13			; load DAC adres

;	  Subroutine VMOVAF (ARG = DAC)
;	     Inputs  ________________________
;	     Outputs ________________________

C2F0D:	LD	HL,ARG

;	  Subroutine VMOVMF (HL = DAC)
;	     Inputs  ________________________
;	     Outputs ________________________

C2F10:	LD	DE,C2EF3		; afterwards HL = DE
J2F13:	PUSH	DE
	LD	DE,DAC+0
	LD	A,(VALTYP)
	CP	4
	RET	NC
	LD	DE,DAC+2
	RET	

;	  Subroutine FCOMP (compare single real)
;	     Inputs  DEBC = first operand, (DAC) = second operand
;	     Outputs ________________________

C2F21:	LD	A,C
	OR	A
	JP	Z,C2E71			; get sign DAC and quit
	LD	HL,J2E77
	PUSH	HL
	CALL	C2E71			; get sign DAC
	LD	A,C
	RET	Z
	LD	HL,DAC
	XOR	(HL)
	LD	A,C
	RET	M
	CALL	C2F3B
	RRA	
	XOR	C
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2F3B:	LD	A,C
	CP	(HL)
	RET	NZ
;
	INC	HL
	LD	A,B
	CP	(HL)
	RET	NZ
;
	INC	HL
	LD	A,E
	CP	(HL)
	RET	NZ
;
	INC	HL
	LD	A,D
	SUB	(HL)
	RET	NZ
;
	POP	HL
	POP	HL
	RET	

;	  Subroutine ICOMP (compare integer)
;	     Inputs  ________________________
;	     Outputs ________________________

C2F4D:	LD	A,D
	XOR	H
	LD	A,H
	JP	M,J2E78
	CP	D
	JR	NZ,J2F59
	LD	A,L
	SUB	E
	RET	Z
J2F59:	JP	J2E79

;	  Subroutine XDCOMP (compare double real)
;	     Inputs  ________________________
;	     Outputs ________________________

C2F5C:	LD	DE,ARG
	LD	A,(DE)
	OR	A
	JP	Z,C2E71			; get sign DAC and quit
	LD	HL,J2E77
	PUSH	HL
	CALL	C2E71			; get sign DAC
	LD	A,(DE)
	LD	C,A
	RET	Z
	LD	HL,DAC
	XOR	(HL)
	LD	A,C
	RET	M
	LD	B,08H	; 8 
J2F76:	LD	A,(DE)
	SUB	(HL)
	JR	NZ,J2F80
	INC	DE
	INC	HL
D2F7C:	DJNZ	J2F76
	POP	BC
	RET	

J2F80:	RRA	
	XOR	C
	RET	
;
;	-----------------
C2F83:	CALL	C2F5C			; compare double real
	JP	NZ,J2E77
	RET	

;	  Subroutine FRCINT (convert DAC to integer), also CINT function
;	     Inputs  ________________________
;	     Outputs ________________________

C2F8A:	RST	GETYPR
;
	LD	HL,(DAC+2)
	RET	M
;
	JP	Z,J406D
;
	CALL	C305D
;
	JP	C,J4067
;
	EX	DE,HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2F99:	LD	(DAC+2),HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2F9C:	LD	A,02H	; 2 
J2F9E:	LD	(VALTYP),A
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C2FA2:	LD	BC,032C5H
	LD	DE,08076H
	CALL	C2F21			; compare single real
	RET	NZ			; not -32768 SGN, quit
	LD	HL,08000H		; -32768 INT
J2FAF:	POP	DE			; remove return adres
	JR	C2F99			; put HL in DAC

;	  Subroutine FRCSNG (convert DAC to single real), also CSNG function
;	     Inputs  ________________________
;	     Outputs ________________________

C2FB2:	RST	GETYPR
	RET	PO
	JP	M,C2FC8
	JP	Z,J406D
	CALL	C3053
	CALL	C3752
	INC	HL
	LD	A,B
	OR	A
	RRA	
	LD	B,A
	JP	C2741
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C2FC8:	LD	HL,(DAC+2)

;	  Subroutine convert to single precision real
;	     Inputs  HL = integer value
;	     Outputs ________________________

C2FCB:	LD	A,H
J2FCC:	OR	A
	PUSH	AF
	CALL	M,C3221
;
	CALL	C3053
;
	EX	DE,HL
	LD	HL,0
	LD	(DAC),HL
	LD	(DAC+2),HL
	LD	A,D
	OR	E
	JP	Z,J66A7
;
	LD	BC,0500H
	LD	HL,DAC+1
	PUSH	HL
	LD	HL,J3030
J2FED:	LD	A,0FFH
	PUSH	DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	EX	(SP),HL
	PUSH	BC
J2FF6:	LD	B,H
	LD	C,L
	ADD	HL,DE
	INC	A
	JR	C,J2FF6
;
	LD	H,B
	LD	L,C
	POP	BC
	POP	DE
	EX	DE,HL
	INC	C
	DEC	C
	JR	NZ,J3010
;
	OR	A
	JR	Z,J3024
;
	PUSH	AF
	LD	A,40H	; "@"
	ADD	A,B
	LD	(DAC),A
	POP	AF
J3010:	INC	C
	EX	(SP),HL
	PUSH	AF
	LD	A,C
	RRA	
	JR	NC,J301F
;
	POP	AF
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	(HL),A
	JR	J3023
;
;	-----------------
J301F:	POP	AF
	OR	(HL)
	LD	(HL),A
	INC	HL
J3023:	EX	(SP),HL
J3024:	LD	A,D
	OR	E
	JR	Z,J302A
;
	DJNZ	J2FED
;
J302A:	POP	HL
	POP	AF
	RET	P
	JP	C2E8D			; NEG DAC
;
;	-----------------
J3030:	DEFW	0D8F0H
	DEFW	0FC18H
	DEFW	0FF9CH
	DEFW	0FFF6H
	DEFW	0FFFFH

;	  Subroutine FRCDBL (convert DAC to double real), also CDBL function
;	     Inputs  ________________________
;	     Outputs ________________________

C303A:	RST	GETYPR
;
	RET	NC
;
	JP	Z,J406D
;
	CALL	M,C2FC8
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3042:	LD	HL,0
	LD	(DAC+4),HL
	LD	(DAC+6),HL
	LD	A,H
	LD	(DAC+8),A
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C304F:	LD	A,08H	; 8 
	JR	J3055
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3053:	LD	A,04H	; 4 
J3055:	JP	J2F9E
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3058:	RST	GETYPR
	RET	Z
	JP	J406D
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C305D:	LD	HL,I30BA
	PUSH	HL
	LD	HL,DAC
	LD	A,(HL)
	AND	7FH
	CP	46H	; "F"
	RET	NC
;
	SUB	41H	; "A"
	JR	NC,J3074
;
	OR	A
	POP	DE
	LD	DE,0
	RET	
;
;	-----------------
J3074:	INC	A
	LD	B,A
	LD	DE,0
	LD	C,D
	INC	HL
J307B:	LD	A,C
	INC	C
	RRA	
	LD	A,(HL)
	JR	C,J3087
;
	RRA	
	RRA	
	RRA	
	RRA	
	JR	J3088
;
;	-----------------
J3087:	INC	HL
J3088:	AND	0FH	; 15 
	LD	(DECTMP),HL
	LD	H,D
	LD	L,E
	ADD	HL,HL
	RET	C
;
	ADD	HL,HL
	RET	C
;
	ADD	HL,DE
	RET	C
;
	ADD	HL,HL
	RET	C
;
	LD	E,A
	LD	D,00H
	ADD	HL,DE
	RET	C
;
	EX	DE,HL
	LD	HL,(DECTMP)
	DJNZ	J307B
;
	LD	HL,08000H
	RST	DCOMPR
;
	LD	A,(DAC)
	RET	C
;
	JR	Z,J30B6
;
	POP	HL
	OR	A
	RET	P
;
	EX	DE,HL
	CALL	C3221
;
	EX	DE,HL
	OR	A
	RET	
;
;	-----------------
J30B6:	OR	A
	RET	P
;
	POP	HL
	RET	
;
;	-----------------
I30BA:	SCF	
	RET	
;
;	-----------------
;	Unused Code ?
;	-----------------
?.30BC:	DEC	BC
	RET	

;	  Subroutine FIXER (round DAC), also FIX function
;	     Inputs  ________________________
;	     Outputs ________________________

C30BE:	RST	GETYPR
	RET	M
	CALL	C2E71			; get sign DAC
	JP	P,INT
	CALL	C2E8D			; NEG DAC
	CALL	INT
	JP	C2E86

;	  Subroutine INT function
;	     Inputs  ________________________
;	     Outputs ________________________

INT:	RST	GETYPR
;
	RET	M
;
	LD	HL,DAC+8
	LD	C,0EH	; 14 
	JR	NC,J30E0
;
	JP	Z,J406D
;
	LD	HL,DAC+4
	LD	C,06H	; 6 
J30E0:	LD	A,(DAC)
	OR	A
	JP	M,J3100
;
	AND	7FH
	SUB	41H	; "A"
	JP	C,J2E7D
;
	INC	A
	SUB	C
	RET	NC
;
	CPL	
	INC	A
	LD	B,A
J30F4:	DEC	HL
	LD	A,(HL)
	AND	0F0H
	LD	(HL),A
	DEC	B
	RET	Z
;
	XOR	A
	LD	(HL),A
	DJNZ	J30F4
;
	RET	
;
;	-----------------
J3100:	AND	7FH
	SUB	41H	; "A"
	JR	NC,J310C
;
	LD	HL,-1
	JP	C2F99			; put HL in DAC
;
;	-----------------
J310C:	INC	A
	SUB	C
	RET	NC
;
	CPL	
	INC	A
	LD	B,A
	LD	E,00H
J3114:	DEC	HL
	LD	A,(HL)
	LD	D,A
	AND	0F0H
	LD	(HL),A
	CP	D
	JR	Z,J311E
;
	INC	E
J311E:	DEC	B
	JR	Z,J3129
;
	XOR	A
	LD	(HL),A
	CP	D
	JR	Z,J3127
;
	INC	E
J3127:	DJNZ	J3114
;
J3129:	INC	E
	DEC	E
	RET	Z
;
	LD	A,C
	CP	06H	; 6 
	LD	BC,10C1H
	LD	DE,0
	JP	Z,C324E
;
	EX	DE,HL
	LD	(ARG+6),HL
	LD	(ARG+4),HL
	LD	(ARG+2),HL
	LD	H,B
	LD	L,C
	LD	(ARG),HL
	JP	C269A			; DAC + ARG

;	  Subroutine UMULT (unsigned integer multiply)
;	     Inputs  ________________________
;	     Outputs ________________________

C314A:	PUSH	HL
	LD	HL,0
	LD	A,B
	OR	C
	JR	Z,J3164
	LD	A,10H	; 16 
J3154:	ADD	HL,HL
	JP	C,J601D
	EX	DE,HL
	ADD	HL,HL
	EX	DE,HL
	JR	NC,J3161
	ADD	HL,BC
	JP	C,J601D
J3161:	DEC	A
	JR	NZ,J3154
J3164:	EX	DE,HL
	POP	HL
	RET	

;	  Subroutine ISUB (subtract integer)
;	     Inputs  ________________________
;	     Outputs ________________________

C3167:	LD	A,H
	RLA	
	SBC	A,A
	LD	B,A
	CALL	C3221
;
	LD	A,C
	SBC	A,B
	JR	J3175

;	  Subroutine IADD (add integer)
;	     Inputs  ________________________
;	     Outputs ________________________

C3172:	LD	A,H
	RLA	
	SBC	A,A
J3175:	LD	B,A
	PUSH	HL
	LD	A,D
	RLA	
	SBC	A,A
	ADD	HL,DE
	ADC	A,B
	RRCA	
	XOR	H
	JP	P,J2FAF
	PUSH	BC
	EX	DE,HL
	CALL	C2FCB			; convert to single precision real
	POP	AF
	POP	HL
	CALL	C2EB1			; push DAC (single)
	CALL	C2FCB			; convert to single precision real
	POP	BC
	POP	DE
	JP	C324E

;	  Subroutine IMULT (multiply integer)
;	     Inputs  ________________________
;	     Outputs ________________________

C3193:	LD	A,H
	OR	L
	JP	Z,C2F99			; put HL in DAC
;
	PUSH	HL
	PUSH	DE
	CALL	C3215
;
	PUSH	BC
	LD	B,H
	LD	C,L
	LD	HL,0
	LD	A,10H	; 16 
J31A5:	ADD	HL,HL
	JR	C,J31C7
;
	EX	DE,HL
	ADD	HL,HL
	EX	DE,HL
	JR	NC,J31B0
;
	ADD	HL,BC
	JR	C,J31C7
;
J31B0:	DEC	A
	JR	NZ,J31A5
;
	POP	BC
	POP	DE
J31B5:	LD	A,H
	OR	A
	JP	M,J31BF
;
	POP	DE
	LD	A,B
	JP	J321D
;
;	-----------------
J31BF:	XOR	80H
	OR	L
	JR	Z,J31D8
;
	EX	DE,HL
	JR	J31C9
;
;	-----------------
J31C7:	POP	BC
	POP	HL
J31C9:	CALL	C2FCB			; convert to single precision real
	POP	HL
	CALL	C2EB1			; push DAC (single)
	CALL	C2FCB			; convert to single precision real
	POP	BC
	POP	DE
	JP	C325C
;
;	-----------------
J31D8:	LD	A,B
	OR	A
	POP	BC
	JP	M,C2F99			; put HL in DAC
	PUSH	DE
	CALL	C2FCB			; convert to single precision real
;
	POP	DE
	JP	C2E8D			; NEG DAC

;	  Subroutine IDIV (integer divide)
;	     Inputs  ________________________
;	     Outputs ________________________

C31E6:	LD	A,H
	OR	L
	JP	Z,J4058
;
	CALL	C3215
;
	PUSH	BC
	EX	DE,HL
	CALL	C3221
;
	LD	B,H
	LD	C,L
	LD	HL,0
	LD	A,11H	; 17 
	OR	A
	JR	J3206
;
;	-----------------
J31FD:	PUSH	HL
	ADD	HL,BC
	JR	NC,J3205
;
	INC	SP
	INC	SP
	SCF
	DEFB	030H			; skip next instruction
J3205:	POP	HL
J3206:	RL	E
	RL	D
	ADC	HL,HL
	DEC	A
	JR	NZ,J31FD
;
	EX	DE,HL
	POP	BC
	PUSH	DE
	JP	J31B5
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3215:	LD	A,H
	XOR	D
	LD	B,A
	CALL	C321C
;
	EX	DE,HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C321C:	LD	A,H
J321D:	OR	A
	JP	P,C2F99			; put HL in DAC
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3221:	XOR	A
	LD	C,A
	SUB	L
	LD	L,A
	LD	A,C
	SBC	A,H
	LD	H,A
	JP	C2F99			; put HL in DAC
;
;	-----------------
J322B:	LD	HL,(DAC+2)
	CALL	C3221
;
	LD	A,H
	XOR	80H
	OR	L
	RET	NZ
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3236:	XOR	A
	JP	J2FCC

;	  Subroutine IMOD (integer mod)
;	     Inputs  ________________________
;	     Outputs ________________________

C323A:	PUSH	DE
	CALL	C31E6			; integer divide
	XOR	A
	ADD	A,D
	RRA	
	LD	H,A
	LD	A,E
	RRA	
	LD	L,A
	CALL	C2F9C
	POP	AF
	JR	J321D



;	-----------------
;	Unused Code ?
;	-----------------


?.324B:	CALL	C2EDF			; load from HL (single)
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C324E:	CALL	C3280
;
	CALL	C3042
;
	JP	C269A			; DAC + ARG
;
;	-----------------
C3257:	CALL	C2E8D			; NEG DAC
	JR	C324E

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C325C:	CALL	C3280
	CALL	C3042
	JP	C27E6			; DAC * ARG and quit
;
;	-----------------
J3265:	POP	BC
	POP	DE
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3267:	LD	HL,(DAC+2)
	EX	DE,HL
	LD	(DAC+2),HL
	PUSH	BC
	LD	HL,(DAC)
	EX	(SP),HL
	LD	(DAC),HL
	POP	BC
	CALL	C3280
	CALL	C3042
	JP	C289F			; DAC / ARG and quit
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3280:	EX	DE,HL
	LD	(ARG+2),HL
	LD	H,B
	LD	L,C
	LD	(ARG+0),HL
	LD	HL,0
	LD	(ARG+4),HL
	LD	(ARG+6),HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3293:	DEC	A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3295:	DEC	HL
	RET	
;
;	-----------------
J3297:	POP	HL
	RET	

;	  Subroutine FIN (convert text to number)
;	     Inputs  ________________________
;	     Outputs ________________________

C3299:	EX	DE,HL
	LD	BC,00FFH
	LD	H,B
	LD	L,B
	CALL	C2F99			; put HL in DAC
;
	EX	DE,HL
	LD	A,(HL)
	CP	26H	; "&"
	JP	Z,C4EB8
;
	CP	2DH	; "-"
	PUSH	AF
	JR	Z,J32B3
;
	CP	2BH	; "+"
	JR	Z,J32B3
;
	DEC	HL
J32B3:	RST	CHRGTR
;
	JP	C,J3386
;
	CP	2EH	; "."
	JP	Z,J334F
;
	CP	65H	; "e"
	JR	Z,J32C2
;
	CP	45H	; "E"
J32C2:	JR	NZ,J32DE
;
	PUSH	HL
	RST	CHRGTR
;
	CP	6CH	; "l"
	JR	Z,J32D4
;
	CP	4CH	; "L"
	JR	Z,J32D4
;
	CP	71H	; "q"
	JR	Z,J32D4
;
	CP	51H	; "Q"
J32D4:	POP	HL
	JR	Z,J32DD
;
	RST	GETYPR
;
	JR	NC,J32F5
;
	XOR	A
	JR	J32F6
;
;	-----------------
J32DD:	LD	A,(HL)
J32DE:	CP	25H	; "%"
	JP	Z,J3362
;
	CP	23H	; "#"
	JP	Z,J3370
;
	CP	21H	; "!"
	JP	Z,J3371
;
	CP	64H	; "d"
	JR	Z,J32F5
;
	CP	44H	; "D"
	JR	NZ,J331E
;
J32F5:	OR	A
J32F6:	CALL	C3377
;
	RST	CHRGTR
;
	PUSH	DE
	LD	D,00H
	CALL	C4F47
;
	LD	C,D
	POP	DE
J3302:	RST	CHRGTR
;
	JR	NC,J3318
;
	LD	A,E
	CP	0CH	; 12 
	JR	NC,J3314
;
	RLCA	
	RLCA	
	ADD	A,E
	RLCA	
	ADD	A,(HL)
	SUB	30H	; "0"
	LD	E,A
	JR	J3302
;
;	-----------------
J3314:	LD	E,80H
	JR	J3302
;
;	-----------------
J3318:	INC	C
	JR	NZ,J331E
;
	XOR	A
	SUB	E
	LD	E,A
J331E:	RST	GETYPR
;
	JP	M,J3334
;
	LD	A,(DAC)
	OR	A
	JR	Z,J3334
;
	LD	A,D
	SUB	B
	ADD	A,E
	ADD	A,40H	; "@"
	LD	(DAC),A
	OR	A
	CALL	M,C334C
;
J3334:	POP	AF
	PUSH	HL
	CALL	Z,C2E86
;
	RST	GETYPR
;
	JR	NC,J3347
;
	POP	HL
	RET	PE
;
	PUSH	HL
	LD	HL,J3297
	PUSH	HL
	CALL	C2FA2
;
	RET	
;
;	-----------------
J3347:	CALL	C273C			; round DAC
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C334C:	JP	J4067
;
;	-----------------
J334F:	RST	GETYPR
;
	INC	C
	JR	NZ,J331E
;
	JR	NC,J335F
;
	CALL	C3377
;
	LD	A,(DAC)
	OR	A
	JR	NZ,J335F
;
	LD	D,A
J335F:	JP	J32B3
;
;	-----------------
J3362:	RST	CHRGTR
;
	POP	AF
	PUSH	HL
	LD	HL,J3297
	PUSH	HL
	LD	HL,C2F8A
	PUSH	HL			; convert DAC to integer
	PUSH	AF
	JR	J331E
;
;	-----------------
J3370:	OR	A
J3371:	CALL	C3377
;
	RST	CHRGTR
;
	JR	J331E
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3377:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CALL	Z,C2FB2			; convert DAC to single real
	POP	AF
	CALL	NZ,C303A		; convert DAC to double real
;
	POP	BC
	POP	DE
	POP	HL
	RET	
;
;	-----------------
J3386:	SUB	30H	; "0"
	JP	NZ,J3393
;
	OR	C
	JP	Z,J3393
;
	AND	D
	JP	Z,J32B3
;
J3393:	INC	D
	LD	A,D
	CP	07H	; 7 
	JR	NZ,J339D
;
	OR	A
	CALL	C3377
;
J339D:	PUSH	DE
	LD	A,B
	ADD	A,C
	INC	A
	LD	B,A
	PUSH	BC
	PUSH	HL
	LD	A,(HL)
	SUB	30H	; "0"
	PUSH	AF
	RST	GETYPR
;
	JP	P,J33D1
;
	LD	HL,(DAC+2)
	LD	DE,0CCDH
	RST	DCOMPR
;
	JR	NC,J33CE
;
	LD	D,H
	LD	E,L
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,HL
	POP	AF
	LD	C,A
	ADD	HL,BC
	LD	A,H
	OR	A
	JP	M,J33CC
;
	LD	(DAC+2),HL
J33C6:	POP	HL
	POP	BC
	POP	DE
	JP	J32B3
;
;	-----------------
J33CC:	LD	A,C
	PUSH	AF
J33CE:	CALL	C2FC8
;
J33D1:	POP	AF
	POP	HL
	POP	BC
	POP	DE
	JR	NZ,J33E3
;
	LD	A,(DAC)
	OR	A
	LD	A,00H
	JR	NZ,J33E3
;
	LD	D,A
	JP	J32B3
;
;	-----------------
J33E3:	PUSH	DE
	PUSH	BC
	PUSH	HL
	PUSH	AF
	LD	HL,DAC
	LD	(HL),01H	; 1 
	LD	A,D
	CP	10H	; 16 
	JR	C,J33F4
;
	POP	AF
	JR	J33C6
;
;	-----------------
J33F4:	INC	A
	OR	A
	RRA	
	LD	B,00H
	LD	C,A
	ADD	HL,BC
	POP	AF
	LD	C,A
	LD	A,D
	RRA	
	LD	A,C
	JR	NC,J3406
;
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
J3406:	OR	(HL)
	LD	(HL),A
	JR	J33C6
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C340A:	PUSH	HL
	LD	HL,I3FD2
	CALL	C6678
;
	POP	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3412:	LD	BC,I6677
	PUSH	BC
	CALL	C2F99			; put HL in DAC
	XOR	A
	LD	(TEMP3),A
	LD	HL,FBUFFR+1
	LD	(HL)," "
	OR	(HL)
	JR	J3441

;	  Subroutine FOUT (convert DAC to text, unformatted)
;	     Inputs  ________________________
;	     Outputs ________________________

C3425:	XOR	A
;
;	  Subroutine PUFOUT (convert DAC to text, formatted)
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3426:	CALL	C375F
;
	AND	08H	; 8 
	JR	Z,J342F
;
	LD	(HL),"+"
J342F:	EX	DE,HL
	CALL	C2EA1
;
	EX	DE,HL
	JP	P,J3441
;
	LD	(HL),"-"
	PUSH	BC
	PUSH	HL
	CALL	C2E86
;
	POP	HL
	POP	BC
	OR	H
J3441:	INC	HL
	LD	(HL),30H	; "0"
	LD	A,(TEMP3)
	LD	D,A
	RLA	
	LD	A,(VALTYP)
	JP	C,J34F7
;
	JP	Z,J34EF
;
	CP	04H	; 4 
	JP	NC,J34A1
;
	LD	BC,0
	CALL	C36DB
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C345D:	LD	HL,FBUFFR+1
	LD	B,(HL)
	LD	C,20H	; " "
	LD	A,(TEMP3)
	LD	E,A
	AND	20H	; " "
	JR	Z,J3477
;
	LD	A,B
	CP	C
	LD	C,2AH	; "*"
	JR	NZ,J3477
;
	LD	A,E
	AND	04H	; 4 
	JR	NZ,J3477
;
	LD	B,C
J3477:	LD	(HL),C
	RST	CHRGTR
;
	JR	Z,J348F
;
	CP	45H	; "E"
	JR	Z,J348F
;
	CP	44H	; "D"
	JR	Z,J348F
;
	CP	30H	; "0"
	JR	Z,J3477
;
	CP	2CH	; ","
	JR	Z,J3477
;
	CP	2EH	; "."
	JR	NZ,J3492
;
J348F:	DEC	HL
	LD	(HL),30H	; "0"
J3492:	LD	A,E
	AND	10H	; 16 
	JR	Z,J349A
;
	DEC	HL
	LD	(HL),CHRCUR
J349A:	LD	A,E
	AND	04H	; 4 
	RET	NZ
;
	DEC	HL
	LD	(HL),B
	RET	
;
;	-----------------
J34A1:	PUSH	HL
	CALL	C3752
;
	LD	D,B
	INC	D
	LD	BC,0300H
	LD	A,(DAC)
	SUB	3FH	; "?"
	JR	C,J34B9
;
	INC	D
	CP	D
	JR	NC,J34B9
;
	INC	A
	LD	B,A
	LD	A,02H	; 2 
J34B9:	SUB	02H	; 2 
	POP	HL
	PUSH	AF
	CALL	C368E
;
	LD	(HL),30H	; "0"
	CALL	Z,C2EE6
;
	CALL	C36B3
;
J34C8:	DEC	HL
	LD	A,(HL)
	CP	30H	; "0"
	JR	Z,J34C8
;
	CP	2EH	; "."
	CALL	NZ,C2EE6
;
	POP	AF
	JR	Z,J34F0
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C34D6:	LD	(HL),45H	; "E"
	INC	HL
	LD	(HL),2BH	; "+"
	JP	P,J34E2
;
	LD	(HL),2DH	; "-"
	CPL	
	INC	A
J34E2:	LD	B,2FH	; "/"
J34E4:	INC	B
	SUB	0AH	; 10 
	JR	NC,J34E4
;
	ADD	A,3AH	; ":"
	INC	HL
	LD	(HL),B
	INC	HL
	LD	(HL),A
J34EF:	INC	HL
J34F0:	LD	(HL),00H
	EX	DE,HL
	LD	HL,FBUFFR+1
	RET	
;
;	-----------------
J34F7:	INC	HL
	PUSH	BC
	CP	04H	; 4 
	LD	A,D
	JP	NC,J3566
;
	RRA	
	JP	C,J35EF
;
	LD	BC,0603H
	CALL	C3686
;
	POP	DE
	LD	A,D
	SUB	05H	; 5 
	CALL	P,C3666
;
	CALL	C36DB
;
J3513:	LD	A,E
	OR	A
	CALL	Z,C3295
;
	DEC	A
	CALL	P,C3666
;
J351C:	PUSH	HL
	CALL	C345D
;
	POP	HL
	JR	Z,J3525
;
	LD	(HL),B
	INC	HL
J3525:	LD	(HL),00H
	LD	HL,FBUFFR
J352A:	INC	HL
J352B:	LD	A,(TEMP2)
	SUB	L
	SUB	D
	RET	Z
;
	LD	A,(HL)
	CP	20H	; " "
	JR	Z,J352A
;
	CP	2AH	; "*"
	JR	Z,J352A
;
	DEC	HL
	PUSH	HL
I353C:	PUSH	AF
	LD	BC,I353C
	PUSH	BC
	RST	CHRGTR
;
	CP	2DH	; "-"
	RET	Z
;
	CP	2BH	; "+"
	RET	Z
;
	CP	CHRCUR
	RET	Z
;
	POP	BC
	CP	30H	; "0"
	JR	NZ,J355F
;
	INC	HL
	RST	CHRGTR
;
	JR	NC,J355F
;
	DEC	HL
	JR	J3559
;
;	-----------------
J3557:	DEC	HL
	LD	(HL),A
J3559:	POP	AF
	JR	Z,J3557
;
	POP	BC
	JR	J352B
;
;	-----------------
J355F:	POP	AF
	JR	Z,J355F
;
	POP	HL
	LD	(HL),25H	; "%"
	RET	
;
;	-----------------
J3566:	PUSH	HL
	RRA	
	JP	C,J35F5
;
	CALL	C3752
;
	LD	D,B
	LD	A,(DAC)
	SUB	4FH	; "O"
	JR	C,J3581
;
	POP	HL
	POP	BC
	CALL	C3425			; convert DAC to text, unformatted
	LD	HL,FBUFFR
	LD	(HL),25H	; "%"
	RET	
;
;	-----------------
J3581:	CALL	C2E71			; get sign DAC
	CALL	NZ,C37A2
;
	POP	HL
	POP	BC
	JP	M,J35A6
;
	PUSH	BC
	LD	E,A
	LD	A,B
	SUB	D
	SUB	E
	CALL	P,C3666
;
	CALL	C367A
;
	CALL	C36B3
;
	OR	E
	CALL	NZ,C3674
;
	OR	E
	CALL	NZ,C36A0
;
	POP	DE
	JP	J3513
;
;	-----------------
J35A6:	LD	E,A
	LD	A,C
	OR	A
	CALL	NZ,C3293
;
	ADD	A,E
	JP	M,J35B1
;
	XOR	A
J35B1:	PUSH	BC
	PUSH	AF
	CALL	M,C377B
;
	POP	BC
	LD	A,E
	SUB	B
	POP	BC
	LD	E,A
	ADD	A,D
	LD	A,B
	JP	M,J35CB
;
	SUB	D
	SUB	E
	CALL	P,C3666
;
	PUSH	BC
	CALL	C367A
;
	JR	J35DC
;
;	-----------------
J35CB:	CALL	C3666
;
	LD	A,C
	CALL	C36A3
;
	LD	C,A
	XOR	A
	SUB	D
	SUB	E
	CALL	C3666
;
	PUSH	BC
	LD	B,A
	LD	C,A
J35DC:	CALL	C36B3
;
	POP	BC
	OR	C
	JR	NZ,J35E6
;
	LD	HL,(TEMP2)
J35E6:	ADD	A,E
	DEC	A
	CALL	P,C3666
;
	LD	D,B
	JP	J351C
;
;	-----------------
J35EF:	PUSH	HL
	PUSH	DE
	CALL	C2FC8
;
	POP	DE
J35F5:	CALL	C3752
;
	LD	E,B
	CALL	C2E71			; get sign DAC
;
	PUSH	AF
	CALL	NZ,C37A2
;
	POP	AF
	POP	HL
	POP	BC
	PUSH	AF
	LD	A,C
	OR	A
	PUSH	AF
	CALL	NZ,C3293
;
	ADD	A,B
	LD	C,A
	LD	A,D
	AND	04H	; 4 
	CP	01H	; 1 
	SBC	A,A
	LD	D,A
	ADD	A,C
	LD	C,A
	SUB	E
	PUSH	AF
	JP	P,J3628
;
	CALL	C377B
;
	JR	NZ,J3628
;
	PUSH	HL
	CALL	C27DB
;
	LD	HL,DAC
	INC	(HL)
	POP	HL
J3628:	POP	AF
	PUSH	BC
	PUSH	AF
	JP	M,J362F
;
	XOR	A
J362F:	CPL	
	INC	A
	ADD	A,B
	INC	A
	ADD	A,D
	LD	B,A
	LD	C,00H
	CALL	Z,C368E
;
	CALL	C36B3
;
	POP	AF
	CALL	P,C366E
;
	CALL	C36A0
;
	POP	BC
	POP	AF
	JR	NZ,J3654
;
	CALL	C3295
;
	LD	A,(HL)
	CP	2EH	; "."
	CALL	NZ,C2EE6
;
	LD	(TEMP2),HL
J3654:	POP	AF
	LD	A,(DAC)
	JR	Z,J365D
;
	ADD	A,E
	SUB	B
	SUB	D
J365D:	PUSH	BC
	CALL	C34D6
;
	EX	DE,HL
	POP	DE
	JP	J351C
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3666:	OR	A
J3667:	RET	Z
;
	DEC	A
	LD	(HL),30H	; "0"
	INC	HL
	JR	J3667
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C366E:	JR	NZ,C3674
;
J3670:	RET	Z
;
	CALL	C36A0
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3674:	LD	(HL),30H	; "0"
	INC	HL
	DEC	A
	JR	J3670
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C367A:	LD	A,E
	ADD	A,D
	INC	A
	LD	B,A
	INC	A
J367F:	SUB	03H	; 3 
	JR	NC,J367F
;
	ADD	A,05H	; 5 
	LD	C,A
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3686:	LD	A,(TEMP3)
	AND	40H	; "@"
	RET	NZ
;
	LD	C,A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C368E:	DEC	B
	JP	P,J36A1
;
	LD	(TEMP2),HL
	LD	(HL),2EH	; "."
J3697:	INC	HL
	LD	(HL),30H	; "0"
	INC	B
	LD	C,B
	JR	NZ,J3697
;
	INC	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C36A0:	DEC	B
J36A1:	JR	NZ,J36AB
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C36A3:	LD	(HL),2EH	; "."
	LD	(TEMP2),HL
	INC	HL
	LD	C,B
	RET	
;
;	-----------------
J36AB:	DEC	C
	RET	NZ
;
	LD	(HL),2CH	; ","
	INC	HL
	LD	C,03H	; 3 
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C36B3:	PUSH	DE
	PUSH	HL
	PUSH	BC
	CALL	C3752
;
	LD	A,B
	POP	BC
	POP	HL
	LD	DE,DAC+1
	SCF	
J36C0:	PUSH	AF
	CALL	C36A0
;
	LD	A,(DE)
	JR	NC,J36CD
;
	RRA	
	RRA	
	RRA	
	RRA	
	JR	J36CE
;
;	-----------------
J36CD:	INC	DE
J36CE:	AND	0FH	; 15 
	ADD	A,30H	; "0"
	LD	(HL),A
	INC	HL
	POP	AF
	DEC	A
	CCF	
	JR	NZ,J36C0
;
	JR	J370A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C36DB:	PUSH	DE
	LD	DE,I3710
	LD	A,05H	; 5 
J36E1:	CALL	C36A0
;
	PUSH	BC
	PUSH	AF
	PUSH	HL
	EX	DE,HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	PUSH	BC
	INC	HL
	EX	(SP),HL
	EX	DE,HL
	LD	HL,(DAC+2)
	LD	B,2FH	; "/"
J36F4:	INC	B
	LD	A,L
	SUB	E
	LD	L,A
	LD	A,H
	SBC	A,D
	LD	H,A
	JR	NC,J36F4
;
	ADD	HL,DE
	LD	(DAC+2),HL
	POP	DE
	POP	HL
	LD	(HL),B
	INC	HL
	POP	AF
	POP	BC
	DEC	A
	JR	NZ,J36E1
;
J370A:	CALL	C36A0
;
	LD	(HL),A
	POP	DE
	RET	
;
;	-----------------
I3710:	DEFW	02710H
	DEFW	003E8H
	DEFW	00064H
	DEFW	0000AH
	DEFW	00001H

;	  Subroutine FOUTB (convert integer to binary text)
;	     Inputs  ________________________
;	     Outputs ________________________

C371A:	LD	B,1
	JR	J3724

;	  Subroutine FOUTO (convert integer to octal text)
;	     Inputs  ________________________
;	     Outputs ________________________

C371E:	LD	B,3
	JR	J3724

;	  Subroutine FOUTH (convert integer to hexadecimal text)
;	     Inputs  ________________________
;	     Outputs ________________________

C3722:	LD	B,4
J3724:	PUSH	BC
	CALL	C5439			; convert adres to INT
	LD	DE,FBUFFR+17
	XOR	A
	LD	(DE),A
	POP	BC
	LD	C,A
J372F:	PUSH	BC
	DEC	DE
J3731:	AND	A
	LD	A,H
	RRA	
	LD	H,A
	LD	A,L
	RRA	
	LD	L,A
	LD	A,C
J3739:	RRA	
	LD	C,A
	DJNZ	J3731
;
	POP	BC
	PUSH	BC
J373F:	RLCA	
	DJNZ	J373F
;
	ADD	A,30H	; "0"
	CP	3AH	; ":"
	JR	C,J374A
;
	ADD	A,07H	; 7 
J374A:	LD	(DE),A
	POP	BC
	LD	A,L
	OR	H
	JR	NZ,J372F
;
	EX	DE,HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3752:	RST	GETYPR
;
	LD	HL,DAC+7
	LD	B,0EH	; 14 
	RET	NC
;
	LD	HL,DAC+3
	LD	B,06H	; 6 
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C375F:	LD	(TEMP3),A
	PUSH	AF
	PUSH	BC
	PUSH	DE
	CALL	C303A			; convert DAC to double real
	LD	HL,I2D13
	LD	A,(DAC)
	AND	A
	CALL	Z,C2C5C			; ?, DAC = 0
	POP	DE
	POP	BC
	POP	AF
	LD	HL,FBUFFR+1
	LD	(HL),20H	; " "
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C377B:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CPL	
	INC	A
	LD	E,A
	LD	A,01H	; 1 
	JP	Z,J379C
;
	CALL	C3752
;
	PUSH	HL
J378B:	CALL	C27DB
;
	DEC	E
	JR	NZ,J378B
;
	POP	HL
	INC	HL
	LD	A,B
	RRCA	
	LD	B,A
	CALL	C2741
;
	CALL	C37B4
;
J379C:	POP	BC
	ADD	A,B
	POP	BC
	POP	DE
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C37A2:	PUSH	BC
	PUSH	HL
	CALL	C3752
;
	LD	A,(DAC)
	SUB	40H	; "@"
	SUB	B
	LD	(DAC),A
	POP	HL
	POP	BC
	OR	A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C37B4:	PUSH	BC
	CALL	C3752
;
J37B8:	LD	A,(HL)
	AND	0FH	; 15 
	JR	NZ,J37C5
;
	DEC	B
	LD	A,(HL)
	OR	A
	JR	NZ,J37C5
;
	DEC	HL
	DJNZ	J37B8
;
J37C5:	LD	A,B
	POP	BC
	RET	

;	  Subroutine SGNEXP (single real to the power)
;	     Inputs  ________________________
;	     Outputs ________________________

C37C8:	CALL	C3280
;
	CALL	C3042
;
	CALL	C2CC7			; push ARG
;
	CALL	C2C6F			; exchange DAC with stack
;
	CALL	C2CDC			; pop ARG

;	  Subroutine DBLEXP (double real to the power)
;	     Inputs  ________________________
;	     Outputs ________________________

C37D7:	LD	A,(ARG)
	OR	A
	JP	Z,J3843
;
	LD	H,A
	LD	A,(DAC)
	OR	A
	JP	Z,J384D
;
	CALL	C2CCC			; push DAC
;
	CALL	C391A
;
	JR	C,J382A
;
	EX	DE,HL
	LD	(TEMP8),HL
	CALL	C304F
;
	CALL	C2CDC			; pop ARG
;
	CALL	C391A
;
	CALL	C304F
;
	LD	HL,(TEMP8)
	JP	NC,J385A
;
	LD	A,(ARG)
	PUSH	AF
	PUSH	HL
	CALL	C2C59			; DAC = ARG
	LD	HL,FBUFFR
	CALL	C2C67			; = DAC
	LD	HL,I2D1B
	CALL	C2C5C			; DAC = 1.0
;
	POP	HL
	LD	A,H
	OR	A
	PUSH	AF
	JP	P,J3826
;
	XOR	A
	LD	C,A
	SUB	L
	LD	L,A
	LD	A,C
	SBC	A,H
	LD	H,A
J3826:	PUSH	HL
	JP	J3894
;
;	-----------------
J382A:	CALL	C304F
	CALL	C2C59			; DAC = ARG
	CALL	C2C6F			; exchange DAC with stack
	CALL	C2A72			; LOG DAC
	CALL	C2CDC			; pop ARG
	CALL	C27E6			; DAC * ARG
	JP	C2B4A			; EXP DAC

;	  Subroutine INTEXP (integer to the power)
;	     Inputs  ________________________
;	     Outputs ________________________

C383F:	LD	A,H
	OR	L
	JR	NZ,J3849
J3843:	LD	HL,1
	JP	J3857

J3849:	LD	A,D
	OR	E
	JR	NZ,J385A
J384D:	LD	A,H
	RLA	
	JR	NC,J3854
	JP	J4058

J3854:	LD	HL,0
J3857:	JP	C2F99			; put HL in DAC

J385A:	LD	(TEMP8),HL
	PUSH	DE
	LD	A,H
	OR	A
	PUSH	AF
	CALL	M,C3221
	LD	B,H
	LD	C,L
	LD	HL,1
J3869:	OR	A
	LD	A,B
	RRA	
	LD	B,A
	LD	A,C
	RRA	
	LD	C,A
	JR	NC,J3877
	CALL	C390D
	JR	NZ,J38C3
J3877:	LD	A,B
	OR	C
	JR	Z,J38DE
	PUSH	HL
	LD	H,D
	LD	L,E
	CALL	C390D
	EX	DE,HL
	POP	HL
	JR	Z,J3869
	PUSH	BC
	PUSH	HL
	LD	HL,FBUFFR
	CALL	C2C67			; = DAC
	POP	HL
	CALL	C2FCB			; convert to single precision real
	CALL	C3042
J3894:	POP	BC
	LD	A,B
	OR	A
	RRA	
	LD	B,A
	LD	A,C
	RRA	
	LD	C,A
	JR	NC,J38A6
	PUSH	BC
	LD	HL,FBUFFR
	CALL	C2C3B			; DAC = DAC * .
	POP	BC
J38A6:	LD	A,B
	OR	C
	JR	Z,J38DE
	PUSH	BC
	CALL	C2CCC			; push DAC
	LD	HL,FBUFFR
	PUSH	HL
	CALL	C2C5C			; DAC =
	POP	HL
	PUSH	HL
	CALL	C2C3B			; DAC = DAC * .
	POP	HL
	CALL	C2C67			; = DAC
	CALL	C2CE1			; pop DAC
	JR	J3894
;
;	-----------------
J38C3:	PUSH	BC
	PUSH	DE
	CALL	C303A			; convert DAC to double real
	CALL	C2C4D			; ARG = DAC
	POP	HL
	CALL	C2FCB			; convert to single precision real
	CALL	C3042
	LD	HL,FBUFFR
	CALL	C2C67			; = DAC
	CALL	C2C59			; DAC = ARG
;
	POP	BC
	JR	J38A6
;
;	-----------------
J38DE:	POP	AF
	POP	BC
	RET	P
;
	LD	A,(VALTYP)
	CP	02H	; 2 
	JR	NZ,J38F0
;
	PUSH	BC
	CALL	C2FCB			; convert to single precision real
;
	CALL	C3042
;
	POP	BC
J38F0:	LD	A,(DAC)
	OR	A
	JR	NZ,J3901
;
	LD	HL,(TEMP8)
	OR	H
	RET	P
;
	LD	A,L
	RRCA	
	AND	B
	JP	J4067
;
;	-----------------
J3901:	CALL	C2C4D			; ARG = DAC
	LD	HL,I2D1B
	CALL	C2C5C			; DAC = 1.0
	JP	C289F			; DAC / ARG
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C390D:	PUSH	BC
	PUSH	DE
	CALL	C3193			; integer multiply
	LD	A,(VALTYP)
	CP	02H	; 2 
	POP	DE
	POP	BC
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C391A:	CALL	C2C59			; DAC = ARG
	CALL	C2CC7			; push ARG
	CALL	INT
	CALL	C2CDC			; pop ARG
	CALL	C2F5C			; compare double real
	SCF	
	RET	NZ
	JP	C305D

I392E:	DEFW	C63EA
	DEFW	C4524
	DEFW	C6527
	DEFW	C485B
	DEFW	C4B6C
	DEFW	C5E9F
	DEFW	C4B9F
	DEFW	C4880
	DEFW	C47E8
	DEFW	C479E
	DEFW	C49E5
	DEFW	C63C9
	DEFW	C47B2
	DEFW	C4821
	DEFW	C485D
	DEFW	C63E3
	DEFW	C4A24
	DEFW	C64AF
	DEFW	C522E
	DEFW	C6286
	DEFW	C48E4
	DEFW	C401C
	DEFW	C501D
	DEFW	C5423
	DEFW	C6424
	DEFW	C6FB7
	DEFW	C703F
	DEFW	C4016
	DEFW	C4A1D
	DEFW	C5229
;
; MSX 1 had
;
; 	DEFW	CLS
;
	DEFW	C79A9
;
; Reason for change:
;
; End MSX 1 change
;

	DEFW	C51C9
	DEFW	C485D
	DEFW	C6438
	DEFW	C6439
	DEFW	C643E
	DEFW	C6477
	DEFW	C49AA
	DEFW	C495D
	DEFW	C53E2
	DEFW	C49B5
	DEFW	C5468
	DEFW	C4718
	DEFW	C471B
	DEFW	C471E
	DEFW	C4721
	DEFW	C4B0E
	DEFW	C6AB7
	DEFW	C7C52
	DEFW	C775B
	DEFW	C7758
	DEFW	C6C14
	DEFW	C6B5D
	DEFW	C6B5E
	DEFW	C6C2F
	DEFW	C7C48
	DEFW	C7C4D
	DEFW	C6BA3
	DEFW	C6C2A
	DEFW	C5B11
	DEFW	C7980
	DEFW	C5D6E
	DEFW	C59C5
	DEFW	BEEP
	DEFW	C73E5
	DEFW	C57EA
	DEFW	C57E5
	DEFW	C73CA
	DEFW	C79CC
	DEFW	C7BE2
	DEFW	C7A48
	DEFW	C7B37
	DEFW	C7B5A
	DEFW	C55A8
	DEFW	C7911
	DEFW	C786C
	DEFW	C7E4B
	DEFW	C73B7
	DEFW	C6EC6
	DEFW	C6E92
	DEFW	C7C16
	DEFW	C7C1B
	DEFW	C7C20
	DEFW	C7C25
	DEFW	C7C2A
	DEFW	C7C2F
	DEFW	C7C34
	DEFW	C7766


I39DE:	DEFW	C6861
	DEFW	C6891
	DEFW	C689A
	DEFW	C2E97			; SGN
	DEFW	INT
	DEFW	C2E82			; ABS
	DEFW	C2AFF			; SQR
	DEFW	C2BDF			; RND
	DEFW	C29AC			; SIN
	DEFW	C2A72			; LOG
	DEFW	C2B4A			; EXP
	DEFW	C2993			; COS
	DEFW	C29FB			; TAN
	DEFW	C2A14			; ATN
	DEFW	C69F2
	DEFW	C4001
	DEFW	C4FCC
	DEFW	C67FF
	DEFW	C6604
	DEFW	C68BB
	DEFW	C680B
	DEFW	C681B
	DEFW	C541C
	DEFW	C7BF5
	DEFW	C6848
	DEFW	C65F5
	DEFW	C65FA
	DEFW	C4FC7
	DEFW	C65FF
	DEFW	C2F8A			; CINT
	DEFW	C2FB2			; CSNG
	DEFW	C303A			; CDBL
	DEFW	C30BE			; FIX
	DEFW	C7940
	DEFW	C794C
	DEFW	C795A
	DEFW	C7969
	DEFW	C7C39
	DEFW	C6D39
	DEFW	C7C66
	DEFW	C7C6B
	DEFW	C7C70
	DEFW	C6D25
	DEFW	C6D03
	DEFW	C6D14
	DEFW	C7C57
	DEFW	C7C5C
	DEFW	C7C61

I3A3E:	DEFW	T3A72
	DEFW	T3A88
	DEFW	T3A9F
	DEFW	T3AF3
	DEFW	T3B2E
	DEFW	T3B4F
	DEFW	T3B69
	DEFW	T3B7B
	DEFW	T3B80
	DEFW	T3B9F
	DEFW	T3BA0
	DEFW	T3BA8
	DEFW	T3BE8
	DEFW	T3C09
	DEFW	T3C18
	DEFW	T3C2B
	DEFW	T3C5D
	DEFW	T3C5E
	DEFW	T3C8E
	DEFW	T3CDB
	DEFW	T3CF6
	DEFW	T3CFF
	DEFW	T3D16
	DEFW	T3D20
	DEFW	T3D24
	DEFW	T3D25 

T3A72:	KEYWRD	<AUTO>,0A9H
	KEYWRD	<AND>,0F6H
	KEYWRD	<ABS>,006H
	KEYWRD	<ATN>,00EH
	KEYWRD	<ASC>,015H
	KEYWRD	<ATTR$>,0E9H
	DEFB	0

T3A88:	KEYWRD	<BASE>,0C9H
	KEYWRD	<BSAVE>,0D0H
	KEYWRD	<BLOAD>,0CFH
	KEYWRD	<BEEP>,0C0H
	KEYWRD	<BIN$>,01DH
	DEFB	0

T3A9F:	KEYWRD	<CALL>,0CAH
	KEYWRD	<CLOSE>,0B4H
	KEYWRD	<COPY>,0D6H
	KEYWRD	<CONT>,099H
	KEYWRD	<CLEAR>,092H
	KEYWRD	<CLOAD>,09BH
	KEYWRD	<CSAVE>,09AH
	KEYWRD	<CSRLIN>,0E8H
	KEYWRD	<CINT>,01EH
	KEYWRD	<CSNG>,01FH
	KEYWRD	<CDBL>,020H
	KEYWRD	<CVI>,028H
	KEYWRD	<CVS>,029H
	KEYWRD	<CVD>,02AH
	KEYWRD	<COS>,00CH
	KEYWRD	<CHR$>,016H
	KEYWRD	<CIRCLE>,0BCH
	KEYWRD	<COLOR>,0BDH
	KEYWRD	<CLS>,09FH
	KEYWRD	<CMD>,0D7H
	DEFB	0

;
T3AF3:	KEYWRD	<DELETE>,0A8H
	KEYWRD	<DATA>,084H
	KEYWRD	<DIM>,086H
	KEYWRD	<DEFSTR>,0ABH
	KEYWRD	<DEFINT>,0ACH
	KEYWRD	<DEFSNG>,0ADH
	KEYWRD	<DEFDBL>,0AEH
	KEYWRD	<DSKO$>,0D1H
	KEYWRD	<DEF>,097H
	KEYWRD	<DSKI$>,0EAH
	KEYWRD	<DSKF>,026H
	KEYWRD	<DRAW>,0BEH
	DEFB	0

T3B2E:	KEYWRD	<ELSE>,0A1H
	KEYWRD	<END>,081H
	KEYWRD	<ERASE>,0A5H
	KEYWRD	<ERROR>,0A6H
	KEYWRD	<ERL>,0E1H
	KEYWRD	<ERR>,0E2H
	KEYWRD	<EXP>,00BH
	KEYWRD	<EOF>,02BH
	KEYWRD	<EQV>,0F9H
	DEFB	0

T3B4F:	KEYWRD	<FOR>,082H
	KEYWRD	<FIELD>,0B1H
	KEYWRD	<FILES>,0B7H
	KEYWRD	<FN>,0DEH
	KEYWRD	<FRE>,00FH
	KEYWRD	<FIX>,021H
	KEYWRD	<FPOS>,027H
	DEFB	0

T3B69:	KEYWRD	<GOTO>,089H
	KEYWRD	<GO TO>,089H
	KEYWRD	<GOSUB>,08DH
	KEYWRD	<GET>,0B2H
	DEFB	0

T3B7B:	KEYWRD	<HEX$>,01BH
	DEFB	0

T3B80:	KEYWRD	<INPUT>,085H
	KEYWRD	<IF>,08BH
	KEYWRD	<INSTR>,0E5H
	KEYWRD	<INT>,005H
	KEYWRD	<INP>,010H
	KEYWRD	<IMP>,0FAH
	KEYWRD	<INKEY$>,0ECH
	KEYWRD	<IPL>,0D5H
	DEFB	0

T3B9F:	DEFB	0

T3BA0:	KEYWRD	<KILL>,0D4H
	KEYWRD	<KEY>,0CCH
	DEFB	0

T3BA8:	KEYWRD	<LPRINT>,09DH
	KEYWRD	<LLIST>,09EH
	KEYWRD	<LPOS>,01CH
	KEYWRD	<LET>,088H
	KEYWRD	<LOCATE>,0D8H
	KEYWRD	<LINE>,0AFH
	KEYWRD	<LOAD>,0B5H
	KEYWRD	<LSET>,0B8H
	KEYWRD	<LIST>,093H
	KEYWRD	<LFILES>,0BBH
	KEYWRD	<LOG>,00AH
	KEYWRD	<LOC>,02CH
	KEYWRD	<LEN>,012H
	KEYWRD	<LEFT$>,001H
	KEYWRD	<LOF>,02DH
	DEFB	0

T3BE8:	KEYWRD	<MOTOR>,0CEH
	KEYWRD	<MERGE>,0B6H
	KEYWRD	<MOD>,0FBH
	KEYWRD	<MKI$>,02EH
	KEYWRD	<MKS$>,02FH
	KEYWRD	<MKD$>,030H
	KEYWRD	<MID$>,003H
	KEYWRD	<MAX>,0CDH
	DEFB	0

T3C09:	KEYWRD	<NEXT>,083H
	KEYWRD	<NAME>,0D3H
	KEYWRD	<NEW>,094H
	KEYWRD	<NOT>,0E0H
	DEFB	0

T3C18:	KEYWRD	<OPEN>,0B0H
	KEYWRD	<OUT>,09CH
	KEYWRD	<ON>,095H
	KEYWRD	<OR>,0F7H
	KEYWRD	<OCT$>,01AH
	KEYWRD	<OFF>,0EBH
	DEFB	0

T3C2B:	KEYWRD	<PRINT>,091H
	KEYWRD	<PUT>,0B3H
	KEYWRD	<POKE>,098H
	KEYWRD	<POS>,011H
	KEYWRD	<PEEK>,017H
	KEYWRD	<PSET>,0C2H
	KEYWRD	<PRESET>,0C3H
	KEYWRD	<POINT>,0EDH
	KEYWRD	<PAINT>,0BFH
	KEYWRD	<PDL>,024H
	KEYWRD	<PAD>,025H
	KEYWRD	<PLAY>,0C1H
	DEFB	0

T3C5D:	DEFB	0

T3C5E:	KEYWRD	<RETURN>,08EH
	KEYWRD	<READ>,087H
	KEYWRD	<RUN>,08AH
	KEYWRD	<RESTORE>,08CH
	KEYWRD	<REM>,08FH
	KEYWRD	<RESUME>,0A7H
	KEYWRD	<RSET>,0B9H
	KEYWRD	<RIGHT$>,002H
	KEYWRD	<RND>,008H
	KEYWRD	<RENUM>,0AAH
	DEFB	0

T3C8E:	KEYWRD	<SCREEN>,0C5H
	KEYWRD	<SPRITE>,0C7H
	KEYWRD	<STOP>,090H
	KEYWRD	<SWAP>,0A4H
	KEYWRD	<SET>,0D2H
	KEYWRD	<SAVE>,0BAH
	KEYWRD	<SPC(>,0DFH
	KEYWRD	<STEP>,0DCH
	KEYWRD	<SGN>,004H
	KEYWRD	<SQR>,007H
	KEYWRD	<SIN>,009H
	KEYWRD	<STR$>,013H
	KEYWRD	<STRING$>,0E3H
	KEYWRD	<SPACE$>,019H
	KEYWRD	<SOUND>,0C4H
	KEYWRD	<STICK>,022H
	KEYWRD	<STRIG>,023H
	DEFB	0

T3CDB:	KEYWRD	<THEN>,0DAH
	KEYWRD	<TRON>,0A2H
	KEYWRD	<TROFF>,0A3H
	KEYWRD	<TAB(>,0DBH
	KEYWRD	<TO>,0D9H
	KEYWRD	<TIME>,0CBH
	KEYWRD	<TAN>,00DH
	DEFB	0

T3CF6:	KEYWRD	<USING>,0E4H
	KEYWRD	<USR>,0DDH
	DEFB	0

T3CFF:	KEYWRD	<VAL>,014H
	KEYWRD	<VARPTR>,0E7H
	KEYWRD	<VDP>,0C8H
	KEYWRD	<VPOKE>,0C6H
	KEYWRD	<VPEEK>,018H
	DEFB	0

T3D16:	KEYWRD	<WIDTH>,0A0H
	KEYWRD	<WAIT>,096H
	DEFB	0

T3D20:	KEYWRD	<XOR>,0F8H
	DEFB	0

T3D24:	DEFB	0

T3D25:	DEFB	0

I3D26:	TOKEN	!+,0F1H
	TOKEN	!-,0F2H
	TOKEN	!*,0F3H
	TOKEN	!/,0F4H
	TOKEN	!^,0F5H
	TOKEN	!\,0FCH
	TOKEN	!',0E6H
	TOKEN	!>,0EEH
	TOKEN	!=,0EFH
	TOKEN	!<,0F0H
	DEFB	0

I3D3B:	DEFB	079H
	DEFB	079H
	DEFB	07CH
	DEFB	07CH
	DEFB	07FH
	DEFB	050H
	DEFB	046H
	DEFB	03CH
	DEFB	032H
	DEFB	028H
	DEFB	07AH
	DEFB	07BH

I3D47:	DEFW	C303A			; convert DAC to double real
	DEFW	0
	DEFW	C2F8A			; convert DAC to integer
	DEFW	C3058			; check if string (error if not)
	DEFW	C2FB2			; convert DAC to single real

I3D51:	DEFW	C269A			; DECADD
	DEFW	C268C			; DECSUB
	DEFW	C27E6			; DECMUL
	DEFW	C289F			; DECDIV
	DEFW	C37D7			; double real to the power
	DEFW	C2F83

I3D5D:	DEFW	C324E
	DEFW	C3257
	DEFW	C325C
	DEFW	C3267
	DEFW	C37C8			; single real to the power
	DEFW	C2F21			; FCOMP

I3D69:	DEFW	C3172			; add integer
	DEFW	C3167			; subtract integer
	DEFW	C3193			; multiply integer
	DEFW	C4DB8
	DEFW	C383F			; integer to the power
	DEFW	C2F4D			; compare integer

I3D75:	DEFB	0
	DEFB	"NEXT without FOR",0
	DEFB	"Syntax error",0
	DEFB	"RETURN without GOSUB",0
	DEFB	"Out of DATA",0
	DEFB	"Illegal function call",0
	DEFB	"Overflow",0
	DEFB	"Out of memory",0
	DEFB	"Undefined line number",0
	DEFB	"Subscript out of range",0
	DEFB	"Redimensioned array",0
	DEFB	"Division by zero",0
	DEFB	"Illegal direct",0
	DEFB	"Type mismatch",0
	DEFB	"Out of string space",0
	DEFB	"String too long",0
	DEFB	"String formula too complex",0
	DEFB	"Can't CONTINUE",0
	DEFB	"Undefined user function",0
	DEFB	"Device I/O error",0
	DEFB	"Verify error",0
	DEFB	"No RESUME",0
	DEFB	"RESUME without error",0
	DEFB	"Unprintable error",0
	DEFB	"Missing operand",0
	DEFB	"Line buffer overflow",0
	DEFB	"FIELD overflow",0
	DEFB	"Internal error",0
	DEFB	"Bad file number",0
	DEFB	"File not found",0
	DEFB	"File already open",0
	DEFB	"Input past end",0
	DEFB	"Bad file name",0
	DEFB	"Direct statement in file",0
	DEFB	"Sequential I/O only",0
	DEFB	"File not OPEN",0 

I3FD2:	DEFB	" in "

I3FD6:	DEFB	0
;
J3FD7:	DEFB	"Ok",13,10,0

I3FDC:	DEFB	"Break",0

;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3FE2:	LD	HL,4
J3FE5:	ADD	HL,SP
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C3FE6:	LD	A,(HL)
	INC	HL
	CP	82H
	RET	NZ
;
J3FEB:	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	PUSH	HL
	LD	H,B
J3FF1:	LD	L,C
	LD	A,D
	OR	E
J3FF4:	EX	DE,HL
	JR	Z,J3FF9
;
	EX	DE,HL
	RST	DCOMPR
;
J3FF9:	LD	BC,22
	POP	HL
	RET	Z
;
	ADD	HL,BC
	JR	C3FE6

;	  Subroutine INP function
;	     Inputs  ________________________
;	     Outputs ________________________

C4001:	CALL	C5439			; convert adres to INT
;
	LD	B,H
J4005:	LD	C,L
	IN	A,(C)
	JP	C4FCF
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C400B:	CALL	FRMQNT
	PUSH	DE
	RST	SYNCHR
	DEFB	","
	CALL	GETBYT
	POP	BC
	RET	

;	  Subroutine OUT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4016:	CALL	C400B
;
	OUT	(C),A
	RET	

;	  Subroutine WAIT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C401C:	CALL	C400B
;
	PUSH	BC
	PUSH	AF
	LD	E,00H
	DEC	HL
	RST	CHRGTR
;
	JR	Z,J402C
;
	RST	SYNCHR
	DEFB	","
	CALL	GETBYT
;
J402C:	POP	AF
	LD	D,A
	POP	BC
J402F:	CALL	CKCNTC
	IN	A,(C)
	XOR	E
	AND	D
	JR	Z,J402F
J4038:	RET	
;
;	-----------------
J4039:	CALL	H.PRGE
;
	LD	HL,(CURLIN)
	LD	A,H
	AND	L
	INC	A
	JR	Z,J404C
;
	LD	A,(ONEFLG)
	OR	A
	LD	E,15H
	JR	NZ,J406F
;
J404C:	JP	J6401
;
;	-----------------
J404F:	LD	HL,(DATLIN)
	LD	(CURLIN),HL
J4055:	LD	E,02H
	DEFB	001H
J4058:	LD	E,0BH
	DEFB	001H
J405B:	LD	E,01H
	DEFB	001H
J405E:	LD	E,0AH
	DEFB	001H
J4061:	LD	E,12H
	DEFB	001H
J4064:	LD	E,16H
	DEFB	001H
J4067:	LD	E,06H
	DEFB	001H
J406A:	LD	E,18H
	DEFB	001H
J406D:	LD	E,0DH
J406F:	CALL	H.ERRO
;
	XOR	A
;
; MSX 1:
;
;	LD	(NLONLY),A
;
	CALL	C7987
;
; End of Change
;
	LD	HL,(VLZADR)
	LD	A,H
	OR	L
	JR	Z,J4087
;
	LD	A,(VLZDAT)
	LD	(HL),A
	LD	HL,0
	LD	(VLZADR),HL
J4087:	EI	
	LD	HL,(CURLIN)
	LD	(ERRLIN),HL
	LD	A,H
	AND	L
	INC	A
	JR	Z,J4096
;
	LD	(DOT),HL
J4096:	LD	BC,I40A4
	JR	J409E
;
;	-----------------
J409B:	LD	BC,J411E
J409E:	LD	HL,(SAVSTK)
	JP	J62F0
;
;	-----------------
I40A4:	POP	BC
	LD	A,E
	LD	C,E
	LD	(ERRFLG),A
	LD	HL,(SAVTXT)
	LD	(ERRTXT),HL
	EX	DE,HL
	LD	HL,(ERRLIN)
	LD	A,H
	AND	L
	INC	A
	JR	Z,J40C0
	LD	(OLDLIN),HL
	EX	DE,HL
	LD	(OLDTXT),HL
J40C0:	LD	HL,(ONELIN)
	LD	A,H
	OR	L
	EX	DE,HL
	LD	HL,ONEFLG
	JR	Z,J40D3
;
	AND	(HL)
	JR	NZ,J40D3
;
	DEC	(HL)
	EX	DE,HL
	JP	J4620
;
;	-----------------
J40D3:	XOR	A
	LD	(HL),A
	LD	E,C
	CALL	C7323
;
	LD	HL,I3D75
	CALL	H.ERRP
;
	LD	A,E
	CP	3CH	; "<"
	JR	NC,J40EC
;
	CP	32H	; "2"
	JR	NC,J40EE
;
	CP	1AH
	JR	C,J40F1
;
J40EC:	LD	A,2FH	; "/"
J40EE:	SUB	18H
	LD	E,A
J40F1:	CALL	C485D			; rem/else statement
;
	INC	HL
	DEC	E
	JR	NZ,J40F1
;
	PUSH	HL
	LD	HL,(ERRLIN)
	EX	(SP),HL
J40FD:	CALL	H.ERRF
;
	PUSH	HL
	CALL	TOTEXT
;
	POP	HL
	LD	A,(HL)
	CP	3FH	; "?"
	JR	NZ,J4110
;
	POP	HL
	LD	HL,I3D75
	JR	J40EC
;
;	-----------------

;
; MSX 1 had
;	LD	A,7
;	RST	OUTDO
;	CALL	C6678
;
; Sequence changed

J4110:	CALL	C6678
	LD	A,07H
	RST	OUTDO
;
; End change
;
	POP	HL
	LD	A,H
	AND	L
	INC	A
	CALL	NZ,C340A
	DEFB	03EH			; skip next instruction
J411E:	POP	BC
J411F:	CALL	TOTEXT			; force text screenmode
	CALL	C7304			; end printeroutput
	CALL	C6D7B
	CALL	H.READ
;
; MSX 1 had
;
; CALL C7323
; LD HL,D3FD7
; CALL C6678

	CALL	C7BE8			; prompt
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP

;	  Subroutine mainloop
;	     Inputs  ________________________
;	     Outputs ________________________

J4134:	CALL	H.MAIN
	LD	HL,0FFFFH
	LD	(CURLIN),HL
	LD	HL,ENDPRG
	LD	(SAVTXT),HL
	LD	A,(AUTFLG)
	OR	A
	JR	Z,J415F
	LD	HL,(AUTLIN)
	PUSH	HL
	CALL	C3412
	POP	DE
	PUSH	DE
	CALL	C4295
	LD	A,"*"
	JR	C,J415B
	LD	A," "
J415B:	RST	OUTDO
	LD	(AUTFLG),A
J415F:	CALL	ISFLIO
	JR	NZ,J4170
	CALL	PINLIN
	JR	NC,J4173
	XOR	A
	LD	(AUTFLG),A
	JP	J4134			; mainloop

J4170:	CALL	C7374
J4173:	RST	CHRGTR
	INC	A
	DEC	A
	JR	Z,J4134			; mainloop
	PUSH	AF
	CALL	C4769
	JR	NC,J4184
	CALL	ISFLIO
	JP	Z,J4055
J4184:	CALL	C4514
	LD	A,(AUTFLG)
	OR	A
	JR	Z,J4195
	CP	"*"
	JR	NZ,J4195
	CP	(HL)
	JR	NZ,J4195
	INC	HL
J4195:	LD	A,D
	OR	E
	JR	Z,J419F
	LD	A,(HL)
	CP	" "
	JR	NZ,J419F
	INC	HL
J419F:	PUSH	DE
	CALL	CRUNCH
	POP	DE
	POP	AF
	LD	(SAVTXT),HL
	CALL	H.DIRD
	JR	C,J41B4
	XOR	A
	LD	(AUTFLG),A
	JP	J6D48
;
;	-----------------
J41B4:	PUSH	DE
	PUSH	BC
	RST	CHRGTR
;
	OR	A
	PUSH	AF
	LD	A,(AUTFLG)
	AND	A
	JR	Z,J41C2
;
	POP	AF
	SCF	
	PUSH	AF
J41C2:	LD	(DOT),DE
	LD	HL,(AUTINC)
	ADD	HL,DE
	JR	C,J41D7
;
	PUSH	DE
	LD	DE,0FFFAH
	RST	DCOMPR
;
	POP	DE
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C41D2:	LD	(AUTLIN),HL
	JR	C,J41DB
;
J41D7:	XOR	A
	LD	(AUTFLG),A
J41DB:	CALL	C4295
;
	JR	C,C41ED
;
	POP	AF
	PUSH	AF
	JR	NZ,J41EA
;
	JP	NC,J481C
;
J41E7:	PUSH	BC
	JR	J4237
;
;	-----------------
J41EA:	OR	A
	JR	J41F4
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C41ED:	POP	AF
	PUSH	AF
	JR	NZ,J41F3
;
	JR	C,J41E7
;
J41F3:	SCF	
J41F4:	PUSH	BC
	PUSH	AF
	PUSH	HL
	CALL	C54EA
;
	POP	HL
	POP	AF
	POP	BC
	PUSH	BC
	CALL	C,C5405
;
	POP	DE
	POP	AF
	PUSH	DE
	JR	Z,J4237
;
	POP	DE
	LD	HL,0
	LD	(ONELIN),HL
	LD	HL,(VARTAB)
	EX	(SP),HL
	POP	BC
	PUSH	HL
	ADD	HL,BC
	PUSH	HL
	CALL	C6250
;
	POP	HL
	LD	(VARTAB),HL
	EX	DE,HL
	LD	(HL),H
	POP	BC
	POP	DE
	PUSH	HL
	INC	HL
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	DE,KBUF
	DEC	BC
	DEC	BC
	DEC	BC
	DEC	BC
J422E:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	INC	DE
	DEC	BC
	LD	A,C
	OR	B
	JR	NZ,J422E
;
J4237:	CALL	H.FINI
	POP	DE
;
; MSX 1 had
;
;	CALL	C4257
;
	CALL	C79A1
	LD	HL,(PTRFIL)
	LD	(TEMP2),HL
	CALL	C629A			; initialize interpreter, basic pointer at start of program
	CALL	H.FINE
	LD	HL,(TEMP2)
	LD	(PTRFIL),HL
	JP	J4134			; main loop
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4253:	LD	HL,(TXTTAB)
	EX	DE,HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4257:	LD	H,D
	LD	L,E
	LD	A,(HL)
	INC	HL
	OR	(HL)
	RET	Z
;
	INC	HL
	INC	HL
J425F:	INC	HL
	LD	A,(HL)
J4261:	OR	A
	JR	Z,J4272
;
	CP	20H	; " "
	JR	NC,J425F
;
	CP	0BH	; 11 
	JR	C,J425F
;
	CALL	C466A
;
	RST	CHRGTR
;
	JR	J4261
;
;	-----------------
J4272:	INC	HL
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	JR	C4257
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4279:	LD	DE,0
	PUSH	DE
	JR	Z,J4288
;
	POP	DE
	CALL	C475F
;
	PUSH	DE
	JR	Z,X.4291
;
	RST	SYNCHR
	DEFB	0F2H			; check for -

J4288:	LD	DE,0FFFAH
;
	CALL	NZ,C475F
;
	JP	NZ,J4055
;
X.4291:	EX	DE,HL
	POP	DE
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4293:	EX	(SP),HL
	PUSH	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4295:	LD	HL,(TXTTAB)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4298:	LD	B,H
	LD	C,L
	LD	A,(HL)
	INC	HL
	OR	(HL)
	DEC	HL
	RET	Z
;
	INC	HL
	INC	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	RST	DCOMPR
;
	LD	H,B
	LD	L,C
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	CCF	
	RET	Z
;
	CCF	
	RET	NC
;
	JR	C4298
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
CRUNCH:	XOR	A
	LD	(DONUM),A
	LD	(DORES),A
	CALL	H.CRUN
;
	LD	BC,013BH
	LD	DE,KBUF
J42C2:	LD	A,(HL)
	OR	A
	JR	NZ,J42D9
;
J42C6:	LD	HL,0140H
	LD	A,L
	SUB	C
	LD	C,A
	LD	A,H
	SBC	A,B
	LD	B,A
	LD	HL,KBFMIN
	XOR	A
	LD	(DE),A
	INC	DE
	LD	(DE),A
	INC	DE
	LD	(DE),A
	RET	
;
;	-----------------
J42D9:	CP	22H	; """
	JP	Z,J4316
;
	CP	20H	; " "
	JR	Z,J42E9
;
	LD	A,(DORES)
	OR	A
	LD	A,(HL)
	JR	Z,J4326
;
J42E9:	INC	HL
	PUSH	AF
	CP	01H	; 1 
	JR	NZ,J42F3
;
	LD	A,(HL)
	AND	A
	LD	A,01H	; 1 
J42F3:	CALL	NZ,C44E0
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C42F6:	POP	AF
	SUB	3AH	; ":"
	JR	Z,J4301
;
	CP	4AH	; "J"
	JR	NZ,J4307
;
	LD	A,01H	; 1 
J4301:	LD	(DORES),A
	LD	(DONUM),A
J4307:	SUB	55H	; "U"
	JR	NZ,J42C2
;
	PUSH	AF
J430C:	LD	A,(HL)
	OR	A
	EX	(SP),HL
	LD	A,H
	POP	HL
	JR	Z,J42C6
;
	CP	(HL)
	JR	Z,J42E9
;
J4316:	PUSH	AF
	LD	A,(HL)
J4318:	INC	HL
	CP	01H	; 1 
	JR	NZ,J4321
;
	LD	A,(HL)
	AND	A
	LD	A,01H	; 1 
J4321:	CALL	NZ,C44E0
;
	JR	J430C
;
;	-----------------
J4326:	INC	HL
	OR	A
	JP	M,J42C2
;
	CP	01H	; 1 
	JR	NZ,J4336
;
	LD	A,(HL)
	AND	A
	JR	Z,J42C6
;
	INC	HL
	JR	J42C2
;
;	-----------------
J4336:	DEC	HL
	CP	3FH	; "?"
	LD	A,91H
	PUSH	DE
	PUSH	BC
	JP	Z,J43A3
;
	LD	A,(HL)
	CP	5FH	; "_"
	JP	Z,J43A3
;
	LD	DE,I3D26
	CALL	C4EA9			; get char uppercase
;
	CALL	C64A8
;
	JP	C,J441D
;
	PUSH	HL
	CALL	H.CRUS
;
	LD	HL,I3A3E
	SUB	41H	; "A"
	ADD	A,A
	LD	C,A
	LD	B,00H
	ADD	HL,BC
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	POP	HL
	INC	HL
J4365:	PUSH	HL
J4366:	CALL	C4EA9			; get char uppercase
;
	LD	C,A
	LD	A,(DE)
	AND	7FH
	JP	Z,J44EB
;
	INC	HL
	CP	C
	JR	NZ,J4398
;
	LD	A,(DE)
	INC	DE
	OR	A
	JP	P,J4366
;
	POP	AF
	LD	A,(DE)
	CALL	H.ISRE
;
	OR	A
	JP	M,J43A2
;
	POP	BC
	POP	DE
	OR	80H
	PUSH	AF
	LD	A,0FFH
	CALL	C44E0
;
	XOR	A
	LD	(DONUM),A
	POP	AF
	CALL	C44E0
;
	JP	J42C2
;
;	-----------------
J4398:	POP	HL
J4399:	LD	A,(DE)
	INC	DE
	OR	A
	JP	P,J4399
;
	INC	DE
	JR	J4365
;
;	-----------------
J43A2:	DEC	HL
J43A3:	PUSH	AF
	CALL	H.NTFN
;
	LD	DE,I43B5
	LD	C,A
J43AB:	LD	A,(DE)
	OR	A
	JR	Z,J43C4
;
	INC	DE
	CP	C
	JR	NZ,J43AB
;
	JR	J43C6
;
;	-----------------

I43B5:	DEFB	08CH
	DEFB	0A9H
	DEFB	0AAH
	DEFB	0A8H
	DEFB	0A7H
	DEFB	0E1H
	DEFB	0A1H
	DEFB	08AH
	DEFB	093H
	DEFB	09EH
	DEFB	089H
	DEFB	08EH
	DEFB	0DAH
	DEFB	08DH
	DEFB	0
;
J43C4:	XOR	A
	DEFB	0C2H			; JP NZ,xxxx (Skip next statement)
J43C6:	LD	A,001H
;
J43C8:	LD	(DONUM),A
	POP	AF
J43CC:	POP	BC
	POP	DE
	CP	0A1H
	PUSH	AF
	CALL	Z,C44DE
;
	POP	AF
	CP	0CAH
	JR	Z,J43DD
;
	CP	5FH	; "_"
	JR	NZ,J4406
;
J43DD:	CALL	NC,C44E0
;
J43E0:	INC	HL
	CALL	C4EA9			; get char uppercase
;
	AND	A
J43E5:	JP	Z,J42C6
;
	JP	M,J43E0
;
	CP	01H	; 1 
	JR	NZ,J43F6
;
	INC	HL
	LD	A,(HL)
	AND	A
	JR	Z,J43E5
;
	JR	J43E0
;
;	-----------------
J43F6:	CP	20H	; " "
	JR	Z,J43DD
;
	CP	3AH	; ":"
	JR	Z,J443A
;
	CP	28H	; "("
	JR	Z,J443A
;
	CP	30H	; "0"
	JR	J43DD
;
;	-----------------
J4406:	CP	0E6H
	JP	NZ,J44B4
;
	PUSH	AF
	CALL	C44DE
;
	LD	A,8FH
	CALL	C44E0
;
	POP	AF
	PUSH	HL
	LD	HL,0
	EX	(SP),HL
	JP	J4318
;
;	-----------------
J441D:	LD	A,(HL)
	CP	2EH	; "."
	JR	Z,J442C
;
	CP	3AH	; ":"
	JP	NC,J44A2
;
	CP	30H	; "0"
	JP	C,J44A2
;
J442C:	LD	A,(DONUM)
	OR	A
	LD	A,(HL)
	POP	BC
	POP	DE
	JP	M,J42E9
;
	JR	Z,J4457
;
	CP	2EH	; "."
J443A:	JP	Z,J42E9
;
	LD	A,0EH	; 14 
	CALL	C44E0
;
	PUSH	DE
	CALL	C4769
;
	CALL	C4514
;
J4449:	EX	(SP),HL
	EX	DE,HL
J444B:	LD	A,L
	CALL	C44E0
;
	LD	A,H
J4450:	POP	HL
	CALL	C44E0
;
	JP	J42C2
;
;	-----------------
J4457:	PUSH	DE
	PUSH	BC
	LD	A,(HL)
	CALL	C3299			; convert text to number
	CALL	C4514
	POP	BC
	POP	DE
	PUSH	HL
	LD	A,(VALTYP)
	CP	02H	; 2 
	JR	NZ,J447F
;
	LD	HL,(DAC+2)
	LD	A,H
	OR	A
	LD	A,02H	; 2 
	JR	NZ,J447F
;
	LD	A,L
	LD	H,L
	LD	L,0FH	; 15 
	CP	0AH	; 10 
	JR	NC,J444B
;
	ADD	A,11H	; 17 
	JR	J4450
;
;	-----------------
J447F:	PUSH	AF
	RRCA	
	ADD	A,1BH
	CALL	C44E0
;
	LD	HL,DAC
	LD	A,(VALTYP)
	CP	02H	; 2 
	JR	NZ,J4493
;
	LD	HL,DAC+2
J4493:	POP	AF
J4494:	PUSH	AF
	LD	A,(HL)
	CALL	C44E0
;
	POP	AF
	INC	HL
	DEC	A
	JR	NZ,J4494
;
	POP	HL
	JP	J42C2
;
;	-----------------
J44A2:	LD	DE,I3D26-1
J44A5:	INC	DE
	LD	A,(DE)
	AND	7FH
	JP	Z,J44FA
;
	INC	DE
	CP	(HL)
	LD	A,(DE)
	JR	NZ,J44A5
;
	JP	J4509
;
;	-----------------
J44B4:	CP	26H	; "&"
	JP	NZ,J42E9
;
	PUSH	HL
	RST	CHRGTR
;
	POP	HL
	CALL	C4EAA
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C44BF:	CP	48H	; "H"
	JR	Z,J44D0
;
	CP	4FH	; "O"
	JR	Z,J44CC
;
	LD	A,26H	; "&"
	JP	J42E9
;
;	-----------------
J44CC:	LD	A,0BH	; 11 
	JR	J44D2
;
;	-----------------
J44D0:	LD	A,0CH	; 12 
J44D2:	CALL	C44E0
;
	PUSH	DE
	PUSH	BC
	CALL	C4EB8
;
	POP	BC
	JP	J4449
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C44DE:	LD	A,3AH	; ":"
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C44E0:	LD	(DE),A
	INC	DE
	DEC	BC
	LD	A,C
	OR	B
	RET	NZ
;
	LD	E,19H
	JP	J406F
;
;	-----------------
J44EB:	CALL	H.NOTR
;
	POP	HL
	DEC	HL
	DEC	A
	LD	(DONUM),A
	CALL	C4EA9			; get char uppercase
;
	JP	J43CC
;
;	-----------------
J44FA:	LD	A,(HL)
	CP	20H	; " "
	JR	NC,J4509
;
	CP	09H	; 9 
	JR	Z,J4509
;
	CP	0AH	; 10 
	JR	Z,J4509
;
	LD	A,20H	; " "
J4509:	PUSH	AF
	LD	A,(DONUM)
	INC	A
	JR	Z,J4511
;
	DEC	A
J4511:	JP	J43C8
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4514:	DEC	HL
	LD	A,(HL)
	CP	20H	; " "
	JR	Z,C4514
;
	CP	09H	; 9 
	JR	Z,C4514
;
	CP	0AH	; 10 
	JR	Z,C4514
;
	INC	HL
	RET	

;	  Subroutine FOR statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4524:	LD	A,64H	; "d"
	LD	(SUBFLG),A
	CALL	C4880			; let statement
;
J452C:	POP	BC
	PUSH	HL
	CALL	C485B
;
	LD	(ENDFOR),HL
	LD	HL,2
	ADD	HL,SP
J4538:	CALL	C3FE6
;
	JR	NZ,J4554
;
	ADD	HL,BC
	PUSH	DE
	DEC	HL
	LD	D,(HL)
	DEC	HL
	LD	E,(HL)
	INC	HL
	INC	HL
	PUSH	HL
	LD	HL,(ENDFOR)
	RST	DCOMPR
;
	POP	HL
	POP	DE
	JR	NZ,J4538
;
	POP	DE
	LD	SP,HL
	LD	(SAVSTK),HL
	DEFB	00EH			; skip next instruction
J4554:	POP	DE
	EX	DE,HL
	LD	C,0CH	; 12 
	CALL	C625E
;
	PUSH	HL
	LD	HL,(ENDFOR)
	EX	(SP),HL
	PUSH	HL
	LD	HL,(CURLIN)
	EX	(SP),HL
	RST	SYNCHR
	DEFB	0D9H			; check for TO

	RST	GETYPR
;
	JP	Z,J406D
;
	PUSH	AF
	CALL	FRMEVL			; evaluate expression
;
	POP	AF
	PUSH	HL
	JR	NC,J458B
;
	JP	P,J45C2
;
	CALL	C2F8A			; convert DAC to integer
;
	EX	(SP),HL
	LD	DE,1
	LD	A,(HL)
	CP	0DCH
	CALL	Z,C520E
;
	PUSH	DE
	PUSH	HL
	EX	DE,HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4586:	CALL	C2EAB
;
	JR	J45E8
;
;	-----------------
J458B:	CALL	C303A			; convert DAC to double real
;
	POP	DE
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C458F:	LD	HL,-8
	ADD	HL,SP
	LD	SP,HL
	PUSH	DE
	CALL	C2F10			; HL = DAC
;
	POP	HL
	LD	A,(HL)
	CP	0DCH
	LD	DE,I2D1B		; 1.0
	LD	A,01H	; 1 
	JR	NZ,J45B2
;
	RST	CHRGTR
;
	CALL	FRMEVL			; evaluate expression
;
	PUSH	HL
	CALL	C303A			; convert DAC to double real
;
J45AB:	CALL	C2E71			; get sign DAC

;
	LD	DE,DAC
	POP	HL
J45B2:	LD	B,H
	LD	C,L
	LD	HL,-8
	ADD	HL,SP
	LD	SP,HL
	PUSH	AF
	PUSH	BC
	CALL	C2EF3			; HL = DE (valtyp)
	POP	HL
	POP	AF
	JR	J45EF
;
;	-----------------
J45C2:	CALL	C2FB2			; convert DAC to single real
	CALL	C2ECC			; = DAC (single)
	POP	HL
	PUSH	BC
	PUSH	DE
	LD	BC,1041H
J45CE:	LD	DE,0
	CALL	H.SNGF
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C45D4:	LD	A,(HL)
	CP	0DCH
	LD	A,01H	; 1 
	JR	NZ,J45E9
	CALL	C4C65
	PUSH	HL
	CALL	C2FB2			; convert DAC to single real
	CALL	C2ECC			; = DAC (single)
	CALL	C2E71			; get sign DAC
;
J45E8:	POP	HL
J45E9:	PUSH	DE
	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	BC
	PUSH	BC
J45EF:	OR	A
	JR	NZ,J45F4
;
	LD	A,02H	; 2 
J45F4:	LD	C,A
	RST	GETYPR
;
	LD	B,A
	PUSH	BC
	PUSH	HL
	LD	HL,(TEMP)
	EX	(SP),HL
J45FD:	LD	B,82H
	PUSH	BC
	INC	SP

;	  Subroutine runloop
;	     Inputs  ________________________
;	     Outputs ________________________

NEWSTT:	CALL	H.NEWS
;
	LD	(SAVSTK),SP
	CALL	ISCNTC
;
	LD	A,(ONGSBF)
	OR	A
	CALL	NZ,C6389
;
J4612:	EI	
	LD	(SAVTXT),HL
	LD	A,(HL)
	CP	":"
	JR	Z,J4640			; statement seperator
	OR	A
	JP	NZ,J4055		; spurious text after statement, syntax error
	INC	HL
J4620:	LD	A,(HL)
	INC	HL
	OR	(HL)			; end of basictext ?
	JP	Z,J4039			; yep, terminate program
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)			; linenumber
	EX	DE,HL
	LD	(CURLIN),HL
	LD	A,(TRCFLG)
	OR	A
	JR	Z,J463F
	PUSH	DE
	LD	A,"["
	RST	OUTDO
	CALL	C3412
	LD	A,"]"
	RST	OUTDO
	POP	DE
J463F:	EX	DE,HL
J4640:	RST	CHRGTR
	LD	DE,NEWSTT
	PUSH	DE
	RET	Z			; end of basic line, return to runloop
J4646:	CALL	H.GONE
;
	CP	5FH	; "_"
	JP	Z,J55A7
;
	SUB	81H
	JP	C,C4880			; yep, let statement
;
	CP	58H	; "X"
	JP	NC,J51AD
;
	RLCA	
	LD	C,A
	LD	B,00H
	EX	DE,HL
	LD	HL,I392E
	ADD	HL,BC
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	PUSH	BC
	EX	DE,HL
;
;	  Subroutine CHRGTR
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4666:	CALL	H.CHRG
;
	INC	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C466A:	LD	A,(HL)
	CP	3AH	; ":"
	RET	NC
;
	CP	20H	; " "
	JR	Z,C4666
;
	JR	NC,J46E0
;
	OR	A
	RET	Z
;
	CP	0BH	; 11 
	JR	C,J46DB
;
	CP	1EH
	JR	NZ,J4683
;
	LD	A,(CONSAV)
	OR	A
	RET	
;
;	-----------------
J4683:	CP	10H	; 16 
	JR	Z,J46BB
;
	PUSH	AF
	INC	HL
	LD	(CONSAV),A
	SUB	1CH
	JR	NC,J46C0
;
	SUB	0F5H
	JR	NC,J469A
;
	CP	0FEH
	JR	NZ,J46AE
;
	LD	A,(HL)
	INC	HL
J469A:	LD	(CONTXT),HL
	LD	H,00H
J469F:	LD	L,A
	LD	(CONLO),HL
	LD	A,02H	; 2 
	LD	(CONTYP),A
	LD	HL,I46E6
	POP	AF
	OR	A
	RET	
;
;	-----------------
J46AE:	LD	A,(HL)
	INC	HL
	INC	HL
	LD	(CONTXT),HL
	DEC	HL
	LD	H,(HL)
	JR	J469F
;
;	-----------------
J46B8:	CALL	C46E8
;
J46BB:	LD	HL,(CONTXT)
	JR	C466A
;
;	-----------------
J46C0:	INC	A
	RLCA	
	LD	(CONTYP),A
	PUSH	DE
	PUSH	BC
	LD	DE,CONLO
	EX	DE,HL
	LD	B,A
	CALL	C2EF7
;
	EX	DE,HL
	POP	BC
	POP	DE
	LD	(CONTXT),HL
	POP	AF
	LD	HL,I46E6
	OR	A
	RET	
;
;	-----------------
J46DB:	CP	09H	; 9 
	JP	NC,C4666
;
J46E0:	CP	30H	; "0"
	CCF	
	INC	A
	DEC	A
	RET	
;
;	-----------------
I46E6:	DEFB	01EH
	DEFB	010H
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C46E8:	LD	A,(CONSAV)
	CP	0FH	; 15 
	JR	NC,J4702
;
	CP	0DH	; 13 
	JR	C,J4702
;
	LD	HL,(CONLO)
	JR	NZ,J46FF
;
	INC	HL
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
J46FF:	JP	C3236
;
;	-----------------
J4702:	LD	A,(CONTYP)
	LD	(VALTYP),A
	CP	2
	JR	NZ,J4712
	LD	HL,(CONLO)
	LD	(DAC+2),HL
J4712:	LD	HL,CONLO
	JP	C2F08			; DAC = CONLO

;	  Subroutine DEFSTR statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4718:	LD	E,03H
	DEFB	01H

;	  Subroutine DEFINT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C471B:	LD	E,02H
	DEFB	01H

;	  Subroutine DEFSNG statement
;	     Inputs  ________________________
;	     Outputs ________________________

C471E:	LD	E,04H
	DEFB	01H

;	  Subroutine DEFDBL statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4721:	LD	E,08H
J4723:	CALL	C64A7
;
	LD	BC,J4055
	PUSH	BC
	RET	C
;
	SUB	41H	; "A"
	LD	C,A
	LD	B,A
	RST	CHRGTR
;
	CP	0F2H
	JR	NZ,J473D
;
	RST	CHRGTR
;
	CALL	C64A7
;
	RET	C
;
	SUB	41H	; "A"
	LD	B,A
	RST	CHRGTR
;
J473D:	LD	A,B
	SUB	C
	RET	C
;
	INC	A
	EX	(SP),HL
	LD	HL,DEFTBL
	LD	B,00H
	ADD	HL,BC
J4748:	LD	(HL),E
	INC	HL
	DEC	A
	JR	NZ,J4748
;
	POP	HL
	LD	A,(HL)
	CP	2CH	; ","
	RET	NZ
;
	RST	CHRGTR
;
	JR	J4723
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4755:	RST	CHRGTR
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4756:	CALL	C520F
;
	RET	P
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C475A:	LD	E,05H	; 5 
	JP	J406F
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C475F:	LD	A,(HL)
	CP	2EH	; "."
	LD	DE,(DOT)
	JP	Z,C4666
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4769:	DEC	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C476A:	RST	CHRGTR
;
	CP	0EH	; 14 
	JR	Z,C4771
;
	CP	0DH	; 13 
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4771:	LD	DE,(CONLO)
	JP	Z,C4666
;
	XOR	A
	LD	(CONSAV),A
	LD	DE,0
	DEC	HL
J4780:	RST	CHRGTR
;
	RET	NC
;
	PUSH	HL
	PUSH	AF
	LD	HL,1998H
	RST	DCOMPR
;
	JR	C,J479B
;
	LD	H,D
	LD	L,E
	ADD	HL,DE
	ADD	HL,HL
	ADD	HL,DE
	ADD	HL,HL
	POP	AF
	SUB	30H	; "0"
	LD	E,A
	LD	D,00H
	ADD	HL,DE
	EX	DE,HL
	POP	HL
	JR	J4780
;
;	-----------------
J479B:	POP	AF
	POP	HL
	RET	

;	  Subroutine RUN statement
;	     Inputs  ________________________
;	     Outputs ________________________

C479E:	JP	Z,C629A			; initialize interpreter, basic pointer at start of program and quit (which start the program!)
	CP	0EH
	JR	Z,J47AA
	CP	0DH
	JP	NZ,J6B5B
J47AA:	CALL	C62A1			; initialize interpreter
	LD	BC,NEWSTT
	JR	J47E7

;	  Subroutine GOSUB statement
;	     Inputs  ________________________
;	     Outputs ________________________

C47B2:	LD	C,03H	; 3 
	CALL	C625E
	CALL	C4769
	POP	BC
	PUSH	HL
	PUSH	HL
	LD	HL,(CURLIN)
	EX	(SP),HL
	LD	BC,0
	PUSH	BC
	LD	BC,NEWSTT
	LD	A,8DH
	PUSH	AF
	INC	SP
	PUSH	BC
	JR	C47EB

J47CF:	PUSH	HL
	PUSH	HL
	LD	HL,(CURLIN)
	EX	(SP),HL
	PUSH	BC
	LD	A,8DH
	PUSH	AF
	INC	SP
	EX	DE,HL
	DEC	HL
	LD	(SAVTXT),HL
	INC	HL
	LD	(SAVSTK),SP
	JP	J4620

J47E7:	PUSH	BC

;	  Subroutine GOTO statement
;	     Inputs  ________________________
;	     Outputs ________________________

C47E8:	CALL	C4769
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C47EB:	LD	A,(CONSAV)
	CP	0DH	; 13 
	EX	DE,HL
	RET	Z
;
	CP	0EH	; 14 
	JP	NZ,J4055
;
	EX	DE,HL
	PUSH	HL
	LD	HL,(CONTXT)
	EX	(SP),HL
	CALL	C485D			; rem/else statement
;
	INC	HL
	PUSH	HL
	LD	HL,(CURLIN)
	RST	DCOMPR
;
	POP	HL
	CALL	C,C4298
;
	CALL	NC,C4295
;
	JR	NC,J481C
;
	DEC	BC
	LD	A,0DH	; 13 
	LD	(PTRFLG),A
	POP	HL
	CALL	C5583
;
	LD	H,B
	LD	L,C
	RET	
;
;	-----------------
J481C:	LD	E,08H	; 8 
	JP	J406F

;	  Subroutine RETURN statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4821:	CALL	H.RETU
	LD	(TEMP),HL
	LD	D,0FFH
	CALL	C3FE2
	CP	8DH
	JR	Z,J4831
	DEC	HL
J4831:	LD	SP,HL
	LD	(SAVSTK),HL
	LD	E,03H	; 3 
	JP	NZ,J406F
	POP	HL
	LD	A,H
	OR	L
	JR	Z,J4845
	LD	A,(HL)
	AND	01H	; 1 
	CALL	NZ,C633E
J4845:	POP	BC
	LD	HL,NEWSTT
	EX	(SP),HL
	EX	DE,HL
	LD	HL,(TEMP)
	DEC	HL
	RST	CHRGTR
	JP	NZ,C47E8		; goto statement
	LD	H,B
	LD	L,C
	LD	(CURLIN),HL
	EX	DE,HL
	DEFB	03EH			; skip next instruction
J485A:	POP	HL

;	  Subroutine DATA statement
;	     Inputs  ________________________
;	     Outputs ________________________

C485B:	DEFB	001H			; skip next instruction
	DEFB	03AH

;	  Subroutine REM/ELSE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C485D:	LD	C,0
	LD	B,00H
J4861:	LD	A,C
	LD	C,B
	LD	B,A
J4864:	DEC	HL
J4865:	RST	CHRGTR
;
	OR	A
	RET	Z
;
	CP	B
	RET	Z
;
	INC	HL
	CP	22H	; """
	JR	Z,J4861
;
	INC	A
	JR	Z,J4865
;
	SUB	8CH
	JR	NZ,J4864
;
	CP	B
	ADC	A,D
	LD	D,A
	JR	J4864
;
;	-----------------
J487B:	POP	AF
	ADD	A,03H	; 3 
	JR	J4892
;
;	-----------------
;
;	  Subroutine LET statement
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4880:	CALL	PTRGET
	RST	SYNCHR
	DEFB	0EFH			; check for =
	LD	(TEMP),DE
	PUSH	DE
	LD	A,(VALTYP)
	PUSH	AF
	CALL	FRMEVL			; evaluate expression
;
	POP	AF
J4892:	EX	(SP),HL
J4893:	LD	B,A
	LD	A,(VALTYP)
	CP	B
	LD	A,B
	JR	Z,J48A1
;
	CALL	C517A
;
J489E:	LD	A,(VALTYP)
J48A1:	LD	DE,DAC
	CP	02H	; 2 
	JR	NZ,J48AB
;
	LD	DE,DAC+2
J48AB:	PUSH	HL
	CP	03H	; 3 
	JR	NZ,J48DE		; not a string,
;
	LD	HL,(DAC+2)
	PUSH	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)			; string
	LD	HL,KBUF-1
	RST	DCOMPR
;
	JR	C,J48D2			; string in KBUF, copy in string storage area
;
	LD	HL,(STREND)
	RST	DCOMPR
;
	POP	DE
	JR	NC,J48DA		; string in programtext, no copy
;
	LD	HL,DSCTMP-1
	RST	DCOMPR
;
	JR	C,J48D1			; stringdescriptor,
;
	LD	HL,TEMPST-1
	RST	DCOMPR
;
	JR	C,J48DA			; stringdescriptor,
;
J48D1:	DEFB	03EH			; skip next instruction
J48D2:	POP	DE
	CALL	C67EE
;
	EX	DE,HL
	CALL	C6611
;
J48DA:	CALL	C67EE
;
	EX	(SP),HL
J48DE:	CALL	C2EF3			; HL=DE (valtyp)
	POP	DE
	POP	HL
	RET	

;	  Subroutine ON statement
;	     Inputs  ________________________
;	     Outputs ________________________

C48E4:	CP	0A6H			; ERROR token ?
	JR	NZ,J490D
;
	RST	CHRGTR

; ON ERROR GOTO

	RST	SYNCHR
	DEFB	089H			; check for GOTO token
	CALL	C4769
;
	LD	A,D
	OR	E
	JR	Z,J48FB
;
	CALL	C4293
;
	LD	D,B
	LD	E,C
	POP	HL
	JP	NC,J481C
;
J48FB:	LD	(ONELIN),DE
	RET	C
;
	LD	A,(ONEFLG)
	OR	A
	LD	A,E
	RET	Z
;
	LD	A,(ERRFLG)
	LD	E,A
	JP	J4096
;
;	-----------------
J490D:	CALL	C7810
;
	JR	C,J4943
;
	PUSH	BC
	RST	CHRGTR
;
	RST	SYNCHR
	DEFB	08DH			; check for GOSUB token
	XOR	A
J4917:	POP	BC
	PUSH	BC
	CP	C
	JP	NC,J4055
;
	PUSH	AF
	CALL	C4769
;
	LD	A,D
	OR	E
	JR	Z,J492E
;
	CALL	C4293
;
	LD	D,B
	LD	E,C
	POP	HL
	JP	NC,J481C
;
J492E:	POP	AF
	POP	BC
	PUSH	AF
	ADD	A,B
	PUSH	BC
	CALL	C785C
;
	DEC	HL
	RST	CHRGTR
;
	POP	BC
	POP	DE
	RET	Z
;
	PUSH	BC
	PUSH	DE
	RST	SYNCHR
	DEFB	","			; check for ,
	POP	AF
	INC	A
	JR	J4917
;
;	-----------------
J4943:	CALL	GETBYT
;
	LD	A,(HL)
	LD	B,A
	CP	8DH			; GOSUB token ?
	JR	Z,J494F
;
	RST	SYNCHR
	DEFB	089H			; check for GOTO token
	DEC	HL
J494F:	LD	C,E
J4950:	DEC	C
	LD	A,B
	JP	Z,J4646
;
	CALL	C476A
;
	CP	","
	RET	NZ
;
	JR	J4950

;	  Subroutine RESUME statement
;	     Inputs  ________________________
;	     Outputs ________________________

C495D:	LD	A,(ONEFLG)
	OR	A
	JR	NZ,J496C
;
	LD	(ONELIN+0),A
	LD	(ONELIN+1),A
	JP	J4064
;
;	-----------------
J496C:	INC	A
	LD	(ERRFLG),A
	LD	A,(HL)
	CP	83H
	JR	Z,J4985
;
	CALL	C4769
;
	RET	NZ
;
	LD	A,D
	OR	E
	JR	Z,J4989
;
	CALL	C47EB
;
	XOR	A
	LD	(ONEFLG),A
	RET	
;
;	-----------------
J4985:	RST	CHRGTR
;
	RET	NZ
;
	JR	J498E
;
;	-----------------
J4989:	XOR	A
	LD	(ONEFLG),A
	INC	A
J498E:	LD	HL,(ERRTXT)
	EX	DE,HL
	LD	HL,(ERRLIN)
	LD	(CURLIN),HL
	EX	DE,HL
	RET	NZ
;
	LD	A,(HL)
	OR	A
	JR	NZ,J49A2
;
	INC	HL
	INC	HL
	INC	HL
	INC	HL
J49A2:	INC	HL
	XOR	A
	LD	(ONEFLG),A
	JP	C485B

;	  Subroutine ERROR statement
;	     Inputs  ________________________
;	     Outputs ________________________

C49AA:	CALL	GETBYT
;
	RET	NZ
;
	OR	A
	JP	Z,C475A
;
	JP	J406F

;	  Subroutine AUTO statement
;	     Inputs  ________________________
;	     Outputs ________________________

C49B5:	LD	DE,10
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C49B8:	PUSH	DE
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C49B9:	JR	Z,J49D1
;
	CALL	C475F
;
	EX	DE,HL
	EX	(SP),HL
	JR	Z,J49D2
;
	EX	DE,HL
	RST	SYNCHR
	DEFB	","			; check for ,
	LD	DE,(AUTINC)
	JR	Z,J49D1
;
	CALL	C4769
;
	JP	NZ,J4055
;
J49D1:	EX	DE,HL
J49D2:	LD	A,H
	OR	L
	JP	Z,C475A
;
	LD	(AUTINC),HL
	LD	(AUTFLG),A
	POP	HL
	LD	(AUTLIN),HL
	POP	BC
	JP	J4134			; mainloop

;	  Subroutine IF statement
;	     Inputs  ________________________
;	     Outputs ________________________

C49E5:	CALL	FRMEVL			; evaluate expression
;
	LD	A,(HL)
	CP	","
	CALL	Z,C4666
;
	CP	89H			; GOTO token ?
	JR	Z,J49F5			; yep,
;
	RST	SYNCHR
	DEFB	0DAH			; check for THEN token

	DEC	HL
J49F5:	PUSH	HL
;
	CALL	C2EA1
;
	POP	HL
	JR	Z,J4A0C
;
J49FC:	RST	CHRGTR
;
	RET	Z
;
	CP	0EH	; 14 
	JP	Z,C47E8			; goto statement
;
	CP	0DH	; 13 
	JP	NZ,J4646
;
	LD	HL,(CONLO)
	RET	
;
;	-----------------
J4A0C:	LD	D,01H	; 1 
J4A0E:	CALL	C485B
;
	OR	A
	RET	Z
;
	RST	CHRGTR
;
	CP	0A1H
	JR	NZ,J4A0E
;
	DEC	D
	JR	NZ,J4A0E
;
	JR	J49FC

;	  Subroutine LPRINT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4A1D:	LD	A,01H	; 1 
	LD	(PRTFLG),A
	JR	J4A29

;	  Subroutine PRINT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4A24:	LD	C,02H	; 2 
	CALL	C6D57
J4A29:	DEC	HL
	RST	CHRGTR
	CALL	Z,C7328			; no operands, newline to outdo
J4A2E:	JP	Z,C4AFF			; return interpreter output to screen
	CP	0E4H
	JP	Z,J60B1			; USING token,
;
	CP	0DBH
	JP	Z,J4AC6			; TAB( token,
;
	CP	0DFH
	JP	Z,J4AC6			; SPC( token,
;
	PUSH	HL
	CP	2CH	; ","
	JR	Z,J4A94
;
	CP	3BH	; ";"
	JP	Z,J4AFA
;
	POP	BC
	CALL	FRMEVL			; evaluate expression
;
	PUSH	HL
	RST	GETYPR
;
	JR	Z,J4A8D
;
	CALL	C3425			; convert DAC to text, unformatted
;
	CALL	C6635
;
	LD	(HL),20H	; " "
	LD	HL,(DAC+2)
	INC	(HL)
	CALL	H.PRTF
;
	CALL	ISFLIO
;
	JR	NZ,J4A89
;
	LD	HL,(DAC+2)
	LD	A,(PRTFLG)
	OR	A
	JR	Z,J4A77
;
	LD	A,(LPTPOS)
	ADD	A,(HL)
	CP	0FFH
	JR	J4A81
;
;	-----------------
J4A77:	LD	A,(LINLEN)
	LD	B,A
	LD	A,(TTYPOS)
	ADD	A,(HL)
	DEC	A
	CP	B
J4A81:	JR	C,J4A89
;
	CALL	Z,C7331
;
	CALL	NZ,C7328		; newline to outdo
;
J4A89:	CALL	C667B
;
	OR	A
J4A8D:	CALL	Z,C667B
;
	POP	HL
	JP	J4A29
;
;	-----------------
J4A94:	CALL	H.COMP
;
	LD	BC,8
	LD	HL,(PTRFIL)
	ADD	HL,BC
	CALL	ISFLIO
;
	LD	A,(HL)
	JR	NZ,J4ABF
;
	LD	A,(PRTFLG)
	OR	A
	JR	Z,J4AB1
;
	LD	A,(LPTPOS)
	CP	0EEH
	JR	J4AB9
;
;	-----------------
J4AB1:	LD	A,(CLMLST)
	LD	B,A
	LD	A,(TTYPOS)
	CP	B
J4AB9:	CALL	NC,C7328		; newline to outdo
;
	JP	NC,J4AFA
;
J4ABF:	SUB	0EH	; 14 
	JR	NC,J4ABF
;
	CPL	
	JR	J4AF3
;
;	-----------------
J4AC6:	PUSH	AF
	CALL	C521B
;
	RST	SYNCHR
	DEFB	")"			; check for )
	DEC	HL
	POP	AF
	SUB	0DFH
	PUSH	HL
	JR	Z,J4AEF
;
	LD	BC,8
	LD	HL,(PTRFIL)
	ADD	HL,BC
	CALL	ISFLIO
;
	LD	A,(HL)
	JR	NZ,J4AEF
;
	LD	A,(PRTFLG)
	OR	A
	JP	Z,J4AEC
;
	LD	A,(LPTPOS)
	JR	J4AEF
;
;	-----------------
J4AEC:	LD	A,(TTYPOS)
J4AEF:	CPL	
	ADD	A,E
	JR	NC,J4AFA
;
J4AF3:	INC	A
	LD	B,A
	LD	A,20H	; " "
J4AF7:	RST	OUTDO
;
	DJNZ	J4AF7
;
J4AFA:	POP	HL
	RST	CHRGTR
;
	JP	J4A2E

;	  Subroutine return interpreter output to screen
;	     Inputs  ________________________
;	     Outputs ________________________

C4AFF:	CALL	H.FINP
	XOR	A
	LD	(PRTFLG),A
	PUSH	HL
	LD	H,A
	LD	L,A
	LD	(PTRFIL),HL
	POP	HL
	RET	

;	  Subroutine LINE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4B0E:	CP	85H			; INPUT token ?
	JP	NZ,J58A7		; nope, graphics LINE statement
;
	RST	SYNCHR
	DEFB	085H			; check for INPUT token
	CP	"#"			; bufferid follows ?
	JP	Z,J6D8F			; yep, LINEINPUT for files
	CALL	C4B7B
	CALL	PTRGET
	CALL	C3058			; check if string
	PUSH	DE
	PUSH	HL
	CALL	INLIN
;
	POP	DE
	POP	BC
	JP	C,J63FE
;
	PUSH	BC
	PUSH	DE
	LD	B,00H
	CALL	C6638
;
	POP	HL
	LD	A,03H	; 3 
	JP	J4892
;
;	-----------------
I4B3A:	DEFB	"?Redo from start",13,10,0

J4B4D:	CALL	H.TRMN
;
	LD	A,(FLGINP)
J4B53:	OR	A
	JP	NZ,J404F
;
	POP	BC
	LD	HL,I4B3A
	CALL	C6678
;
	LD	HL,(SAVTXT)
	RET	
;
;	-----------------
J4B62:	CALL	C6D55
;
	PUSH	HL
	LD	HL,BUFMIN
	JP	J4B9B

;	  Subroutine INPUT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4B6C:	CP	"#"			; bufferid follows ?
	JR	Z,J4B62			; yep,
;
	PUSH	HL
	PUSH	AF
	CALL	TOTEXT
;
	POP	AF
	POP	HL
	LD	BC,I4B8B
	PUSH	BC
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4B7B:	CP	'"'
	LD	A,00H
	RET	NZ
;
	CALL	C6636
;
	RST	SYNCHR
	DEFB	";"			; check for ;
	PUSH	HL
	CALL	C667B
;
	POP	HL
	RET	
;
;	-----------------
I4B8B:	PUSH	HL
	CALL	QINLIN
;
	POP	BC
	JP	C,J63FE
;
	INC	HL
	LD	A,(HL)
	OR	A
	DEC	HL
	PUSH	BC
	JP	Z,J485A
;
J4B9B:	LD	(HL),2CH	; ","
	JR	J4BA4

;	  Subroutine READ statement
;	     Inputs  ________________________
;	     Outputs ________________________

C4B9F:	PUSH	HL
	LD	HL,(DATPTR)
	DEFB	0F6H			; XOR xx, skip next instruction
J4BA4:	XOR	A
	LD	(FLGINP),A
	EX	(SP),HL
	DEFB	001H			; LD BC,xxxx, skip next instruction
J4BAA:	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	PTRGET
;
	EX	(SP),HL
	PUSH	DE
	LD	A,(HL)
	CP	2CH	; ","
	JR	Z,J4BD1
;
	LD	A,(FLGINP)
J4BB9:	OR	A
	JP	NZ,J4C40
;
	LD	A,3FH	; "?"
	RST	OUTDO
;
	CALL	QINLIN
;
	POP	DE
	POP	BC
	JP	C,J63FE
;
	INC	HL
	LD	A,(HL)
	DEC	HL
	OR	A
	PUSH	BC
	JP	Z,J485A
;
	PUSH	DE
J4BD1:	CALL	ISFLIO
;
	JP	NZ,J6D83
;
	RST	GETYPR
;
	PUSH	AF
	JR	NZ,J4BFD
;
	RST	CHRGTR
;
	LD	D,A
	LD	B,A
	CP	22H	; """
	JR	Z,J4BEE
;
	LD	A,(FLGINP)
	OR	A
	LD	D,A
	JR	Z,J4BEB
;
	LD	D,3AH	; ":"
J4BEB:	LD	B,2CH	; ","
	DEC	HL
J4BEE:	CALL	C6639
;
I4BF1:	POP	AF
	ADD	A,03H	; 3 
	EX	DE,HL
	LD	HL,I4C05
	EX	(SP),HL
	PUSH	DE
	JP	J4893
;
;	-----------------
J4BFD:	RST	CHRGTR
;
	LD	BC,I4BF1
	PUSH	BC
	JP	C3299			; convert text to number
;
;	-----------------
I4C05:	DEC	HL
	RST	CHRGTR
;
	JR	Z,J4C0E
;
	CP	2CH	; ","
	JP	NZ,J4B4D
;
J4C0E:	EX	(SP),HL
	DEC	HL
	RST	CHRGTR
;
	JP	NZ,J4BAA
;
	POP	DE
	LD	A,(FLGINP)
	OR	A
	EX	DE,HL
	JP	NZ,J63DE
;
	PUSH	DE
	CALL	ISFLIO
;
	JR	NZ,J4C2B
;
	LD	A,(HL)
	OR	A
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4C25:	LD	HL,I4C2F
	CALL	NZ,C6678
J4C2B:	POP	HL
	JP	C4AFF			; return interpreter output to screen
;
;	-----------------
I4C2F:	DEFB	"?Extra ignored",13,10,0

J4C40:	CALL	C485B
;
	OR	A
	JR	NZ,J4C57
;
	INC	HL
	LD	A,(HL)
	INC	HL
	OR	(HL)
	LD	E,04H	; 4 
	JP	Z,J406F
;
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(DATLIN),DE
J4C57:	RST	CHRGTR
;
	CP	84H
	JR	NZ,J4C40
;
	JP	J4BD1

;
;	  Subroutine evaluate = expression
;	     Inputs  HL = basicpointer
;	     Outputs ________________________
;
C4C5F:	RST	SYNCHR
	DEFB	0EFH			; check for =
	DEFB	001H			; LD BC,xxxx, skip next instruction

;	  Subroutine evaluate ( expression
;	     Inputs  HL = basicpointer
;	     Outputs ________________________
;

C4C62:	RST	SYNCHR
	DEFB	"("			; check for (

;	  Subroutine FRMEVL (Expression Evaluator)
;	     Inputs  HL = basicpointer
;	     Outputs ________________________

FRMEVL:	DEC	HL

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C4C65:	LD	D,00H

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C4C67:	PUSH	DE
	LD	C,01H	; 1 
	CALL	C625E
;
	CALL	H.FRME
;
	CALL	C4DC7			; evaluate factor
;
I4C73:	LD	(TEMP2),HL
J4C76:	LD	HL,(TEMP2)
	POP	BC
	LD	A,(HL)
	LD	(TEMP3),HL
	CP	0EEH
	RET	C
;
	CP	0F1H
	JR	C,J4CE4
;
	SUB	0F1H
	LD	E,A
	JR	NZ,J4C93
;
	LD	A,(VALTYP)
	CP	03H	; 3 
	LD	A,E
	JP	Z,J6787
;
J4C93:	CP	0CH	; 12 
	RET	NC
;
	LD	HL,I3D3B
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4C99:	LD	D,00H
	ADD	HL,DE
	LD	A,B
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4C9D:	LD	D,(HL)
	CP	D
	RET	NC
;
J4CA0:	PUSH	BC
	LD	BC,J4C76
	PUSH	BC
	LD	A,D
	CALL	H.NTPL
;
	CP	51H	; "Q"
	JR	C,J4CFD
;
	AND	0FEH
	CP	7AH	; "z"
	JR	Z,J4CFD
;
J4CB3:	LD	HL,DAC+2
	LD	A,(VALTYP)
	SUB	03H	; 3 
	JP	Z,J406D
;
	OR	A
	LD	HL,(DAC+2)
	PUSH	HL
	JP	M,J4CD5
;
	LD	HL,(DAC)
	PUSH	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4CCA:	JP	PO,J4CD5
;
	LD	HL,(DAC+6)
	PUSH	HL
	LD	HL,(DAC+4)
	PUSH	HL
J4CD5:	ADD	A,03H	; 3 
	LD	C,E
	LD	B,A
	PUSH	BC
	LD	BC,I4D22
J4CDD:	PUSH	BC
	LD	HL,(TEMP3)
	JP	C4C67
;
;	-----------------
J4CE4:	LD	D,00H
J4CE6:	SUB	0EEH
	JR	C,J4D08
;
	CP	03H	; 3 
	JR	NC,J4D08
;
	CP	01H	; 1 
	RLA	
	XOR	D
	CP	D
	LD	D,A
	JP	C,J4055
;
	LD	(TEMP3),HL
	RST	CHRGTR
;
	JR	J4CE6
;
;	-----------------
J4CFD:	PUSH	DE
	CALL	C2F8A			; convert DAC to integer
;
	POP	DE
	PUSH	HL
	LD	BC,I4F78
	JR	J4CDD
;
;	-----------------
J4D08:	LD	A,B
	CP	64H	; "d"
	RET	NC
;
	PUSH	BC
	PUSH	DE
	LD	DE,I6405
	LD	HL,I4F57
	PUSH	HL
	RST	GETYPR
;
	JP	NZ,J4CB3
;
	LD	HL,(DAC+2)
	PUSH	HL
	LD	BC,I65C8
	JR	J4CDD

;	  Subroutine apply infix math operator
;	     Inputs  ________________________
;	     Outputs ________________________

I4D22:	POP	BC
	LD	A,C
	LD	(DORES),A
	LD	A,(VALTYP)
	CP	B
	JR	NZ,J4D38
;
	CP	02H	; 2 
	JR	Z,J4D50
;
	CP	04H	; 4 
	JP	Z,J4D9D
;
	JR	NC,J4D63
;
J4D38:	LD	D,A
	LD	A,B
	CP	08H	; 8 
	JR	Z,J4D60
;
	LD	A,D
	CP	08H	; 8 
	JR	Z,J4D87
;
	LD	A,B
	CP	04H	; 4 
	JR	Z,J4D9A
;
	LD	A,D
	CP	03H	; 3 
	JP	Z,J406D
;
	JR	NC,J4DA4
;
J4D50:	LD	HL,I3D69
	LD	B,00H
	ADD	HL,BC
	ADD	HL,BC
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	POP	DE
	LD	HL,(DAC+2)
	PUSH	BC
	RET	
;
;	-----------------
J4D60:	CALL	C303A			; convert DAC to double real
;
J4D63:	CALL	C2F10			; HL = DAC
;
	POP	HL
	LD	(DAC+4),HL
	POP	HL
	LD	(DAC+6),HL
J4D6E:	POP	BC
	POP	DE
	CALL	C2EC1			; DAC = (single)
J4D73:	CALL	C303A			; convert DAC to double real
;
	LD	HL,I3D51
J4D79:	LD	A,(DORES)
	RLCA	
	ADD	A,L
	LD	L,A
	ADC	A,H
	SUB	L
	LD	H,A
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	JP	(HL)
;
;	-----------------
J4D87:	LD	A,B
	PUSH	AF
	CALL	C2F10			; HL = DAC
;
	POP	AF
	LD	(VALTYP),A
	CP	04H	; 4 
	JR	Z,J4D6E
;
	POP	HL
	LD	(DAC+2),HL
	JR	J4D73
;
;	-----------------
J4D9A:	CALL	C2FB2			; convert DAC to single real
;
J4D9D:	POP	BC
	POP	DE
J4D9F:	LD	HL,I3D5D
	JR	J4D79
;
;	-----------------
J4DA4:	POP	HL
	CALL	C2EB1			; push DAC (single)
	CALL	C2FCB			; convert to single precision real
	CALL	C2ECC			; = DAC (single)
	POP	HL
	LD	(DAC+0),HL
	POP	HL
	LD	(DAC+2),HL
	JR	J4D9F
;
;	-----------------
C4DB8:	PUSH	HL
	EX	DE,HL
	CALL	C2FCB			; convert to single precision real
	POP	HL
	CALL	C2EB1			; push DAC (single)
	CALL	C2FCB			; convert to single precision real
	JP	J3265
;
;	-----------------
;
;	  Subroutine Factor Evaluator
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4DC7:	RST	CHRGTR
;
	JP	Z,J406A
;
	JP	C,C3299			; convert text to number
;
	CALL	C64A8
;
	JP	NC,J4E9B
;
	CP	20H	; " "
	JP	C,J46B8
;
	CALL	H.EVAL
;
	INC	A
	JP	Z,J4EFC
;
	DEC	A
	CP	0F1H
	JR	Z,C4DC7			; again
;
	CP	0F2H
	JP	Z,J4E8D
;
	CP	22H	; """
	JP	Z,C6636
;
	CP	0E0H
	JP	Z,J4F63
;
	CP	26H	; "&"
	JP	Z,C4EB8
;
	CP	0E2H
	JR	NZ,J4E07
;
	RST	CHRGTR

;	  Subroutine ERR function
;	     Inputs  ________________________
;	     Outputs ________________________

	LD	A,(ERRFLG)
	PUSH	HL
	CALL	C4FCF
C4E05:	POP	HL
	RET	
;
;	-----------------
J4E07:	CP	0E1H
	JR	NZ,J4E15

;	  Subroutine ERL function
;	     Inputs  ________________________
;	     Outputs ________________________

	RST	CHRGTR
	PUSH	HL
	LD	HL,(ERRLIN)
	CALL	C3236
	POP	HL
	RET	
;
;	-----------------
J4E15:	CP	0EDH
	JP	Z,J5803
;
	CP	0CBH
	JP	Z,J7900
;
	CP	0C7H
	JP	Z,J7A84
;
	CP	0C8H
	JP	Z,J7B47
;
	CP	0C9H
	JP	Z,J7BCB
;
	CP	0C1H
	JP	Z,J791B
;
	CP	0EAH
	JP	Z,J7C3E
;
	CP	0E9H
	JP	Z,J7C43
;
	CP	0E7H
	JR	NZ,J4E64

;	  Subroutine VARPTR function
;	     Inputs  ________________________
;	     Outputs ________________________

	RST	CHRGTR
;
	RST	SYNCHR
	DEFB	"("			; check for (
	CP	"#"
	JR	NZ,J4E53		; no fileid, varptr for variables
;
	CALL	C521B
;
	PUSH	HL
	CALL	C6A6D
;
	EX	DE,HL
	POP	HL
	JR	J4E56
;
;	-----------------
J4E53:	CALL	C5F5D
;
J4E56:	RST	SYNCHR
	DEFB	")"			; check for )
	PUSH	HL
	EX	DE,HL
	LD	A,H
	OR	L
	JP	Z,C475A
;
	CALL	C2F99			; put HL in DAC
;
	POP	HL
	RET	
;
;	-----------------
J4E64:	CP	0DDH
	JP	Z,J4FD5
;
	CP	0E5H
	JP	Z,J68EB
;
	CP	0ECH
	JP	Z,J7347
;
	CP	0E3H
	JP	Z,J6829
;
	CP	85H
	JP	Z,J6C87
;
	CP	0E8H
	JP	Z,J790A
;
	CP	0DEH
	JP	Z,J5040
;
;
;	  Subroutine evaluate ( expression )
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4E87:	CALL	C4C62			; evaluate ( expression
	RST	SYNCHR
	DEFB	")"			; check for )
	RET	
;
;	-----------------
J4E8D:	LD	D,7DH	; "}"
	CALL	C4C67
;
	LD	HL,(TEMP2)
	PUSH	HL
	CALL	C2E86
;
I4E99:	POP	HL
	RET	
;
;	-----------------
J4E9B:	CALL	PTRGET
;
I4E9E:	PUSH	HL
	EX	DE,HL
	LD	(DAC+2),HL
	RST	GETYPR
	CALL	NZ,C2F08		; DAC = HL
;
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4EA9:	LD	A,(HL)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4EAA:	CP	61H	; "a"
	RET	C
;
	CP	7BH	; "{"
	RET	NC
;
	AND	5FH	; "_"
	RET	
;
;	-----------------
;	Unused Code ?
;	-----------------

?.4EB3:	CP	26H	; "&"
	JP	NZ,C4769
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4EB8:	LD	DE,0
	RST	CHRGTR
;
	CALL	C4EAA
;
	LD	BC,0102H
	CP	42H	; "B"
	JR	Z,J4ED5
;
	LD	BC,0308H
	CP	4FH	; "O"
	JR	Z,J4ED5
;
	LD	BC,0410H
	CP	48H	; "H"
	JP	NZ,J4055
;
J4ED5:	INC	HL
	LD	A,(HL)
	EX	DE,HL
	CALL	C4EAA
;
	CP	3AH	; ":"
	JR	C,J4EE5
;
	CP	41H	; "A"
	JR	C,J4EF7
;
	SUB	07H	; 7 
J4EE5:	SUB	30H	; "0"
	CP	C
	JR	NC,J4EF7
;
	PUSH	BC
J4EEB:	ADD	HL,HL
	JP	C,J4067
;
	DJNZ	J4EEB
;
	POP	BC
	OR	L
	LD	L,A
	EX	DE,HL
	JR	J4ED5
;
;	-----------------
J4EF7:	CALL	C2F99			; put HL in DAC
;
	EX	DE,HL
	RET	
;
;	-----------------
J4EFC:	INC	HL
	LD	A,(HL)
	SUB	81H
	LD	B,00H
	RLCA	
	LD	C,A
	PUSH	BC
	RST	CHRGTR
;
	LD	A,C
	CP	05H	; 5 
	JR	NC,J4F21
;
	CALL	C4C62			; evaluate ( expression
;
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	C3058			; check if string
;
	EX	DE,HL
	LD	HL,(DAC+2)
	EX	(SP),HL
	PUSH	HL
	EX	DE,HL
	CALL	GETBYT
;
	EX	DE,HL
	EX	(SP),HL
	JR	J4F3B
;
;	-----------------
J4F21:	CALL	C4E87			; evaluate ( expression )
;
	EX	(SP),HL
	LD	A,L
	CP	0CH	; 12 
	JR	C,J4F37
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4F2A:	CP	1BH
;
; MSX 1 had
; CALL X.FF75
;
	NOP
	NOP
	NOP
;
;
;
	JR	NC,J4F37
;
	RST	GETYPR
;
	PUSH	HL
	CALL	C,C303A			; convert DAC to double real
;
	POP	HL
J4F37:	LD	DE,I4E99
	PUSH	DE
J4F3B:	LD	BC,I39DE
	CALL	H.FING
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4F41:	ADD	HL,BC
	LD	C,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,C
	JP	(HL)
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4F47:	DEC	D
	CP	0F2H
	RET	Z
;
	CP	2DH	; "-"
	RET	Z
;
	INC	D
	CP	2BH	; "+"
	RET	Z
;
	CP	0F1H
	RET	Z
;
	DEC	HL
	RET	

;	  Subroutine apply infix relational operator
;	     Inputs  ________________________
;	     Outputs ________________________

I4F57:	INC	A
	ADC	A,A
	POP	BC
	AND	B
	ADD	A,0FFH
	SBC	A,A
	CALL	C2E9A
;
	JR	J4F75
;
;	-----------------
J4F63:	LD	D,5AH	; "Z"
	CALL	C4C67
;
	CALL	C2F8A			; convert DAC to integer
;
	LD	A,L
	CPL	
	LD	L,A
	LD	A,H
	CPL	
	LD	H,A
	LD	(DAC+2),HL
	POP	BC
J4F75:	JP	J4C76

;	  Subroutine apply infix logical operator
;	     Inputs  ________________________
;	     Outputs ________________________

I4F78:	LD	A,B
	PUSH	AF
	CALL	C2F8A			; convert DAC to integer
;
	POP	AF
	POP	DE
	CP	7AH	; "z"
	JP	Z,C323A			; integer mod
;
	CP	7BH	; "{"
	JP	Z,C31E6			; integer divide
;
	LD	BC,I4FD1
	PUSH	BC
	CP	46H	; "F"
	JR	NZ,J4F97
;
	LD	A,E
	OR	L
	LD	L,A
	LD	A,H
	OR	D
	RET	
;
;	-----------------
J4F97:	CP	50H	; "P"
	JR	NZ,J4FA1
;
	LD	A,E
	AND	L
	LD	L,A
	LD	A,H
	AND	D
	RET	
;
;	-----------------
J4FA1:	CP	3CH	; "<"
	JR	NZ,J4FAB
;
	LD	A,E
	XOR	L
	LD	L,A
	LD	A,H
	XOR	D
	RET	
;
;	-----------------
J4FAB:	CP	32H	; "2"
	JR	NZ,J4FB7
;
	LD	A,E
	XOR	L
	CPL	
	LD	L,A
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4FB3:	LD	A,H
	XOR	D
	CPL	
	RET	
;
;	-----------------
J4FB7:	LD	A,L
	CPL	
	AND	E
	CPL	
	LD	L,A
	LD	A,H
	CPL	
	AND	D
	CPL	
	RET	
;
;	-----------------
J4FC1:	OR	A
	SBC	HL,DE
	JP	C3236

;	  Subroutine LPOS function
;	     Inputs  ________________________
;	     Outputs ________________________

C4FC7:	LD	A,(LPTPOS)
	JR	C4FCF

;	  Subroutine POS function
;	     Inputs  ________________________
;	     Outputs ________________________

C4FCC:	LD	A,(TTYPOS)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4FCF:	LD	L,A
	XOR	A
I4FD1:	LD	H,A
	JP	C2F99			; put HL in DAC

;	  Subroutine USR function
;	     Inputs  ________________________
;	     Outputs ________________________
;	     Remark  user machinecode subroutine gets the following parameters
;	             HL = DAC
;	             DE = 


J4FD5:	CALL	C4FF4			; get usernumber and USRTAB entry
	PUSH	DE
	CALL	C4E87			; evaluate ( expression )
	EX	(SP),HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	HL,J3297
	PUSH	HL			; return here to restore basictext pointer after user subroutine
	PUSH	DE
	LD	A,(VALTYP)
	PUSH	AF
	CP	03H
	CALL	Z,C67D3			; parameter is a string, free string
	POP	AF
	EX	DE,HL
	LD	HL,DAC
	RET				; start user machinecode subroutine
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C4FF4:	RST	CHRGTR
	LD	BC,0
	CP	1BH
	JR	NC,J5007
	CP	11H
	JR	C,J5007
	RST	CHRGTR
	LD	A,(CONLO)
	OR	A
	RLA	
	LD	C,A
J5007:	EX	DE,HL
	LD	HL,USRTAB
	ADD	HL,BC
	EX	DE,HL
	RET	

;	  Subroutine DEF USR statement
;	     Inputs  ________________________
;	     Outputs ________________________

J500E:	CALL	C4FF4
	PUSH	DE
	RST	SYNCHR
	DEFB	0EFH			; check for =
	CALL	FRMQNT
	EX	(SP),HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	HL
	RET	

;	  Subroutine DEF statement
;	     Inputs  ________________________
;	     Outputs ________________________

C501D:	CP	0DDH
	JR	Z,J500E			; USR token, DEFUSR
	CALL	C51A1			; check for FN and create functionname var
	CALL	C5193			; illegal direct when in direct mode
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	EX	DE,HL			; save pointer to functiondefinition
	LD	A,(HL)
	CP	"("
	JP	NZ,C485B		; no parameters, skip to next statement and continue
	RST	CHRGTR
J5033:	CALL	PTRGET			; locate variable
	LD	A,(HL)
	CP	")"
	JP	Z,C485B			; end of parameters, skip to next statement and continue
	RST	SYNCHR
	DEFB	","			; check for ,
	JR	J5033			; parse through parameters

;	  Subroutine FN function
;	     Inputs  ________________________
;	     Outputs ________________________

J5040:	CALL	C51A1			; check for FN and locate functionname var
	LD	A,(VALTYP)
	OR	A
	PUSH	AF
	LD	(TEMP2),HL		; save basictext pointer
	EX	DE,HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A			; pointer to functiondefinition
	LD	A,H
	OR	L
	JP	Z,J4061			; not defined, undefined user function
	LD	A,(HL)
	CP	"("
	JP	NZ,J50F4		; no parameters, skip
	RST	CHRGTR
	LD	(TEMP3),HL		; save functiondefinition pointer
	EX	DE,HL
	LD	HL,(TEMP2)
	RST	SYNCHR
	DEFB	"("			; check for (
	XOR	A
	PUSH	AF
	PUSH	HL
	EX	DE,HL
J5069:	LD	A,80H
	LD	(SUBFLG),A		; flag function var
	CALL	PTRGET			; locate var
	EX	DE,HL
	EX	(SP),HL
	LD	A,(VALTYP)
	PUSH	AF
	PUSH	DE
	CALL	FRMEVL			; evaluate expression
;
	LD	(TEMP2),HL		; save basictext pointer
	POP	HL
	LD	(TEMP3),HL
	POP	AF
	CALL	C517A
;
	LD	C,04H	; 4 
	CALL	C625E
;
	LD	HL,-8
	ADD	HL,SP
	LD	SP,HL
	CALL	C2F10			; HL = DAC
;
	LD	A,(VALTYP)
	PUSH	AF
	LD	HL,(TEMP2)		; restore basictext pointer
	LD	A,(HL)
	CP	29H	; ")"
	JR	Z,J50AD
;
	RST	SYNCHR
	DEFB	","			; check for ,
	PUSH	HL
	LD	HL,(TEMP3)
	RST	SYNCHR
	DEFB	","			; check for ,
	JR	J5069
;
;	-----------------
I50A9:	POP	AF
	LD	(PRMLN2),A
J50AD:	POP	AF
	OR	A
	JR	Z,J50E9
;
	LD	(VALTYP),A
	LD	HL,0
	ADD	HL,SP
	CALL	C2F08			; DAC = HL
;
	LD	HL,8
	ADD	HL,SP
	LD	SP,HL
	POP	DE
	LD	L,03H	; 3 
	DEC	DE
	DEC	DE
	DEC	DE
	LD	A,(VALTYP)
	ADD	A,L
	LD	B,A
	LD	A,(PRMLN2)
	LD	C,A
	ADD	A,B
	CP	64H	; "d"
	JP	NC,C475A
;
	PUSH	AF
	LD	A,L
	LD	B,00H
	LD	HL,PARM2
	ADD	HL,BC
	LD	C,A
	CALL	C518E
;
	LD	BC,I50A9
	PUSH	BC
	PUSH	BC
	JP	J489E
;
;	-----------------
J50E9:	LD	HL,(TEMP2)
	RST	CHRGTR
;
	PUSH	HL
	LD	HL,(TEMP3)
	RST	SYNCHR
	DEFB	")"			; check for )
	DEFB	03EH			; LD A,xx, skip next instruction
J50F4:	PUSH	DE
	LD	(TEMP3),HL
	LD	A,(PRMLEN)
	ADD	A,04H	; 4 
	PUSH	AF
	RRCA	
	LD	C,A
	CALL	C625E
;
	POP	AF
	LD	C,A
	CPL	
	INC	A
	LD	L,A
	LD	H,0FFH
	ADD	HL,SP
	LD	SP,HL
	PUSH	HL
	LD	DE,PRMSTK
	CALL	C518E
;
	POP	HL
	LD	(PRMSTK),HL
	LD	HL,(PRMLN2)
	LD	(PRMLEN),HL
	LD	B,H
	LD	C,L
	LD	HL,PARM1
	LD	DE,PARM2
	CALL	C518E
;
	LD	H,A
	LD	L,A
	LD	(PRMLN2),HL
	LD	HL,(FUNACT)
	INC	HL
	LD	(FUNACT),HL
	LD	A,H
	OR	L
	LD	(NOFUNS),A
	LD	HL,(TEMP3)
	CALL	C4C5F			; evaluate = expression
;
	DEC	HL
	RST	CHRGTR
;
	JP	NZ,J4055
;
	RST	GETYPR
;
	JR	NZ,J5156
;
	LD	DE,DSCTMP
	LD	HL,(DAC+2)
	RST	DCOMPR
;
	JR	C,J5156
;
	CALL	C6611
;
	CALL	C6658
;
J5156:	LD	HL,(PRMSTK)
	LD	D,H
	LD	E,L
	INC	HL
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	BC
	INC	BC
	INC	BC
	INC	BC
	LD	HL,PRMSTK
	CALL	C518E
;
	EX	DE,HL
	LD	SP,HL
	LD	HL,(FUNACT)
	DEC	HL
	LD	(FUNACT),HL
	LD	A,H
	OR	L
	LD	(NOFUNS),A
	POP	HL
	POP	AF
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C517A:	PUSH	HL
	AND	07H	; 7 
	LD	HL,I3D47
	LD	C,A
	LD	B,00H
	ADD	HL,BC
	CALL	C4F41
;
	POP	HL
	RET	
;
;	-----------------
J5189:	LD	A,(DE)
	LD	(HL),A
	INC	HL
	INC	DE
	DEC	BC
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C518E:	LD	A,B
	OR	C
	JR	NZ,J5189
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5193:	PUSH	HL
	LD	HL,(CURLIN)
	INC	HL
	LD	A,H
	OR	L
	POP	HL
	RET	NZ
	LD	E,0CH	; 12 
	JP	J406F
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C51A1:	RST	SYNCHR
	DEFB	0DEH			; check for FN token
	LD	A,080H
	LD	(SUBFLG),A
	OR	(HL)
	LD	C,A			; first varletter with b7 set
	JP	J5EA9			; create functionname var
;
;	-----------------
J51AD:	CP	7EH	; "~"
	JR	NZ,J51C6
;
	INC	HL
	LD	A,(HL)
	INC	HL
	CP	83H
	JP	Z,J696E
;
	CP	0A3H
	JP	Z,J77BF
;
	CP	85H
	JP	Z,J77B1
;
	CALL	H.ISMI
;
J51C6:	JP	J4055

;	  Subroutine WIDTH statement
;	     Inputs  ________________________
;	     Outputs ________________________

C51C9:	CALL	GETBYT
;
	CALL	H.WIDT
;
	AND	A
;
; MSX 1 had
;
;	jr	z,A51DF
;	ld	a,(OLDSCR)
;	and	a
;	ld	a,e
;	jr	z,A51DD
;	cp	32+1
;	jr	nc,A51DF
;A51DD:	cp	40+1
;A51DF:	jp	nc,A475A
;	ld	a,(LINLEN)
;	cp	e
;	ret	z
;	ld	a,00CH
;	rst	OUTDO
;	ld	a,e
;	ld	(LINLEN),a
;	ld	a,(OLDSCR)
;	dec	a
;	ld	a,e
;	jr	nz,A51FA
;	ld	(LINL32),a
;	jr	A51FD
;A51FA:	ld	(LINL40),a
;A51FD:	ld	a,00CH
;	rst	OUTDO
;	ld	a,e
;A5201:	sub	00EH
;	jr	nc,A5201
;	add	a,01CH
;	cpl
;	inc	a
;	add	a,e
;	ld	(CLMLST),a
;	ret

	LD	IX,S.WIDTHS
	JP	EXTROM
;
;	because of the above code, 51D7-520D is free for other use!
;
;	-----------------
;	following routine is used by the subrom
;	-----------------

C51D7:	OUT	(0A8H),A
	LD	A,(HL)
	CPL	
	LD	C,A
	AND	0FCH
	OR	D
	LD	(HL),A
	LD	A,E
	AND	3FH	; "?"
	LD	D,A
	LD	A,B
	AND	0C0H
	OR	D
	OUT	(0A8H),A
	EXX	
	LDIR	
	EXX	
	LD	A,E
	OUT	(0A8H),A
	LD	A,C
	LD	(HL),A
	LD	A,B
	OUT	(0A8H),A
	RET

	DEFS	0520EH-$,0
;
; End of MSX 1 change
;	-----------------

;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C520E:	RST	CHRGTR
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C520F:	CALL	FRMEVL			; evaluate expression
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5212:	PUSH	HL
	CALL	C2F8A			; convert DAC to integer
;
	EX	DE,HL
	POP	HL
	LD	A,D
	OR	A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C521B:	RST	CHRGTR
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
GETBYT:	CALL	FRMEVL			; evaluate expression
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C521F:	CALL	C5212
;
	JP	NZ,C475A
;
	DEC	HL
	RST	CHRGTR
;
	LD	A,E
	RET	

;	  Subroutine LLIST statement
;	     Inputs  ________________________
;	     Outputs ________________________

C5229:	LD	A,01H	; 1 
	LD	(PRTFLG),A

;	  Subroutine LIST statement
;	     Inputs  ________________________
;	     Outputs ________________________

C522E:	CALL	H.LIST
;
	POP	BC
	CALL	C4279
;
	PUSH	BC
J5236:	LD	HL,0FFFFH
	LD	(CURLIN),HL
	POP	HL
	POP	DE
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	LD	A,B
	OR	C
	JP	Z,J411F
;
	CALL	ISFLIO
;
	CALL	Z,ISCNTC
;
	PUSH	BC
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	PUSH	BC
	EX	(SP),HL
	EX	DE,HL
	RST	DCOMPR
;
	POP	BC
	JP	C,J411E
;
	EX	(SP),HL
	PUSH	HL
	PUSH	BC
	EX	DE,HL
	LD	(DOT),HL
	CALL	C3412
;
	POP	HL
	LD	A,(HL)
	CP	09H	; 9 
	JR	Z,J526D
;
	LD	A,20H	; " "
	RST	OUTDO
;
J526D:	CALL	C5284
;
	LD	HL,BUF
	CALL	C527B
;
	CALL	C7328			; newline to outdo
;
	JR	J5236
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C527B:	LD	A,(HL)
	OR	A
	RET	Z
;
	CALL	C7367
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5281:	INC	HL
	JR	C527B
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5284:	LD	BC,BUF
	LD	D,0FFH
	XOR	A
	LD	(DORES),A
	JR	J5293
;
;	-----------------
J528F:	INC	BC
	INC	HL
	DEC	D
	RET	Z
;
J5293:	LD	A,(HL)
	OR	A
	LD	(BC),A
	RET	Z
;
	CP	0BH	; 11 
	JR	C,J52C0
;
	CP	20H	; " "
	JP	C,J5361
;
	CP	22H	; """
	JR	NZ,J52AE
;
	LD	A,(DORES)
	XOR	01H	; 1 
	LD	(DORES),A
	LD	A,22H	; """
J52AE:	CP	3AH	; ":"
	JR	NZ,J52C0
;
	LD	A,(DORES)
	RRA	
	JR	C,J52BE
;
	RLA	
	AND	0FDH
	LD	(DORES),A
J52BE:	LD	A,3AH	; ":"
J52C0:	OR	A
	JP	P,J528F
;
	LD	A,(DORES)
	RRA	
	JR	C,J52F8
;
	RRA	
	RRA	
	JR	NC,J530C
;
	LD	A,(HL)
	CP	0E6H
	PUSH	HL
	PUSH	BC
	LD	HL,I52F5
	PUSH	HL
	RET	NZ
;
	DEC	BC
	LD	A,(BC)
	CP	4DH	; "M"
	RET	NZ
;
	DEC	BC
	LD	A,(BC)
	CP	45H	; "E"
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C52E1:	RET	NZ
;
	DEC	BC
	LD	A,(BC)
	CP	52H	; "R"
	RET	NZ
;
	DEC	BC
	LD	A,(BC)
	CP	3AH	; ":"
	RET	NZ
;
	POP	AF
	POP	AF
	POP	HL
	INC	D
	INC	D
	INC	D
	INC	D
	JR	J531A
;
;	-----------------
I52F5:	POP	BC
	POP	HL
	LD	A,(HL)
J52F8:	JP	J528F
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C52FB:	LD	A,(DORES)
	OR	02H	; 2 
J5300:	LD	(DORES),A
	XOR	A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5305:	LD	A,(DORES)
	OR	04H	; 4 
	JR	J5300
;
;	-----------------
J530C:	RLA	
	JR	C,J52F8
;
	LD	A,(HL)
	CP	84H
	CALL	Z,C52FB
;
	CP	8FH
	CALL	Z,C5305
;
J531A:	LD	A,(HL)
	INC	A
	LD	A,(HL)
	JR	NZ,J5323
;
	INC	HL
	LD	A,(HL)
	AND	7FH
J5323:	INC	HL
	CP	0A1H
	JR	NZ,J532A
;
	DEC	BC
	INC	D
J532A:	PUSH	HL
	PUSH	BC
	PUSH	DE
	CALL	H.BUFL
;
	LD	HL,T3A72-1
	LD	B,A
	LD	C,"A"-1
J5336:	INC	C
J5337:	INC	HL
	LD	D,H
	LD	E,L
J533A:	LD	A,(HL)
	OR	A
	JR	Z,J5336
;
	INC	HL
	JP	P,J533A
;
	LD	A,(HL)
	CP	B
	JR	NZ,J5337
;
	EX	DE,HL
	LD	A,C
	POP	DE
	POP	BC
	CP	5BH	; "["
	JR	NZ,J5350
;
J534E:	LD	A,(HL)
	INC	HL
J5350:	LD	E,A
	AND	7FH
	LD	(BC),A
	INC	BC
	DEC	D
	JP	Z,J66A7
;
	OR	E
	JP	P,J534E
;
	POP	HL
	JP	J5293
;
;	-----------------
J5361:	DEC	HL
	RST	CHRGTR
;
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CALL	C46E8
;
	POP	AF
	LD	BC,I537E
	PUSH	BC
	CP	0BH	; 11 
	JP	Z,C371E			; convert integer to octal text
;
	CP	0CH	; 12 
	JP	Z,C3722			; convert integer to hexadecimal text
;
	LD	HL,(CONLO)
	JP	C3425			; convert DAC to text, unformatted
;
;	-----------------
I537E:	POP	BC
	POP	DE
	LD	A,(CONSAV)
	LD	E,4FH	; "O"
	CP	0BH	; 11 
	JR	Z,J538F
;
	CP	0CH	; 12 
	LD	E,48H	; "H"
	JR	NZ,J539A
;
J538F:	LD	A,26H	; "&"
	LD	(BC),A
	INC	BC
	DEC	D
	RET	Z
;
	LD	A,E
	LD	(BC),A
	INC	BC
	DEC	D
	RET	Z
;
J539A:	LD	A,(CONTYP)
	CP	04H	; 4 
	LD	E,00H
	JR	C,J53A9
;
	LD	E,21H	; "!"
	JR	Z,J53A9
;
	LD	E,23H	; "#"
J53A9:	LD	A,(HL)
	CP	20H	; " "
	JR	NZ,J53AF
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C53AE:	INC	HL
J53AF:	LD	A,(HL)
	INC	HL
	OR	A
	JR	Z,J53D4
;
	LD	(BC),A
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C53B5:	INC	BC
	DEC	D
	RET	Z
;
	LD	A,(CONTYP)
	CP	04H	; 4 
	JR	C,J53AF
;
	DEC	BC
	LD	A,(BC)
	INC	BC
	JR	NZ,J53C8
;
	CP	2EH	; "."
	JR	Z,J53D0
;
J53C8:	CP	44H	; "D"
	JR	Z,J53D0
;
	CP	45H	; "E"
	JR	NZ,J53AF
;
J53D0:	LD	E,00H
	JR	J53AF
;
;	-----------------
J53D4:	LD	A,E
	OR	A
	JR	Z,J53DC
;
	LD	(BC),A
	INC	BC
	DEC	D
	RET	Z
;
J53DC:	LD	HL,(CONTXT)
	JP	J5293

;	  Subroutine DELETE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C53E2:	CALL	C4279
;
	PUSH	BC
	CALL	C54EA
;
	POP	BC
	POP	DE
	PUSH	BC
	PUSH	BC
	CALL	C4295
;
	JR	NC,J53F7
;
	LD	D,H
	LD	E,L
	EX	(SP),HL
	PUSH	HL
	RST	DCOMPR
;
J53F7:	JP	NC,C475A
;
	LD	HL,J3FD7
;
; MSX 1 had
;
;	CALL	C6678
;
	CALL	C7BE8
;
;
;
	POP	BC
	LD	HL,J4237
	EX	(SP),HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5405:	EX	DE,HL
	LD	HL,(VARTAB)
J5409:	LD	A,(DE)
	LD	(BC),A
	INC	BC
	INC	DE
	RST	DCOMPR
;
	JR	NZ,J5409
;
	LD	H,B
	LD	L,C
	LD	(VARTAB),HL
J5415:	LD	(ARYTAB),HL
	LD	(STREND),HL
	RET	

;	  Subroutine PEEK function
;	     Inputs  ________________________
;	     Outputs ________________________

C541C:	CALL	C5439			; convert adres to INT
;
	LD	A,(HL)
	JP	C4FCF

;	  Subroutine POKE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C5423:	CALL	FRMQNT
;
	PUSH	DE
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	GETBYT
;
	POP	DE
	LD	(DE),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
FRMQNT:	CALL	FRMEVL			; evaluate expression
;
	PUSH	HL
	CALL	C5439			; convert adres to INT
;
	EX	DE,HL
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine convert adres to INT
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5439:	LD	BC,C2F8A
	PUSH	BC			; convert DAC to integer
	RST	GETYPR
	RET	M
;
; MSX 1 had
;
;	CALL	H.FRQI

; H.FRQI hook not supported by Turbo-R

	NOP
	NOP
	NOP


	CALL	C2E71			; get sign DAC
	RET	M
	CALL	C2FB2			; convert DAC to single real
	LD	BC,03245H
	LD	DE,08076H
	CALL	C2F21			; compare single real
	RET	C
	LD	BC,06545H
	LD	DE,06053H
	CALL	C2F21			; compare single real
	JP	NC,J4067
	LD	BC,065C5H
	LD	DE,06053H
	JP	C324E

;	  Subroutine RENUM statement
;	     Inputs  ________________________
;	     Outputs ________________________

C5468:	LD	BC,10
	PUSH	BC
	LD	D,B
	LD	E,B
	JR	Z,J5496
;
	CP	2CH	; ","
	JR	Z,J547D
;
	PUSH	DE
	CALL	C475F
;
	LD	B,D
	LD	C,E
	POP	DE
	JR	Z,J5496
;
J547D:	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	C475F
;
	JR	Z,J5496
;
	POP	AF
	RST	SYNCHR
	DEFB	","			; check for ,
	PUSH	DE
	CALL	C4769
;
	JP	NZ,J4055
;
	LD	A,D
	OR	E
	JP	Z,C475A
;
	EX	DE,HL
	EX	(SP),HL
	EX	DE,HL
J5496:	PUSH	BC
	CALL	C4295
;
	POP	DE
	PUSH	DE
	PUSH	BC
	CALL	C4295
;
	LD	H,B
	LD	L,C
	POP	DE
	RST	DCOMPR
;
	EX	DE,HL
	JP	C,C475A
;
	POP	DE
	POP	BC
	POP	AF
	PUSH	HL
	PUSH	DE
	JR	J54BD
;
;	-----------------
J54AF:	ADD	HL,BC
	JP	C,C475A
;
	EX	DE,HL
	PUSH	HL
	LD	HL,0FFF9H
	RST	DCOMPR
;
	POP	HL
	JP	C,C475A
;
J54BD:	PUSH	DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	A,D
	OR	E
	EX	DE,HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C54C4:	POP	DE
	JR	Z,J54CE
;
	LD	A,(HL)
	INC	HL
	OR	(HL)
	DEC	HL
	EX	DE,HL
	JR	NZ,J54AF
;
J54CE:	PUSH	BC
	CALL	C54F6
;
	POP	BC
	POP	DE
	POP	HL
J54D5:	PUSH	DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	A,D
	OR	E
	JR	Z,J54F1
;
	EX	DE,HL
	EX	(SP),HL
	EX	DE,HL
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	POP	HL
	JR	J54D5
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C54EA:	LD	A,(PTRFLG)
	OR	A
	RET	Z
	JR	J54F7
;
;	-----------------
J54F1:	LD	BC,J411E
	PUSH	BC
	DEFB	0FEH			; CP xx, skip next instruction
C54F6:	DEFB	0F6H			; OR xx, skip next instruction
J54F7:	XOR	A
	LD	(PTRFLG),A
	LD	HL,(TXTTAB)
	DEC	HL
J54FF:	INC	HL
	LD	A,(HL)
	INC	HL
	OR	(HL)
	RET	Z
;
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
J5508:	RST	CHRGTR
;
J5509:	OR	A
	JR	Z,J54FF
;
	LD	C,A
	LD	A,(PTRFLG)
	OR	A
	LD	A,C
	JR	Z,J556A
;
	CALL	H.SCNE
;
	CP	0A6H
	JR	NZ,J552F
;
	RST	CHRGTR
;
	CP	89H
	JR	NZ,J5509
;
	RST	CHRGTR
;
	CP	0EH	; 14 
	JR	NZ,J5509
;
	PUSH	DE
	CALL	C4771
;
	LD	A,D
	OR	E
	JR	NZ,J5537
;
	JR	J5556
;
;	-----------------
J552F:	CP	0EH	; 14 
	JR	NZ,J5508
;
	PUSH	DE
	CALL	C4771
;
J5537:	PUSH	HL
	CALL	C4295
;
	DEC	BC
	LD	A,0DH	; 13 
	JR	C,J557C
;
	CALL	C7323
;
	LD	HL,I555A
	PUSH	DE
	CALL	C6678
;
	POP	HL
	CALL	C3412
;
	POP	BC
	POP	HL
	PUSH	HL
	PUSH	BC
	CALL	C340A
;
I5555:	POP	HL
J5556:	POP	DE
	DEC	HL
J5558:	JR	J5508
;
;	-----------------
I555A:	DEFB	"Undefined line ",0

;
J556A:	CP	0DH	; 13 
	JR	NZ,J5558
;
	PUSH	DE
	CALL	C4771
;
	PUSH	HL
	EX	DE,HL
	INC	HL
	INC	HL
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	LD	A,0EH	; 14 
J557C:	LD	HL,I5555
	PUSH	HL
	LD	HL,(CONTXT)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5583:	PUSH	HL
	DEC	HL
	LD	(HL),B
	DEC	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5587:	LD	(HL),C
	DEC	HL
	LD	(HL),A
	POP	HL
	RET	
;
;	  Subroutine SYNCHR
;	     Inputs  ________________________
;	     Outputs ________________________
;
C558C:	LD	A,(HL)
	EX	(SP),HL
	CP	(HL)
	INC	HL
	EX	(SP),HL
	JP	NZ,J4055
;
	JP	C4666
;
;	  Subroutine GETYPR
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5597:	LD	A,(VALTYP)
	CP	08H	; 8 
	JR	NC,J55A3
;
	SUB	03H	; 3 
	OR	A
	SCF	
	RET	
;
;	-----------------
J55A3:	SUB	03H	; 3 
	OR	A
	RET	
;
;	-----------------
J55A7:	RST	CHRGTR

;	  Subroutine CALL statement
;	     Inputs  ________________________
;	     Outputs ________________________

C55A8:	LD	DE,PROCNM
	LD	B,15 
J55AD:	LD	A,(HL)
	AND	A
	JR	Z,J55BE			; end of line, end of name
	CP	":"
	JR	Z,J55BE			; statement seperator, end of name
	CP	"("
	JR	Z,J55BE			; parameter, end of name
	LD	(DE),A
	INC	DE
	INC	HL
	DJNZ	J55AD
J55BE:	LD	A,B
	CP	15
	JR	Z,J55D8			; no name, syntax error
J55C3:	XOR	A
	LD	(DE),A
	DEC	DE
	LD	A,(DE)
	CP	" "
	JR	Z,J55C3			; remove trailing spaces and place endmarker in name
	LD	B,40H
	LD	DE,SLTATR
J55D0:	LD	A,(DE)
J55D1:	AND	20H
	JR	NZ,J55DB		; expansion ROM has statement handler, try it
J55D5:	INC	DE
	DJNZ	J55D0			; next page/slot
J55D8:	JP	J4055
;
;	-----------------
J55DB:	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	C7E2A			; calculate devicecode
;
	PUSH	AF
	LD	C,A
	LD	L,04H
	CALL	C7E1A			; read device entry
;
	PUSH	DE
	POP	IX
	POP	IY
	POP	HL
	DEC	HL
	RST	CHRGTR
;
; MSX 1 had
;
;	CALL	C.001C
;
	CALL	C79C2
;
	POP	DE
	POP	BC
	JR	C,J55D5
;
	RET	

; external device handler

J55F8:	POP	HL
	LD	A,B
	CP	10H
	JR	C,J5600
	LD	B,15			; devicename length is max 15
J5600:	CALL	C7FB7			; bugfix for zero length devicename
;
J5603:	CALL	C4EA9			; get char uppercase
;
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	J5603			; copy devicename in PROCNM
;
	XOR	A
	LD	(DE),A			; zero terminator
	LD	B,40H
	LD	DE,SLTATR
J5612:	LD	A,(DE)
	AND	40H
	JR	NZ,J561D		; has device entry, try it
;
J5617:	INC	DE
	DJNZ	J5612			; next page
;
J561A:	JP	J6E6B			; devicename not recognized, bad filename
;
;	-----------------
J561D:	PUSH	BC
	PUSH	DE
	CALL	C7E2A			; calculate devicecode
	PUSH	AF
	LD	C,A
	LD	L,06H	; 6 
	CALL	C7E1A
	PUSH	DE
	POP	IX
	POP	IY
	LD	A,0FFH
	CALL	CALSLT
	POP	DE
	POP	BC
	JR	C,J5617
;
	LD	C,A
	LD	A,40H	; "@"
	SUB	B
	ADD	A,A
	ADD	A,A
	OR	C
	CP	09H	; 9 
	JR	C,J561A
;
	CP	0FCH
	JR	NC,J561A
;
	POP	HL
	POP	DE
	AND	A
	RET	
;
;	-----------------
J564A:	PUSH	BC
	PUSH	AF
	RRA	
	RRA	
	AND	3FH	; "?"
	CALL	C7E2D
;
	PUSH	AF
	LD	C,A
	LD	L,06H	; 6 
	CALL	C7E1A
;
	PUSH	DE
	POP	IX
	POP	IY
	POP	AF
	AND	03H	; 3 
	LD	(DEVICE),A
	POP	BC
	POP	AF
	POP	DE
	POP	HL
	JP	CALSLT
;
;	-----------------
J566C:	LD	(MCLTAB),DE
	CALL	FRMEVL			; evaluate expression
	PUSH	HL
	LD	DE,0
	PUSH	DE
	PUSH	AF
J5679:	CALL	FRESTR
	CALL	C2EDF			; load from HL (single)
	LD	B,C
	LD	C,D
	LD	D,E
	LD	A,B
	OR	C
	JR	Z,J568C
;
	LD	A,D
	OR	A
	JR	Z,J568C
;
	PUSH	BC
	PUSH	DE
J568C:	POP	AF
	LD	(MCLLEN),A
	POP	HL
	LD	A,H
	OR	L
	JR	NZ,J569F
;
	LD	A,(MCLFLG)
	OR	A
	JP	Z,J5709
;
	JP	J7494
;
;	-----------------
J569F:	LD	(MCLPTR),HL
J56A2:	CALL	C56EE
;
	JR	Z,J568C
;
	ADD	A,A
	LD	C,A
	LD	HL,(MCLTAB)
J56AC:	LD	A,(HL)
	ADD	A,A
J56AE:	CALL	Z,C475A
;
	CP	C
	JR	Z,J56B9
;
	INC	HL
	INC	HL
	INC	HL
	JR	J56AC
;
;	-----------------
J56B9:	LD	BC,J56A2
	PUSH	BC
	LD	A,(HL)
	LD	C,A
	ADD	A,A
	JR	NC,J56E2
;
	OR	A
	RRA	
	LD	C,A
	PUSH	BC
	PUSH	HL
	CALL	C56EE
;
	LD	DE,1
	JP	Z,J56DF
;
	CALL	C64A8
;
	JP	NC,J56DC
;
	CALL	C571C
;
	SCF	
	JR	J56E0
;
;	-----------------
J56DC:	CALL	C570B
;
J56DF:	OR	A
J56E0:	POP	HL
	POP	BC
J56E2:	INC	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	JP	(HL)
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C56E8:	CALL	C56EE
;
	JR	Z,J56AE
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C56EE:	PUSH	HL
J56EF:	LD	HL,MCLLEN
	LD	A,(HL)
	OR	A
	JR	Z,J5709
;
	DEC	(HL)
	LD	HL,(MCLPTR)
	LD	A,(HL)
	INC	HL
	LD	(MCLPTR),HL
	CP	20H	; " "
	JR	Z,J56EF
;
	CP	60H	; "`"
	JR	C,J5709
;
	SUB	20H	; " "
J5709:	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C570B:	PUSH	HL
	LD	HL,MCLLEN
	INC	(HL)
	LD	HL,(MCLPTR)
	DEC	HL
	LD	(MCLPTR),HL
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5719:	CALL	C56E8
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C571C:	CP	3DH	; "="
	JP	Z,J577A
;
	CP	2BH	; "+"
	JR	Z,C5719
;
	CP	2DH	; "-"
	JR	NZ,C572F
;
	LD	DE,I5795
	PUSH	DE
	JR	C5719
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C572F:	LD	DE,0
J5732:	CP	2CH	; ","
	JR	Z,C570B
;
	CP	3BH	; ";"
	RET	Z
;
	CP	3AH	; ":"
	JR	NC,C570B
;
	CP	30H	; "0"
	JR	C,C570B
;
	LD	HL,0
	LD	B,0AH	; 10 
J5746:	ADD	HL,DE
	JR	C,J5773
;
	DJNZ	J5746
;
	SUB	30H	; "0"
	LD	E,A
	LD	D,00H
	ADD	HL,DE
	JR	C,J5773
;
	EX	DE,HL
	CALL	C56EE
;
	JR	NZ,J5732
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C575A:	CALL	C56E8
;
	LD	DE,BUF
	PUSH	DE
	LD	B,28H	; "("
	CALL	C64A8
;
	JR	C,J5773
;
J5768:	LD	(DE),A
	INC	DE
	CP	3BH	; ";"
	JR	Z,J5776
;
	CALL	C56E8
;
	DJNZ	J5768
;
J5773:	CALL	C475A
;
J5776:	POP	HL
	JP	J4E9B
;
;	-----------------
J577A:	CALL	C575A
;
	CALL	C2F8A			; convert DAC to integer
;
	EX	DE,HL
	RET	
;
;	-----------------
C5782:	CALL	C575A
;
	LD	A,(MCLLEN)
	LD	HL,(MCLPTR)
	EX	(SP),HL
	PUSH	AF
	LD	C,02H	; 2 
	CALL	C625E
;
	JP	J5679
;
;	-----------------
I5795:	XOR	A
	SUB	E
	LD	E,A
	SBC	A,D
	SUB	E
	LD	D,A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C579C:	LD	A,(HL)
	CP	40H	; "@"
	CALL	Z,C4666
;
	LD	BC,0
	LD	D,B
	LD	E,C
	CP	0F2H
	JR	Z,J57C1
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C57AB:	LD	A,(HL)
	CP	0DCH
	PUSH	AF
	CALL	Z,C4666
;
	RST	SYNCHR
	DEFB	"("			; check for (
	CALL	C520F
	PUSH	DE
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	C520F
	RST	SYNCHR
	DEFB	")"			; check for )
	POP	BC
	POP	AF
J57C1:	PUSH	HL
	LD	HL,(GRPACX)
	JR	Z,J57CA
;
	LD	HL,0
J57CA:	ADD	HL,BC
	LD	(GRPACX),HL
	LD	(GXPOS),HL
	LD	B,H
	LD	C,L
	LD	HL,(GRPACY)
	JR	Z,J57DB
;
	LD	HL,0
J57DB:	ADD	HL,DE
	LD	(GRPACY),HL
	LD	(GYPOS),HL
	EX	DE,HL
	POP	HL
	RET

;	  Subroutine PRESET statement
;	     Inputs  ________________________
;	     Outputs ________________________

C57E5:	LD	A,(BAKCLR)
	JR	J57ED

;	  Subroutine PSET statement
;	     Inputs  ________________________
;	     Outputs ________________________

C57EA:	LD	A,(FORCLR)
J57ED:	
;
; MSx 1 had
;
;	push	af
;	call	A57AB

	JP	J79D6
	DEFS	057F1H-$,0
;
;	-----------------
J57F1:	POP	AF
	CALL	C5850
;
	PUSH	HL
	CALL	SCALXY
;
	JR	NC,J5801
;
	CALL	MAPXYC
;
	CALL	SETC
;
J5801:	POP	HL
	RET	
;
; End of change


;	  Subroutine POINT function
;	     Inputs  ________________________
;	     Outputs ________________________

J5803:	RST	CHRGTR
	PUSH	HL
	CALL	FETCHC
	POP	DE
	PUSH	HL
	PUSH	AF
	LD	HL,(GYPOS)
	PUSH	HL
	LD	HL,(GXPOS)
	PUSH	HL
	LD	HL,(GRPACY)
	PUSH	HL
	LD	HL,(GRPACX)
	PUSH	HL
	EX	DE,HL
	CALL	C57AB
;
	PUSH	HL
	CALL	SCALXY
;
	LD	HL,0FFFFH
	JR	NC,J5831
;
	CALL	MAPXYC
;
	CALL	READC
;
	LD	L,A
	LD	H,00H
J5831:	CALL	C2F99			; put HL in DAC
;
	POP	DE
	POP	HL
	LD	(GRPACX),HL
	POP	HL
	LD	(GRPACY),HL
	POP	HL
	LD	(GXPOS),HL
	POP	HL
	LD	(GYPOS),HL
	POP	AF
	POP	HL
	PUSH	DE
	CALL	STOREC
;
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C584D:	LD	A,(FORCLR)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5850:	PUSH	BC
	PUSH	DE
	LD	E,A
	CALL	C59BC
;
	DEC	HL
	RST	CHRGTR
;
	JR	Z,J5863
;
	RST	SYNCHR
	DEFB	","			; check for ,
	CP	2CH	; ","
	JR	Z,J5863
;
	CALL	GETBYT
;
J5863:	LD	A,E
	PUSH	HL
	CALL	SETATR
;
	JP	C,C475A
;
	POP	HL
	POP	DE
	POP	BC
	JP	C466A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5871:	LD	HL,(GXPOS)
	LD	A,L
	SUB	C
	LD	L,A
	LD	A,H
	SBC	A,B
	LD	H,A
J587A:	RET	NC
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C587B:	XOR	A
	SUB	L
	LD	L,A
	SBC	A,H
	SUB	L
	LD	H,A
	SCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5883:	LD	HL,(GYPOS)
	LD	A,L
	SUB	E
	LD	L,A
	LD	A,H
	SBC	A,D
	LD	H,A
	JR	J587A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C588E:	PUSH	HL
	LD	HL,(GYPOS)
	EX	DE,HL
	LD	(GYPOS),HL
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5898:	CALL	C588E
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C589B:	PUSH	HL
	PUSH	BC
	LD	HL,(GXPOS)
	EX	(SP),HL
	LD	(GXPOS),HL
	POP	BC
	POP	HL
	RET	
;
;	-----------------
;	LINE statement
;	-----------------

J58A7:
;
; MSX 1 had
;
;	call	A579C

	JP	J79E9
;
; End of change
;
;	-----------------
J58AA:	PUSH	BC
	PUSH	DE
	RST	SYNCHR
	DEFB	0F2H			; check for -
	CALL	C57AB
	CALL	C584D
;
	POP	DE
	POP	BC
	JR	Z,C58FC
;
	RST	SYNCHR
	DEFB	","
	RST	SYNCHR
	DEFB	"B"			; check for ,B
	JP	Z,J5912			; box option

; line box fill option (,BF)

	RST	SYNCHR
	DEFB	"F"			; check for F
	PUSH	HL
	CALL	SCALXY
	CALL	C5898
	CALL	SCALXY
	CALL	C5883
	CALL	C,C588E
	INC	HL
	PUSH	HL
	CALL	C5871
	CALL	C,C589B
	INC	HL
	PUSH	HL
	CALL	MAPXYC
	POP	DE
	POP	BC
J58E0:	PUSH	DE
	PUSH	BC
J58E2:	CALL	FETCHC
	PUSH	AF
	PUSH	HL
	EX	DE,HL
	CALL	NSETCX
	POP	HL
	POP	AF
	CALL	STOREC
	CALL	DOWNC
	POP	BC
	POP	DE
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J58E0
	POP	HL
	RET	

;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C58FC:	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	C593C
;
	LD	HL,(GRPACX)
	LD	(GXPOS),HL
	LD	HL,(GRPACY)
	LD	(GYPOS),HL
	POP	HL
	POP	DE
	POP	BC
	RET	
;
;	-----------------
J5912:	PUSH	HL
	LD	HL,(GYPOS)
	PUSH	HL
	PUSH	DE
	EX	DE,HL
	CALL	C58FC
;
	POP	HL
	LD	(GYPOS),HL
	EX	DE,HL
	CALL	C58FC
;
	POP	HL
	LD	(GYPOS),HL
	LD	HL,(GXPOS)
	PUSH	BC
	LD	B,H
	LD	C,L
	CALL	C58FC
;
	POP	HL
	LD	(GXPOS),HL
	LD	B,H
	LD	C,L
	CALL	C58FC
;
	POP	HL
	RET	
;
;	-----------------
;	subroutine draw line
;	-----------------

C593C:	CALL	H.DOGR
;
; MSX 1 had
;
;	CALL	SCALXY
;
	JP	J7A0D
;
; End of change
;
;	-----------------
J5942:	CALL	C5898
;
	CALL	SCALXY
;
	CALL	C5883
;
	CALL	C,C5898
;
	PUSH	DE
	PUSH	HL
	CALL	C5871
;
	EX	DE,HL
	LD	HL,00FCH
	JR	NC,J595C
;
	LD	HL,00FFH
J595C:	EX	(SP),HL
	RST	DCOMPR
;
	JR	NC,J5970
;
	LD	(MINDEL),HL
	POP	HL
	LD	(MAXUPD+1),HL
	LD	HL,0108H
	LD	(MINUPD+1),HL
	EX	DE,HL
	JR	J597F
;
;	-----------------
J5970:	EX	(SP),HL
	LD	(MINUPD+1),HL
	LD	HL,0108H
	LD	(MAXUPD+1),HL
	EX	DE,HL
	LD	(MINDEL),HL
	POP	HL
J597F:	POP	DE
	PUSH	HL
	CALL	C587B
;
	LD	(MAXDEL),HL
	CALL	MAPXYC
;
	POP	DE
	PUSH	DE
	CALL	C59B4
;
	POP	BC
	INC	BC
	JR	J599A
;
;	-----------------
J5993:	POP	HL
	LD	A,B
	OR	C
	RET	Z
;
J5997:	CALL	MAXUPD
;
J599A:	CALL	SETC
;
	DEC	BC
	PUSH	HL
	LD	HL,(MINDEL)
	ADD	HL,DE
	EX	DE,HL
	LD	HL,(MAXDEL)
	ADD	HL,DE
	JR	NC,J5993
;
	EX	DE,HL
	POP	HL
	LD	A,B
	OR	C
	RET	Z
;
	CALL	MINUPD
;
	JR	J5997
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C59B4:	LD	A,D
	OR	A
	RRA	
	LD	D,A
	LD	A,E
	RRA	
	LD	E,A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C59BC:	LD	A,(SCRMOD)
	CP	02H	; 2 
	RET	P
;
	JP	C475A
;

;	  Subroutine PAINT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C59C5:
;
; MSX 1 had
;
;	CALL	C579C
;
	JP	J79FB			; patch code for extending paint msx2
;
; End of change
;
;	-----------------
J59C8:	PUSH	BC
	PUSH	DE
	CALL	C584D
;
	LD	A,(ATRBYT)
	LD	E,A
	DEC	HL
	RST	CHRGTR
;
	JR	Z,J59DA
;
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	GETBYT
;
J59DA:	LD	A,E
	CALL	PNTINI
;
	JP	C,C475A
;
	POP	DE
	POP	BC
	PUSH	HL
	CALL	C5E91
;
	CALL	MAPXYC
;
	LD	DE,1
	LD	B,00H
	CALL	C5ADC
;
	JR	Z,J5A08
;
	PUSH	HL
	CALL	C5AED
;
	POP	DE
	ADD	HL,DE
	EX	DE,HL
	XOR	A
	CALL	C5ACE
;
	LD	A,40H	; "@"
	CALL	C5ACE
;
	LD	B,0C0H
	JR	J5A26
;
;	-----------------
J5A08:	POP	HL
	RET	
;
;	-----------------
J5A0A:	CALL	CKCNTC
;
	LD	A,(LOHDIR)
	OR	A
	JR	Z,J5A1F
;
	LD	HL,(LOHADR)
	PUSH	HL
	LD	HL,(LOHMSK)
	PUSH	HL
	LD	HL,(LOHCNT)
	PUSH	HL
J5A1F:	POP	DE
	POP	BC
	POP	HL
	LD	A,C
	CALL	STOREC
;
J5A26:	LD	A,B
	LD	(PDIREC),A
	ADD	A,A
	JR	Z,J5A08
;
	PUSH	DE
	JR	NC,J5A35
;
	CALL	TUPC
;
	JR	J5A38
;
;	-----------------
J5A35:	CALL	TDOWNC
;
J5A38:	POP	DE
	JR	C,J5A1F
;
	LD	B,00H
	CALL	C5ADC
;
	JP	Z,J5A1F
;
	XOR	A
	LD	(LOHDIR),A
	CALL	C5AED
;
	LD	E,L
	LD	D,H
	OR	A
	JR	Z,J5A69
;
	DEC	HL
	DEC	HL
	LD	A,H
	ADD	A,A
	JR	C,J5A69
;
	LD	(LOHCNT),DE
	CALL	FETCHC
;
	LD	(LOHADR),HL
	LD	(LOHMSK),A
	LD	A,(PDIREC)
	CPL	
	LD	(LOHDIR),A
J5A69:	LD	HL,(MOVCNT)
	ADD	HL,DE
	EX	DE,HL
	CALL	C5AC2
;
J5A71:	LD	HL,(CSAVEA)
	LD	A,(CSAVEM)
	CALL	STOREC
;
J5A7A:	LD	HL,(SKPCNT)
	LD	DE,(MOVCNT)
	OR	A
	SBC	HL,DE
	JR	Z,J5ABF
;
	JR	C,J5AA4
;
	EX	DE,HL
	LD	B,01H	; 1 
	CALL	C5ADC
;
	JR	Z,J5ABF
;
	OR	A
	JR	Z,J5A7A
;
	EX	DE,HL
	LD	HL,(CSAVEA)
	LD	A,(CSAVEM)
	LD	C,A
	LD	A,(PDIREC)
	LD	B,A
	CALL	C5AD3
;
	JR	J5A7A
;
;	-----------------
J5AA4:	CALL	C587B
;
	DEC	HL
	DEC	HL
	LD	A,H
	ADD	A,A
	JR	C,J5ABF
;
	INC	HL
	PUSH	HL
J5AAF:	CALL	LEFTC
;
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,J5AAF
;
	POP	DE
	LD	A,(PDIREC)
	CPL	
	CALL	C5ACE
;
J5ABF:	JP	J5A0A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5AC2:	LD	A,(LFPROG)
	LD	C,A
	LD	A,(RTPROG)
	OR	C
	RET	Z
;
	LD	A,(PDIREC)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5ACE:	LD	B,A
	CALL	FETCHC
;
	LD	C,A
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5AD3:	EX	(SP),HL
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,02H	; 2 
	JP	C625E
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5ADC:	CALL	SCANR
;
	LD	(SKPCNT),DE
	LD	(MOVCNT),HL
	LD	A,H
	OR	L
	LD	A,C
	LD	(RTPROG),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5AED:	CALL	FETCHC
;
	PUSH	HL
	PUSH	AF
	LD	HL,(CSAVEA)
	LD	A,(CSAVEM)
	CALL	STOREC
;
	POP	AF
	POP	HL
	LD	(CSAVEA),HL
	LD	(CSAVEM),A
	CALL	SCANL
;
	LD	A,C
	LD	(LFPROG),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5B0B:	EX	DE,HL
	CALL	C587B
;
	EX	DE,HL
	RET	

;	  Subroutine CIRCLE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C5B11:	CALL	C579C
;
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	C520F
;
	PUSH	HL
	EX	DE,HL
	LD	(GXPOS),HL
	CALL	C2F99			; put HL in DAC
;
	CALL	C2FB2			; convert DAC to single real
;
	LD	BC,7040H
	LD	DE,0771H
	CALL	C325C
;
	CALL	C2F8A			; convert DAC to integer
;
	LD	(CNPNTS),HL
	XOR	A
	LD	(CLINEF),A
	LD	(CSCLXY),A
	POP	HL
	CALL	C584D
;
	LD	C,01H	; 1 
	LD	DE,0
	CALL	C5D17
;
	PUSH	DE
	LD	C,80H
	LD	DE,0FFFFH
	CALL	C5D17
;
	EX	(SP),HL
	XOR	A
	EX	DE,HL
	RST	DCOMPR
;
	LD	A,00H
	JR	NC,J5B66
;
	DEC	A
	EX	DE,HL
	PUSH	AF
	LD	A,(CLINEF)
	LD	C,A
	RLCA	
	RLCA	
	OR	C
	RRCA	
	LD	(CLINEF),A
	POP	AF
J5B66:	LD	(CPLOTF),A
	LD	(CSTCNT),DE
	LD	(CENCNT),HL
	POP	HL
	DEC	HL
	RST	CHRGTR
;
	JR	NZ,J5B85
;
	PUSH	HL
	CALL	GTASPC
;
	LD	A,H
	OR	A
	JR	Z,J5BAF
;
	LD	A,01H	; 1 
	LD	(CSCLXY),A
	EX	DE,HL
	JR	J5BAF
;
;	-----------------
J5B85:	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	FRMEVL			; evaluate expression
;
	PUSH	HL
	CALL	C2FB2			; convert DAC to single real
;
	CALL	C2E71			; get sign DAC
;
	JP	Z,C475A
;
	JP	M,C475A
;
	CALL	C5D63
;
	JR	NZ,J5BA3
;
	INC	A
	LD	(CSCLXY),A
	CALL	C3267
;
J5BA3:	LD	BC,02543H
	LD	DE,00060H
	CALL	C325C
;
	CALL	C2F8A			; convert DAC to integer
;
J5BAF:	LD	(ASPECT),HL
	LD	DE,0
	LD	(CRCSUM),DE
	LD	HL,(GXPOS)
	ADD	HL,HL
J5BBD:	CALL	CKCNTC
;
	LD	A,E
	RRA	
	JR	C,J5BDA
;
	PUSH	DE
	PUSH	HL
	INC	HL
	EX	DE,HL
	CALL	C59B4
;
	EX	DE,HL
	INC	DE
	CALL	C59B4
;
	CALL	C5C06
;
	POP	DE
	POP	HL
	RST	DCOMPR
;
	JP	NC,J5A08
;
	EX	DE,HL
J5BDA:	LD	B,H
	LD	C,L
	LD	HL,(CRCSUM)
	INC	HL
	ADD	HL,DE
	ADD	HL,DE
	LD	A,H
	ADD	A,A
	JR	C,J5BF2
;
	PUSH	DE
	EX	DE,HL
	LD	H,B
	LD	L,C
	ADD	HL,HL
	DEC	HL
	EX	DE,HL
	OR	A
	SBC	HL,DE
	DEC	BC
	POP	DE
J5BF2:	LD	(CRCSUM),HL
	LD	H,B
	LD	L,C
	INC	DE
	JR	J5BBD
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5BFA:	PUSH	DE
	CALL	C5CEB
;
	POP	HL
	LD	A,(CSCLXY)
	OR	A
	RET	Z
;
	EX	DE,HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5C06:	LD	(CPCNT),DE
	PUSH	HL
	LD	HL,0
	LD	(CPCNT8),HL
	CALL	C5BFA
;
	LD	(CXOFF),HL
	POP	HL
	EX	DE,HL
	PUSH	HL
	CALL	C5BFA
;
	LD	(CYOFF),DE
	POP	DE
	CALL	C5B0B
;
	CALL	C5C48
;
	PUSH	HL
	PUSH	DE
	LD	HL,(CNPNTS)
	LD	(CPCNT8),HL
	LD	DE,(CPCNT)
	OR	A
	SBC	HL,DE
	LD	(CPCNT),HL
	LD	HL,(CXOFF)
	CALL	C587B
;
	LD	(CXOFF),HL
	POP	DE
	POP	HL
	CALL	C5B0B
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5C48:	LD	A,04H	; 4 
J5C4A:	PUSH	AF
	PUSH	HL
	PUSH	DE
	PUSH	HL
	PUSH	DE
	LD	DE,(CPCNT8)
	LD	HL,(CNPNTS)
	ADD	HL,HL
	ADD	HL,DE
	LD	(CPCNT8),HL
	LD	HL,(CPCNT)
	ADD	HL,DE
	EX	DE,HL
	LD	HL,(CSTCNT)
	RST	DCOMPR
;
	JR	Z,J5C80
;
	JR	NC,J5C70
;
	LD	HL,(CENCNT)
	RST	DCOMPR
;
	JR	Z,J5C78
;
	JR	NC,J5C90
;
J5C70:	LD	A,(CPLOTF)
	OR	A
	JR	NZ,J5C9A
;
	JR	J5C96
;
;	-----------------
J5C78:	LD	A,(CLINEF)
	ADD	A,A
	JR	NC,J5C9A
;
	JR	J5C86
;
;	-----------------
J5C80:	LD	A,(CLINEF)
	RRA	
	JR	NC,J5C9A
;
J5C86:	POP	DE
	POP	HL
	CALL	C5CDC
;
	CALL	C5CCD
;
	JR	J5CAA
;
;	-----------------
J5C90:	LD	A,(CPLOTF)
	OR	A
	JR	Z,J5C9A
;
J5C96:	POP	DE
	POP	HL
	JR	J5CAA
;
;	-----------------
J5C9A:	POP	DE
	POP	HL
	CALL	C5CDC
;
	CALL	SCALXY
;
	JR	NC,J5CAA
;
	CALL	MAPXYC
;
	CALL	SETC
;
J5CAA:	POP	DE
	POP	HL
	POP	AF
	DEC	A
	RET	Z
;
	PUSH	AF
	PUSH	DE
	LD	DE,(CXOFF)
	CALL	C5B0B
;
	LD	(CXOFF),HL
	EX	DE,HL
	POP	DE
	PUSH	HL
	LD	HL,(CYOFF)
	EX	DE,HL
	LD	(CYOFF),HL
	CALL	C5B0B
;
	POP	HL
	POP	AF
	JP	J5C4A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5CCD:	LD	HL,(GRPACX)
	LD	(GXPOS),HL
	LD	HL,(GRPACY)
	LD	(GYPOS),HL
	JP	C593C
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5CDC:	PUSH	DE
	LD	DE,(GRPACX)
	ADD	HL,DE
	LD	B,H
	LD	C,L
	POP	DE
	LD	HL,(GRPACY)
	ADD	HL,DE
	EX	DE,HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5CEB:	LD	HL,(ASPECT)
	LD	A,L
	OR	A
	JR	NZ,J5CF6
;
	OR	H
	RET	NZ
;
	EX	DE,HL
	RET	
;
;	-----------------
J5CF6:	LD	C,D
	LD	D,00H
	PUSH	AF
	CALL	C5D0A
;
	LD	E,80H
	ADD	HL,DE
	LD	E,C
	LD	C,H
	POP	AF
	CALL	C5D0A
;
	LD	E,C
	ADD	HL,DE
	EX	DE,HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5D0A:	LD	B,08H	; 8 
	LD	HL,0
J5D0F:	ADD	HL,HL
	ADD	A,A
	JR	NC,J5D14
;
	ADD	HL,DE
J5D14:	DJNZ	J5D0F
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5D17:	DEC	HL
	RST	CHRGTR
;
	RET	Z
;
	RST	SYNCHR
	DEFB	","			; check for ,
	CP	2CH	; ","
	RET	Z
;
	PUSH	BC
	CALL	FRMEVL			; evaluate expression
;
	EX	(SP),HL
	PUSH	HL
	CALL	C2FB2			; convert DAC to single real
;
	POP	BC
	LD	HL,DAC
	LD	A,(HL)
	OR	A
	JP	P,J5D3A
;
	AND	7FH
	LD	(HL),A
	LD	HL,CLINEF
	LD	A,(HL)
	OR	C
	LD	(HL),A
J5D3A:	LD	BC,1540H
	LD	DE,5591H
	CALL	C325C
;
	CALL	C5D63
;
	JP	Z,C475A
;
	CALL	C2EB1			; push DAC (single)
;
	LD	HL,(CNPNTS)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	CALL	C2F99			; put HL in DAC
;
	CALL	C2FB2			; convert DAC to single real
;
	POP	BC
	POP	DE
	CALL	C325C
;
	CALL	C2F8A			; convert DAC to integer
;
	POP	DE
	EX	DE,HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5D63:	LD	BC,1041H
	LD	DE,0000H
	CALL	C2F21			; compare single real
	DEC	A
	RET	

;	  Subroutine DRAW statement
;	     Inputs  ________________________
;	     Outputs ________________________

C5D6E:	LD	A,(SCRMOD)
	CP	02H	; 2 
	JP	C,C475A
;
	LD	DE,I5D83
	XOR	A
	LD	(DRWFLG),A
	LD	(MCLFLG),A
	JP	J566C
;
;	-----------------
I5D83:	DEFB	"U"+128
	DEFW	C5DB1
	DEFB	"D"+128
	DEFW	C5DB4
	DEFB	"L"+128
	DEFW	C5DB9
	DEFB	"R"+128
	DEFW	C5DBC
	DEFB	"M"
	DEFW	C5DD8
	DEFB	"E"+128
	DEFW	C5DCA
	DEFB	"F"+128
	DEFW	C5DC6
	DEFB	"G"+128
	DEFW	C5DD1
	DEFB	"H"+128
	DEFW	C5DC3
	DEFB	"A"+128
	DEFW	C5E4E
	DEFB	"B"
	DEFW	C5E46
	DEFB	"N"
	DEFW	C5E42
	DEFB	"X"
	DEFW	C5782
	DEFB	"C"+128
	DEFW	C5E87
	DEFB	"S"+128
	DEFW	C5E59
	DEFB	0
	
C5DB1:	CALL	C5B0B
C5DB4:	LD	BC,0
	JR	J5DFF
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5DB9:	CALL	C5B0B
;
C5DBC:	LD	B,D
	LD	C,E
	LD	DE,0
	JR	J5DFF
;
;	-----------------
C5DC3:	CALL	C5B0B
;
C5DC6:	LD	B,D
	LD	C,E
	JR	J5DFF
;
;	-----------------
C5DCA:	LD	B,D
	LD	C,E
J5DCC:	CALL	C5B0B
;
	JR	J5DFF
;
;	-----------------
C5DD1:	CALL	C5B0B
;
	LD	B,D
	LD	C,E
	JR	J5DCC
;
;	-----------------
C5DD8:	CALL	C56E8
;
	LD	B,00H
	CP	2BH	; "+"
	JR	Z,J5DE6
;
	CP	2DH	; "-"
	JR	Z,J5DE6
;
	INC	B
J5DE6:	LD	A,B
	PUSH	AF
	CALL	C570B
;
	CALL	C5719
;
	PUSH	DE
	CALL	C56E8
;
	CP	2CH	; ","
	JP	NZ,C475A
;
	CALL	C5719
;
	POP	BC
	POP	AF
	OR	A
	JR	NZ,J5E22
;
J5DFF:	CALL	C5E66
;
	PUSH	DE
	LD	D,B
	LD	E,C
	CALL	C5E66
;
	EX	DE,HL
	POP	DE
	LD	A,(DRWANG)
	RRA	
	JR	NC,J5E16
;
	PUSH	AF
	CALL	C587B
;
	EX	DE,HL
	POP	AF
J5E16:	RRA	
	JR	NC,J5E1F
;
	CALL	C587B
;
	CALL	C5B0B
;
J5E1F:	CALL	C5CDC
;
J5E22:	LD	A,(DRWFLG)
	ADD	A,A
	JR	C,J5E31
;
	PUSH	AF
	PUSH	BC
	PUSH	DE
	CALL	C5CCD
;
	POP	DE
	POP	BC
	POP	AF
J5E31:	ADD	A,A
	JR	C,J5E3D
;
	LD	(GRPACY),DE
	LD	H,B
	LD	L,C
	LD	(GRPACX),HL
J5E3D:	XOR	A
	LD	(DRWFLG),A
	RET	
;
;	-----------------
C5E42:	LD	A,40H	; "@"
	JR	J5E48
;
;	-----------------
C5E46:	LD	A,80H
J5E48:	LD	HL,DRWFLG
	OR	(HL)
	LD	(HL),A
	RET	
;
;	-----------------
C5E4E:	JR	NC,C5E59
;
	LD	A,E
	CP	04H	; 4 
	JR	NC,C5E59
;
	LD	(DRWANG),A
	RET	
;
;	-----------------
C5E59:	JP	NC,C475A
;
	LD	A,D
	OR	A
	JP	NZ,C475A
;
	LD	A,E
	LD	(DRWSCL),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5E66:	LD	A,(DRWSCL)
	OR	A
	RET	Z
;
	LD	HL,0
J5E6E:	ADD	HL,DE
	DEC	A
	JR	NZ,J5E6E
;
	EX	DE,HL
	LD	A,D
	ADD	A,A
	PUSH	AF
	JR	NC,J5E79
;
	DEC	DE
J5E79:	CALL	C59B4
;
	CALL	C59B4
;
	POP	AF
	RET	NC
;
	LD	A,D
	OR	0C0H
	LD	D,A
	INC	DE
	RET	
;
;	-----------------
C5E87:	JR	NC,C5E59
;
	LD	A,E
	CALL	SETATR
;
	JP	C,C475A
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5E91:	PUSH	HL
	CALL	SCALXY
;
	JP	NC,C475A
;
	POP	HL
	RET	
;
;	-----------------
I5E9A:	DEC	HL
	RST	CHRGTR
	RET	Z
	RST	SYNCHR
	DEFB	","			; check for ,

;	  Subroutine DIM statement
;	     Inputs  ________________________
;	     Outputs ________________________

C5E9F:	LD	BC,I5E9A
	PUSH	BC
	DEFB	0F6H				; OR xx, skip next instruction
PTRGET:	XOR	A
	LD	(DIMFLG),A
	LD	C,(HL)
J5EA9:	CALL	H.PTRG
;
	CALL	C64A7
;
	JP	C,J4055
;
	XOR	A
	LD	B,A
	RST	CHRGTR
;
	JR	C,J5EBC
;
	CALL	C64A8
;
	JR	C,J5EC5
;
J5EBC:	LD	B,A
J5EBD:	RST	CHRGTR
;
	JR	C,J5EBD
;
	CALL	C64A8
;
	JR	NC,J5EBD
;
J5EC5:	CP	26H	; "&"
	JR	NC,J5EE0
;
	LD	DE,I5EEE
	PUSH	DE
	LD	D,02H	; 2 
	CP	25H	; "%"
	RET	Z
;
	INC	D
	CP	24H	; "$"
	RET	Z
;
	INC	D
	CP	21H	; "!"
	RET	Z
;
	LD	D,08H	; 8 
	CP	23H	; "#"
	RET	Z
;
	POP	AF
J5EE0:	LD	A,C
	AND	7FH
	LD	E,A
	LD	D,00H
	PUSH	HL
	LD	HL,DEFTBL-041H
	ADD	HL,DE
	LD	D,(HL)
	POP	HL
	DEC	HL
I5EEE:	LD	A,D
	LD	(VALTYP),A
	RST	CHRGTR
;
	LD	A,(SUBFLG)
	DEC	A
	JP	Z,J5FE8
;
	JP	P,J5F08
;
	LD	A,(HL)
	SUB	28H	; "("
	JP	Z,J5FBA
;
	SUB	33H	; "3"
	JP	Z,J5FBA
;
J5F08:	XOR	A
	LD	(SUBFLG),A
	PUSH	HL
	LD	A,(NOFUNS)
	OR	A
	LD	(PRMFLG),A
	JR	Z,J5F52
;
	LD	HL,(PRMLEN)
	LD	DE,PARM1
	ADD	HL,DE
	LD	(ARYTA2),HL
	EX	DE,HL
	JR	J5F3A
;
;	-----------------
J5F23:	LD	A,(DE)
	LD	L,A
	INC	DE
	LD	A,(DE)
	INC	DE
	CP	C
	JR	NZ,J5F36
;
	LD	A,(VALTYP)
	CP	L
	JR	NZ,J5F36
;
	LD	A,(DE)
	CP	B
	JP	Z,J5FA4
;
J5F36:	INC	DE
	LD	H,00H
	ADD	HL,DE
J5F3A:	EX	DE,HL
	LD	A,(ARYTA2)
	CP	E
	JP	NZ,J5F23
;
	LD	A,(ARYTA2+1)
	CP	D
	JR	NZ,J5F23
;
	LD	A,(PRMFLG)
	OR	A
	JR	Z,J5F66
;
	XOR	A
	LD	(PRMFLG),A
J5F52:	LD	HL,(ARYTAB)
	LD	(ARYTA2),HL
	LD	HL,(VARTAB)
	JR	J5F3A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C5F5D:	CALL	PTRGET
;
I5F60:	RET	
;
;	-----------------
J5F61:	LD	D,A
	LD	E,A
	POP	BC
	EX	(SP),HL
	RET	
;
;	-----------------
J5F66:	POP	HL
	EX	(SP),HL
	PUSH	DE
	LD	DE,I5F60
	RST	DCOMPR
;
	JR	Z,J5F61
;
	LD	DE,I4E9E
	RST	DCOMPR
;
	POP	DE
	JR	Z,J5FA7
;
	EX	(SP),HL
	PUSH	HL
	PUSH	BC
	LD	A,(VALTYP)
	LD	C,A
	PUSH	BC
	LD	B,00H
	INC	BC
	INC	BC
	INC	BC
	LD	HL,(STREND)
	PUSH	HL
	ADD	HL,BC
	POP	BC
	PUSH	HL
	CALL	C6250
;
	POP	HL
	LD	(STREND),HL
	LD	H,B
	LD	L,C
	LD	(ARYTAB),HL
J5F96:	DEC	HL
	LD	(HL),00H
	RST	DCOMPR
;
	JR	NZ,J5F96
;
	POP	DE
	LD	(HL),E
	INC	HL
	POP	DE
	LD	(HL),E
	INC	HL
	LD	(HL),D
	EX	DE,HL
J5FA4:	INC	DE
	POP	HL
	RET	
;
;	-----------------
J5FA7:	LD	(DAC),A
	LD	H,A
	LD	L,A
	LD	(DAC+2),HL
	RST	GETYPR
;
	JR	NZ,J5FB8
;
	LD	HL,I3FD6
	LD	(DAC+2),HL
J5FB8:	POP	HL
	RET	
;
;	-----------------
J5FBA:	PUSH	HL
	LD	HL,(DIMFLG)
	EX	(SP),HL
	LD	D,A
J5FC0:	PUSH	DE
	PUSH	BC
	CALL	C4755
;
	POP	BC
	POP	AF
	EX	DE,HL
	EX	(SP),HL
	PUSH	HL
	EX	DE,HL
	INC	A
	LD	D,A
	LD	A,(HL)
	CP	2CH	; ","
	JP	Z,J5FC0
;
	CP	29H	; ")"
	JR	Z,J5FDC
;
	CP	5DH	; "]"
	JP	NZ,J4055
;
J5FDC:	RST	CHRGTR
;
	LD	(TEMP2),HL
	POP	HL
	LD	(DIMFLG),HL
	LD	E,00H
	PUSH	DE
	DEFB	011H			; LD DE,xxxx, skip next 2 statements
J5FE8:	PUSH	HL
	PUSH	AF
	LD	HL,(ARYTAB)
	DEFB	03EH			; LD A,xx, skip next instruction
J5FEE:	ADD	HL,DE
	LD	DE,(STREND)
	RST	DCOMPR
;
	JR	Z,J6023
;
	LD	E,(HL)
	INC	HL
	LD	A,(HL)
	INC	HL
	CP	C
	JR	NZ,J6005
;
	LD	A,(VALTYP)
	CP	E
	JR	NZ,J6005
;
	LD	A,(HL)
	CP	B
J6005:	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	JR	NZ,J5FEE
;
	LD	A,(DIMFLG)
	OR	A
	JP	NZ,J405E
;
	POP	AF
	LD	B,H
	LD	C,L
	JP	Z,J3297
;
	SUB	(HL)
	JP	Z,J607D
;
J601D:	LD	DE,9
	JP	J406F
;
;	-----------------
J6023:	LD	A,(VALTYP)
	LD	(HL),A
	INC	HL
	LD	E,A
	LD	D,00H
	POP	AF
	JP	Z,C475A
;
	LD	(HL),C
	INC	HL
	LD	(HL),B
	INC	HL
	LD	C,A
	CALL	C625E
;
	INC	HL
	INC	HL
	LD	(TEMP3),HL
	LD	(HL),C
	INC	HL
	LD	A,(DIMFLG)
	RLA	
	LD	A,C
J6043:	LD	BC,11
	JR	NC,J604A
;
	POP	BC
	INC	BC
J604A:	LD	(HL),C
	PUSH	AF
	INC	HL
	LD	(HL),B
	INC	HL
	CALL	C314A			; unsigned integer multiply
	POP	AF
	DEC	A
	JR	NZ,J6043
;
	PUSH	AF
	LD	B,D
	LD	C,E
	EX	DE,HL
	ADD	HL,DE
	JP	C,J6275
;
	CALL	C6267
;
	LD	(STREND),HL
J6064:	DEC	HL
	LD	(HL),00H
	RST	DCOMPR
;
	JR	NZ,J6064
;
	INC	BC
	LD	D,A
	LD	HL,(TEMP3)
	LD	E,(HL)
	EX	DE,HL
	ADD	HL,HL
	ADD	HL,BC
	EX	DE,HL
	DEC	HL
	DEC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	POP	AF
	JR	C,J60AD
;
J607D:	LD	B,A
	LD	C,A
	LD	A,(HL)
	INC	HL
	DEFB	016H			; LD D,xx, skip next instruction
J6082:	POP	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	EX	(SP),HL
	PUSH	AF
	RST	DCOMPR
;
	JP	NC,J601D
;
	CALL	C314A			; unsigned integer multiply
;
	ADD	HL,DE
	POP	AF
	DEC	A
	LD	B,H
	LD	C,L
	JR	NZ,J6082
;
	LD	A,(VALTYP)
	LD	B,H
	LD	C,L
	ADD	HL,HL
	SUB	04H	; 4 
	JR	C,J60A5
;
	ADD	HL,HL
	JR	Z,J60AA
;
	ADD	HL,HL
J60A5:	OR	A
	JP	PO,J60AA
;
	ADD	HL,BC
J60AA:	POP	BC
	ADD	HL,BC
	EX	DE,HL
J60AD:	LD	HL,(TEMP2)
	RET	

;	  Subroutine PRINT USING statement
;	     Inputs  ________________________
;	     Outputs ________________________

J60B1:	CALL	C4C65			; evaluate expression
	CALL	C3058			; check if string
	RST	SYNCHR
	DEFB	";"			; check for ";"
	EX	DE,HL
	LD	HL,(DAC+2)		; formatstring descriptor
	JR	J60C7
;
;	-----------------
J60BF:	LD	A,(FLGINP)
	OR	A
	JR	Z,J60D2
;
	POP	DE
	EX	DE,HL
J60C7:	PUSH	HL
	XOR	A
	LD	(FLGINP),A		; flag
	INC	A
	PUSH	AF
	PUSH	DE
	LD	B,(HL)
	INC	B
	DEC	B			; empty format string ?
J60D2:	JP	Z,C475A			; yep, illegal function call
	INC	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A			; start of string
	JR	J60F6

; part of string handler

J60DC:	LD	E,B			; save length
	PUSH	HL			; save pointer
	LD	C,2			; at least 2 chars
J60E0:	LD	A,(HL)
	INC	HL
	CP	CHRFLN
	JP	Z,J6210			; end marker, print string
	CP	" "
	JR	NZ,J60EE		; not a space between markers, so no part string!
	INC	C
	DJNZ	J60E0			; next char, non left means no endmarker and no part string!
J60EE:	POP	HL			; restore pointer
	LD	B,E			; restore length
	LD	A,CHRFLN		; just print the CHRFLN char
J60F2:
;
; MSX 1 had
;
;	CALL	C6246
;	RST	OUTDO
;
	JP	J01BB			; patch routine in biosrom
	NOP	
;
; change because of kanji characters
;
; End of change
;
J60F6:	XOR	A
	LD	E,A
	LD	D,A
J60F9:	CALL	C6246
	LD	D,A
	LD	A,(HL)
	INC	HL
	CP	"!"
	JP	Z,J620D			; "1 char of string" format char, handle
	CP	"#"
	JR	Z,J6144			; # numeric format char, handle
	CP	CHRVLN
	JP	Z,J6209			; "whole string" format char, handle
	DEC	B			; other format chars need at least 1 extra char
	JP	Z,J61F5			; not there, end it
	CP	"+"
	LD	A,08H
	JR	Z,J60F9			; +, set sign flag and continue
	DEC	HL
	LD	A,(HL)
	INC	HL
	CP	"."
	JR	Z,J615E			; may be .# combi, check
	CP	CHRFLN
	JR	Z,J60DC			; "part of string" format char, handle
;
	CP	(HL)
	JR	NZ,J60F2		; not two equal chars, just print it
;
	CP	CHRCUR
	JR	Z,J613D			; double currency char, handle
;
	CP	"*"
	JR	NZ,J60F2

; ** format

	INC	HL
	LD	A,B
	CP	02H
	JR	C,J6136			; none or only 1 char follows,
	LD	A,(HL)
	CP	CHRCUR
J6136:	LD	A," "
	JR	NZ,J6141

; **cur format

	DEC	B
	INC	E
	DEFB	0FEH			; skip next instruction
J613D:	XOR	A
	ADD	A,10H
	INC	HL
J6141:	INC	E
	ADD	A,D
	LD	D,A
J6144:	INC	E
	LD	C,00H
	DEC	B
	JR	Z,J6192
	LD	A,(HL)
	INC	HL
	CP	"."
	JR	Z,J6169
	CP	"#"
	JR	Z,J6144
	CP	","
	JR	NZ,J6173
	LD	A,D
	OR	40H
	LD	D,A
	JR	J6144
;
;	-----------------
J615E:	LD	A,(HL)
	CP	"#"
	LD	A,"."
	JP	NZ,J60F2
;
	LD	C,01H	; 1 
	INC	HL
J6169:	INC	C
	DEC	B
	JR	Z,J6192
;
	LD	A,(HL)
	INC	HL
	CP	"#"
	JR	Z,J6169
;
J6173:	PUSH	DE
	LD	DE,I6190
	PUSH	DE
	LD	D,H
	LD	E,L
	CP	5EH	; "^"
	RET	NZ
;
	CP	(HL)
	RET	NZ
;
	INC	HL
	CP	(HL)
	RET	NZ
;
	INC	HL
	CP	(HL)
	RET	NZ
;
	INC	HL
	LD	A,B
	SUB	04H	; 4 
	RET	C
;
	POP	DE
	POP	DE
	LD	B,A
	INC	D
	INC	HL
	DEFB	0CAH			; JP Z,xxxx skip next 2 instructions
I6190:	EX	DE,HL
	POP	DE
;
J6192:	LD	A,D
	DEC	HL
	INC	E
	AND	08H	; 8 
	JR	NZ,J61AE
;
	DEC	E
	LD	A,B
	OR	A
	JR	Z,J61AE
;
	LD	A,(HL)
	SUB	2DH	; "-"
	JR	Z,J61A9
;
	CP	0FEH
	JR	NZ,J61AE
;
	LD	A,08H	; 8 
J61A9:	ADD	A,04H	; 4 
	ADD	A,D
	LD	D,A
	DEC	B
J61AE:	POP	HL
	POP	AF
	JR	Z,J61FE
;
	PUSH	BC
	PUSH	DE
	CALL	FRMEVL			; evaluate expression
;
	POP	DE
	POP	BC
	PUSH	BC
	PUSH	HL
	LD	B,E
	LD	A,B
	ADD	A,C
	CP	19H
	JP	NC,C475A
;
	LD	A,D
	OR	80H
	CALL	C3426			; convert DAC to text, formatted
;
	CALL	C6678
;
J61CC:	POP	HL
	DEC	HL
	RST	CHRGTR
;
	SCF	
	JR	Z,J61DD
;
	LD	(FLGINP),A
	CP	";"
	JR	Z,J61DC
;
	RST	SYNCHR
	DEFB	","			; check for ,
	DEFB	006H			; skip next instruction
J61DC:	RST	CHRGTR
J61DD:	POP	BC
	EX	DE,HL
	POP	HL
	PUSH	HL
	PUSH	AF
	PUSH	DE
	LD	A,(HL)
	SUB	B
	INC	HL
	LD	D,00H
	LD	E,A
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	ADD	HL,DE
	LD	A,B
	OR	A
	JP	NZ,J60F6
;
	JR	J61F9
;
;	-----------------
J61F5:	CALL	C6246
;
	RST	OUTDO
;
J61F9:	POP	HL
	POP	AF
	JP	NZ,J60BF
;
J61FE:	CALL	C,C7328			; newline to outdo
	EX	(SP),HL
	CALL	C67D6			; free string (descriptor in HL)
	POP	HL
	JP	C4AFF			; return interpreter output to screen

; handle char

J6209:	LD	C,00H
	JR	J6211

; handle ! char

J620D:	LD	C,01H	; 1 
	DEFB	03EH			; LD A,xx, skip next instruction
J6210:	POP	AF
J6211:	DEC	B
	CALL	C6246
;
	POP	HL
	POP	AF
	JR	Z,J61FE
;
	PUSH	BC
	CALL	FRMEVL			; evaluate expression
	CALL	C3058			; check if string
;
	POP	BC
	PUSH	BC
	PUSH	HL
	LD	HL,(DAC+2)
	LD	B,C
	LD	C,00H
	LD	A,B
	PUSH	AF
	OR	A
	CALL	NZ,C6868
;
	CALL	C667B
;
	LD	HL,(DAC+2)
	POP	AF
	OR	A
	JP	Z,J61CC
;
	SUB	(HL)
	LD	B,A
	LD	A,20H	; " "
	INC	B
J623F:	DEC	B
	JP	Z,J61CC
;
	RST	OUTDO
;
	JR	J623F
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6246:	PUSH	AF
	LD	A,D
	OR	A
	LD	A,"+"
	CALL	NZ,OUTDO
	POP	AF
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6250:	CALL	C6267
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6253:	PUSH	BC
	EX	(SP),HL
	POP	BC
J6256:	RST	DCOMPR
;
	LD	A,(HL)
	LD	(BC),A
	RET	Z
;
	DEC	BC
	DEC	HL
	JR	J6256
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C625E:	PUSH	HL
	LD	HL,(STREND)
	LD	B,00H
	ADD	HL,BC
	ADD	HL,BC
	DEFB	03EH			; LD A,xx, skip next instruction
C6267:	PUSH	HL
	LD	A,88H
	SUB	L
	LD	L,A
	LD	A,0FFH
	SBC	A,H
	LD	H,A
	JR	C,J6275
;
	ADD	HL,SP
	POP	HL
	RET	C
;
J6275:	CALL	C4253
;
	LD	HL,(STKTOP)
	DEC	HL
	DEC	HL
	LD	(SAVSTK),HL
	LD	DE,7
	JP	J406F

;	  Subroutine NEW statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6286:	RET	NZ

;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C6287:	LD	HL,(TXTTAB)
	CALL	C6439			; trace off
	LD	(AUTFLG),A		; autonumbering off
	LD	(PTRFLG),A		; output to screen
	LD	(HL),A
	INC	HL
	LD	(HL),A			; endpointer at basic text (no program text)
	INC	HL
	LD	(VARTAB),HL		; initialize start of basic variable area

;	  Subroutine initialize interpreter, basicpointer at start of program
;	     Inputs  ________________________
;	     Outputs ________________________

C629A:	CALL	H.RUNC
	LD	HL,(TXTTAB)
	DEC	HL

;	  Subroutine initialize interpreter
;	     Inputs  ________________________
;	     Outputs ________________________

C62A1:	CALL	H.CLEA
	LD	(TEMP),HL

;	  Subroutine initialize interpreter, basicpointer from TEMP
;	     Inputs  ________________________
;	     Outputs ________________________

C62A7:	CALL	C636E			; clear traps
	LD	B,1AH
	LD	HL,DEFTBL
	CALL	H.LOPD
J62B2:	LD	(HL),08H
	INC	HL
	DJNZ	J62B2			; default type for variables is double
	CALL	C2C24			; initialize RNDX
	XOR	A
	LD	(ONEFLG),A		; no error
	LD	L,A
	LD	H,A
	LD	(ONELIN),HL		; no "on error" handler
	LD	(OLDTXT),HL		; CONT statement not possible
	LD	HL,(MEMSIZ)
	LD	(FRETOP),HL		; empty stringspace
	CALL	C63C9			; restore statement
	LD	HL,(VARTAB)
	LD	(ARYTAB),HL		; begin of arrayvar space
	LD	(STREND),HL		; end of basicprogram workarea
	CALL	C6C1C			; close all io channels
	LD	A,(NLONLY)
	AND	01H			; flag (b0) for not closing io channel 0 set ?
	JR	NZ,C62E5		; yep, keep close io channel condition
	LD	(NLONLY),A		; no special close io channel condition

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C62E5:	POP	BC			; get return adres
	LD	HL,(STKTOP)
	DEC	HL
	DEC	HL
	LD	(SAVSTK),HL
	INC	HL
	INC	HL
J62F0:	CALL	H.STKE
	LD	SP,HL			; initialize stackpointer
	LD	HL,TEMPST
	LD	(TEMPPT),HL		; clear stringdescriptor stack
	CALL	C7304			; end printeroutput
	CALL	C4AFF			; return interpreter output to screen
	XOR	A
	LD	H,A
	LD	L,A
	LD	(PRMLEN),HL
	LD	(NOFUNS),A
	LD	(PRMLN2),HL
	LD	(FUNACT),HL
	LD	(PRMSTK),HL
	LD	(SUBFLG),A
	PUSH	HL
	PUSH	BC			; return adres back on stack
I6317:	LD	HL,(TEMP)
	RET	

J631B:	DI	
	LD	A,(HL)
	AND	04H	; 4 
	OR	01H	; 1 
	CP	(HL)
	LD	(HL),A
	JR	Z,J6329
;
	AND	04H	; 4 
	JR	NZ,J634F
;
J6329:	EI	
	RET	
;
;	-----------------
J632B:	DI	
	LD	A,(HL)
	LD	(HL),00H
	JR	J6338
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6331:	DI	
	LD	A,(HL)
	PUSH	AF
	OR	02H	; 2 
	LD	(HL),A
	POP	AF
J6338:	XOR	05H	; 5 
	JR	Z,J6362
;
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C633E:	DI	
	LD	A,(HL)
	AND	05H	; 5 
	CP	(HL)
	LD	(HL),A
	JR	NZ,J6348
;
	EI	
	RET	
;
;	-----------------
J6348:	XOR	05H	; 5 
	JR	Z,J634F
;
	EI	
	RET	
;
;	-----------------
;	Unused entry point
;	-----------------

?.634E:	DI	
J634F:	LD	A,(ONGSBF)
	INC	A
	LD	(ONGSBF),A
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6358:	DI	
	LD	A,(HL)
	AND	03H	; 3 
	CP	(HL)
	LD	(HL),A
	JR	NZ,J6362
;
J6360:	EI	
	RET	
;
;	-----------------
J6362:	LD	A,(ONGSBF)
	SUB	01H	; 1 
	JR	C,J6360
;
	LD	(ONGSBF),A
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C636E:	LD	HL,TRPTBL
	LD	B,1AH
	XOR	A
J6374:	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	DJNZ	J6374
	LD	HL,FNKFLG
	LD	B,10
J6381:	LD	(HL),A
	INC	HL
	DJNZ	J6381
	LD	(ONGSBF),A
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C6389:	LD	A,(ONEFLG)
	OR	A
	RET	NZ
;
	PUSH	HL
	LD	HL,(CURLIN)
	LD	A,H
	AND	L
	INC	A
	JR	Z,J63A6
;
	LD	HL,TRPTBL
	LD	B,1AH
J639C:	LD	A,(HL)
	CP	05H	; 5 
	JR	Z,J63A8
;
J63A1:	INC	HL
	INC	HL
	INC	HL
	DJNZ	J639C
;
J63A6:	POP	HL
	RET	
;
;	-----------------
J63A8:	PUSH	BC
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	DEC	HL
	DEC	HL
	LD	A,D
	OR	E
	POP	BC
	JR	Z,J63A1
;
	PUSH	DE
	PUSH	HL
	CALL	C6358
;
	CALL	C6331
;
	LD	C,03H	; 3 
	CALL	C625E
;
	POP	BC
	POP	DE
	POP	HL
	EX	(SP),HL
	POP	HL
	JP	J47CF
;
;	-----------------

;	  Subroutine RESTORE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C63C9:	EX	DE,HL
	LD	HL,(TXTTAB)
	JR	Z,J63DD
;
	EX	DE,HL
	CALL	C4769
;
	PUSH	HL
	CALL	C4295
;
	LD	H,B
	LD	L,C
	POP	DE
	JP	NC,J481C
;
J63DD:	DEC	HL
J63DE:	LD	(DATPTR),HL
	EX	DE,HL
	RET	

;	  Subroutine STOP statement
;	     Inputs  ________________________
;	     Outputs ________________________

C63E3:	JP	NZ,J77A5
;
C63E6:	RET	NZ
;
	INC	A
	JR	J63F4

;	  Subroutine END statement
;	     Inputs  ________________________
;	     Outputs ________________________

C63EA:	RET	NZ
;
	XOR	A
	LD	(ONEFLG),A
	PUSH	AF
	CALL	Z,C6C1C				; close all io channels
	POP	AF
J63F4:	LD	(SAVTXT),HL
	LD	HL,TEMPST
	LD	(TEMPPT),HL
	DEFB	021H				; skip next instruction
J63FE:	OR	0FFH
	POP	BC
J6401:	LD	HL,(CURLIN)
	PUSH	HL
I6405:	PUSH	AF
	LD	A,L
	AND	H
	INC	A
	JR	Z,J6414
;
	LD	(OLDLIN),HL
	LD	HL,(SAVTXT)
	LD	(OLDTXT),HL
J6414:	CALL	C7304				; end printeroutput
	CALL	C7323
	POP	AF
	LD	HL,I3FDC
	JP	NZ,J40FD
;
	JP	J411E

;	  Subroutine CONT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6424:	LD	HL,(OLDTXT)
	LD	A,H
	OR	L
	LD	DE,17
	JP	Z,J406F
;
	LD	DE,(OLDLIN)
	LD	(CURLIN),DE
	RET	

;	  Subroutine TRON
;	     Inputs  ________________________
;	     Outputs ________________________

C6438:	DEFB	03EH			; LD A,xx, skip next instruction

;	  Subroutine TROFF
;	     Inputs  ________________________
;	     Outputs ________________________

C6439:	XOR	A
	LD	(TRCFLG),A
	RET	

;	  Subroutine SWAP statement
;	     Inputs  ________________________
;	     Outputs ________________________

C643E:	CALL	PTRGET
;
	PUSH	DE
	PUSH	HL
	LD	HL,SWPTMP
	CALL	C2EF3			; HL = DE (valtyp)
	LD	HL,(ARYTAB)
	EX	(SP),HL
	RST	GETYPR
;
	PUSH	AF
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	PTRGET
;
	POP	AF
	LD	B,A
	RST	GETYPR
;
	CP	B
	JP	NZ,J406D
;
	EX	(SP),HL
	EX	DE,HL
	PUSH	HL
	LD	HL,(ARYTAB)
	RST	DCOMPR
;
	JR	NZ,J6474
;
	POP	DE
	POP	HL
	EX	(SP),HL
	PUSH	DE
	CALL	C2EF3			; HL = DE (valtyp)
	POP	HL
	LD	DE,SWPTMP
	CALL	C2EF3			; HL = DE (valtyp)
	POP	HL
	RET	
;
;	-----------------
J6474:	JP	C475A

;	  Subroutine ERASE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6477:	LD	A,01H	; 1 
	LD	(SUBFLG),A
	CALL	PTRGET
;
	PUSH	HL
	LD	(SUBFLG),A
	LD	H,B
	LD	L,C
	DEC	BC
	DEC	BC
	DEC	BC
	DEC	BC
	DEC	BC
	ADD	HL,DE
	EX	DE,HL
	LD	HL,(STREND)
J648F:	RST	DCOMPR
;
	LD	A,(DE)
	LD	(BC),A
	INC	DE
	INC	BC
	JR	NZ,J648F
;
	DEC	BC
	LD	H,B
	LD	L,C
	LD	(STREND),HL
	POP	HL
	LD	A,(HL)
	CP	2CH	; ","
	RET	NZ
;
	RST	CHRGTR
;
	JR	C6477
;
;	-----------------
;	Unused Code ?
;	-----------------


?.64A4:	POP	AF
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C64A7:	LD	A,(HL)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C64A8:	CP	41H	; "A"
	RET	C
;
	CP	5BH	; "["
	CCF	
	RET	

;	  Subroutine CLEAR statement
;	     Inputs  ________________________
;	     Outputs ________________________

C64AF:	JP	Z,C62A1			; initialize interpreter and quit
	CALL	C4756
	DEC	HL
	RST	CHRGTR
	PUSH	HL
	LD	HL,(HIMEM)
	LD	B,H
	LD	C,L
	LD	HL,(MEMSIZ)
	JR	Z,J64EC
;
	POP	HL
	RST	SYNCHR
	DEFB	","			; check for ,
	PUSH	DE
	CALL	FRMQNT
;
	DEC	HL
	RST	CHRGTR
;
	JP	NZ,J4055
;
	EX	(SP),HL
	EX	DE,HL
	LD	A,H
	AND	A
	JP	P,C475A
;
	PUSH	DE
	LD	DE,VARWRK+1
	RST	DCOMPR
;
	JP	NC,C475A
;
	POP	DE
	PUSH	HL
	LD	BC,0FEF5H
	LD	A,(MAXFIL)
J64E5:	ADD	HL,BC
	DEC	A
;
; MSX 1 had
;
;	jp	p,A64E5
;
	JP	J7A1F
;
;	-----------------
J64EA:	POP	BC
	DEC	HL
J64EC:	LD	A,L
	SUB	E
	LD	E,A
	LD	A,H
	SBC	A,D
	LD	D,A
	JP	C,J6275
;
	PUSH	HL
	LD	HL,(VARTAB)
	PUSH	BC
	LD	BC,000A0H
	ADD	HL,BC
	POP	BC
	RST	DCOMPR
;
	JP	NC,J6275
;
	EX	DE,HL
	LD	(STKTOP),HL
	LD	H,B
	LD	L,C
	LD	(HIMEM),HL
	POP	HL
	LD	(MEMSIZ),HL
	POP	HL
	CALL	C62A1			; initialize interpreter
	LD	A,(MAXFIL)		; number of io buffers
	CALL	C7E6B			; allocate io buffers
	LD	HL,(TEMP)
	JP	NEWSTT
;
;	-----------------
;	Unused Code (for sure)
;	-----------------

?.6520:	LD	A,L
	SUB	E
	LD	E,A
	LD	A,H
	SBC	A,D
	LD	D,A
	RET	

;	  Subroutine NEXT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6527:	LD	DE,0
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C652A:	CALL	NZ,PTRGET
;
	LD	(TEMP),HL
	CALL	C3FE2
;
	JP	NZ,J405B
;
	LD	SP,HL
	PUSH	DE
	LD	A,(HL)
	PUSH	AF
	INC	HL
	PUSH	DE
	LD	A,(HL)
	INC	HL
	OR	A
	JP	M,J656B
;
	DEC	A
	JR	NZ,J6549
;
	LD	BC,8
	ADD	HL,BC
J6549:	ADD	A,04H	; 4 
	LD	(VALTYP),A
	CALL	C2F08			; DAC = HL
	EX	DE,HL
	EX	(SP),HL
	PUSH	HL
	RST	GETYPR
	JR	NC,J65A5
	CALL	C2ED6			; load from HL
	CALL	C324E
	POP	HL
	CALL	C2EE8			; DAC = (single)
	POP	HL
	CALL	C2EDF			; load from HL
	PUSH	HL
	CALL	C2F21			; compare single real
	JR	J6594
;
;	-----------------
J656B:	LD	BC,000CH
	ADD	HL,BC
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	EX	(SP),HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	PUSH	HL
	LD	L,C
	LD	H,B
	CALL	C3172			; add integer
	LD	A,(VALTYP)
	CP	02H	; 2 
	JP	NZ,J4067
	EX	DE,HL
	POP	HL
	LD	(HL),D
	DEC	HL
	LD	(HL),E
	POP	HL
	PUSH	DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	EX	(SP),HL
	CALL	C2F4D			; compare integer
;
J6594:	POP	HL
	POP	BC
	SUB	B
	CALL	C2EDF			; load from HL
;
	JR	Z,J65B6
;
	EX	DE,HL
	LD	(CURLIN),HL
	LD	L,C
	LD	H,B
	JP	J45FD
;
;	-----------------
J65A5:	CALL	C2697
	POP	HL
	CALL	C2F10			; HL = DAC
	POP	HL
	CALL	C2EEF			; ARG = (single)
	PUSH	DE
	CALL	C2F5C			; compare double real
	JR	J6594
;
;	-----------------
J65B6:	LD	SP,HL
	LD	(SAVSTK),HL
	EX	DE,HL
	LD	HL,(TEMP)
	LD	A,(HL)
	CP	2CH	; ","
	JP	NZ,NEWSTT
;
	RST	CHRGTR
;
	CALL	C652A
;
I65C8:	CALL	FRESTR
;
	LD	A,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	POP	DE
	PUSH	BC
	PUSH	AF
	CALL	C67D7			; free string (descriptor in DE)
	POP	AF
	LD	D,A
	LD	E,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	POP	HL
J65DE:	LD	A,E
	OR	D
	RET	Z
;
	LD	A,D
	SUB	01H	; 1 
	RET	C
;
	XOR	A
	CP	E
	INC	A
	RET	NC
;
	DEC	D
	DEC	E
	LD	A,(BC)
	INC	BC
	CP	(HL)
	INC	HL
	JR	Z,J65DE
;
	CCF	
	JP	J2E79

;	  Subroutine OCT$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C65F5:	CALL	C371E			; convert integer to octal text
	JR	J6607

;	  Subroutine HEX$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C65FA:	CALL	C3722			; convert integer to hexadecimal text
	JR	J6607

;	  Subroutine BIN$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C65FF:	CALL	C371A			; convert integer to binary text
	JR	J6607

;	  Subroutine STR$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C6604:	CALL	C3425			; convert DAC to text, unformatted
J6607:	CALL	C6635
	CALL	C67D3			; free string
	LD	BC,J6825
	PUSH	BC
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6611:	LD	A,(HL)
	INC	HL
	PUSH	HL
	CALL	C668E
;
	POP	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	CALL	C662A
;
	PUSH	HL
	LD	L,A
	CALL	C67C7
;
	POP	DE
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6625:	LD	A,01H	; 1 
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6627:	CALL	C668E
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C662A:	LD	HL,DSCTMP
	PUSH	HL
	LD	(HL),A
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6635:	DEC	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6636:	LD	B,22H	; """
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6638:	LD	D,B
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6639:	PUSH	HL
	LD	C,0FFH
J663C:	INC	HL
	LD	A,(HL)
	INC	C
	OR	A
	JR	Z,J6648
;
	CP	D
	JR	Z,J6648
;
	CP	B
	JR	NZ,J663C
;
J6648:	CP	22H	; """
	CALL	Z,C4666
;
	EX	(SP),HL
	INC	HL
	EX	DE,HL
	LD	A,C
	CALL	C662A
;
J6654:	LD	DE,DSCTMP
	DEFB	03EH			; LD A,xx, skip next instruction
C6658:	PUSH	DE
	LD	HL,(TEMPPT)
	LD	(DAC+2),HL
	LD	A,03H	; 3 
	LD	(VALTYP),A
	CALL	C2EF3			; HL = DE (valtyp)
	LD	DE,FRETOP
	RST	DCOMPR
;
	LD	(TEMPPT),HL
	POP	HL
	LD	A,(HL)
	RET	NZ
;
	LD	DE,16
	JP	J406F
;
;	-----------------
I6677:	INC	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6678:	CALL	C6635
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C667B:	CALL	C67D3			; free string
	CALL	C2EE1			; size and adres of string
	INC	D
J6682:	DEC	D
	RET	Z
	LD	A,(BC)
	RST	OUTDO
	CP	0DH
	CALL	Z,C7331
	INC	BC
	JR	J6682
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C668E:	OR	A
	DEFB	00EH			; LD C,xx, skip next instruction
I6690:	POP	AF
	PUSH	AF
	LD	HL,(STKTOP)
	EX	DE,HL
	LD	HL,(FRETOP)
	CPL	
	LD	C,A
	LD	B,0FFH
	ADD	HL,BC
	INC	HL
	RST	DCOMPR
;
	JR	C,J66A9
;
	LD	(FRETOP),HL
	INC	HL
	EX	DE,HL
J66A7:	POP	AF
	RET	
;
;	-----------------
J66A9:	POP	AF
	LD	DE,14
	JP	Z,J406F
	CP	A
	PUSH	AF
	LD	BC,I6690
	PUSH	BC

;	  Subroutine garbage collect
;	     Inputs  ________________________
;	     Outputs ________________________

C66B6:	LD	HL,(MEMSIZ)
J66B9:	LD	(FRETOP),HL
	LD	HL,0
	PUSH	HL
	LD	HL,(STREND)
	PUSH	HL
	LD	HL,TEMPST
I66C7:	LD	DE,(TEMPPT)
	RST	DCOMPR
;
	LD	BC,I66C7
	JP	NZ,J6742
;
	LD	HL,PRMPRV
	LD	(TEMP9),HL
	LD	HL,(ARYTAB)
	LD	(ARYTA2),HL
	LD	HL,(VARTAB)
J66E1:	LD	DE,(ARYTA2)
	RST	DCOMPR
;
	JR	Z,J66FA
;
	LD	A,(HL)
	INC	HL
	INC	HL
	INC	HL
	CP	03H	; 3 
	JR	NZ,J66F4
;
	CALL	C6743
;
	XOR	A
J66F4:	LD	E,A
	LD	D,00H
	ADD	HL,DE
	JR	J66E1
;
;	-----------------
J66FA:	LD	HL,(TEMP9)
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	A,D
	OR	E
	LD	HL,(ARYTAB)
	JR	Z,J671A
;
	EX	DE,HL
	LD	(TEMP9),HL
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	EX	DE,HL
	ADD	HL,DE
	LD	(ARYTA2),HL
	EX	DE,HL
	JR	J66E1
;
;	-----------------
J6719:	POP	BC
J671A:	LD	DE,(STREND)
	RST	DCOMPR
;
	JP	Z,J6763
;
	LD	A,(HL)
	INC	HL
	CALL	C2EDF			; load from HL
;
	PUSH	HL
	ADD	HL,BC
	CP	03H	; 3 
	JR	NZ,J6719
;
	LD	(TEMP8),HL
	POP	HL
	LD	C,(HL)
	LD	B,00H
	ADD	HL,BC
	ADD	HL,BC
	INC	HL
I6737:	EX	DE,HL
	LD	HL,(TEMP8)
	EX	DE,HL
	RST	DCOMPR
;
	JR	Z,J671A
;
	LD	BC,I6737
J6742:	PUSH	BC
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6743:	XOR	A
	OR	(HL)
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	RET	Z
;
	LD	B,H
	LD	C,L
	LD	HL,(FRETOP)
	RST	DCOMPR
;
	LD	H,B
	LD	L,C
	RET	C
;
	POP	HL
	EX	(SP),HL
	RST	DCOMPR
;
	EX	(SP),HL
	PUSH	HL
	LD	H,B
	LD	L,C
	RET	NC
;
	POP	BC
	POP	AF
	POP	AF
	PUSH	HL
	PUSH	DE
	PUSH	BC
	RET	
;
;	-----------------
J6763:	POP	DE
	POP	HL
	LD	A,H
	OR	L
	RET	Z
;
	DEC	HL
	LD	B,(HL)
	DEC	HL
	LD	C,(HL)
	PUSH	HL
	DEC	HL
	LD	L,(HL)
	LD	H,00H
	ADD	HL,BC
	LD	D,B
	LD	E,C
	DEC	HL
	LD	B,H
	LD	C,L
	LD	HL,(FRETOP)
	CALL	C6253
;
	POP	HL
	LD	(HL),C
	INC	HL
	LD	(HL),B
	LD	H,B
	LD	L,C
	DEC	HL
	JP	J66B9
;
;	-----------------
J6787:	PUSH	BC
	PUSH	HL
	LD	HL,(DAC+2)
	EX	(SP),HL
	CALL	C4DC7			; evaluate factor
;
	EX	(SP),HL
	CALL	C3058			; check if string
;
	LD	A,(HL)
	PUSH	HL
	LD	HL,(DAC+2)
	PUSH	HL
	ADD	A,(HL)
	LD	DE,15
	JP	C,J406F
;
	CALL	C6627
;
	POP	DE
	CALL	C67D7			; free string (descriptor in DE)
;
	EX	(SP),HL
	CALL	C67D6			; free string (descriptor in HL)
;
	PUSH	HL
	LD	HL,(DSCTMP+1)
	EX	DE,HL
	CALL	C67BF
;
	CALL	C67BF
;
	LD	HL,I4C73
	EX	(SP),HL
	PUSH	HL
	JP	J6654
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C67BF:	POP	HL
	EX	(SP),HL
	LD	A,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	LD	L,A
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C67C7:	INC	L
J67C8:	DEC	L
	RET	Z
;
	LD	A,(BC)
	LD	(DE),A
	INC	BC
	INC	DE
	JR	J67C8

;	  Subroutine FRESTR (free string with valtyp check)
;	     Inputs  ________________________
;	     Outputs ________________________

FRESTR:	CALL	C3058			; check if string

;	  Subroutine free string
;	     Inputs  ________________________
;	     Outputs ________________________

C67D3:	LD	HL,(DAC+2)

;	  Subroutine free string
;	     Inputs  HL = string descriptor
;	     Outputs ________________________

C67D6:	EX	DE,HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C67D7:	CALL	C67EE
	EX	DE,HL
	RET	NZ
	PUSH	DE
	LD	D,B
	LD	E,C
	DEC	DE
	LD	C,(HL)
	LD	HL,(FRETOP)
	RST	DCOMPR
	JR	NZ,J67EC
	LD	B,A
	ADD	HL,BC
	LD	(FRETOP),HL
J67EC:	POP	HL
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C67EE:	CALL	H.FRET
	LD	HL,(TEMPPT)
	DEC	HL
	LD	B,(HL)
	DEC	HL
	LD	C,(HL)
	DEC	HL
	RST	DCOMPR
	RET	NZ
	LD	(TEMPPT),HL
	RET	

;	  Subroutine LEN function
;	     Inputs  ________________________
;	     Outputs ________________________

C67FF:	LD	BC,C4FCF
	PUSH	BC
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6803:	CALL	FRESTR
;
	XOR	A
	LD	D,A
	LD	A,(HL)
	OR	A
	RET	

;	  Subroutine ASC function
;	     Inputs  ________________________
;	     Outputs ________________________

C680B:	LD	BC,C4FCF
	PUSH	BC
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C680F:	CALL	C6803
;
	JP	Z,C475A
;
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	A,(DE)
	RET	

;	  Subroutine CHR$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C681B:	CALL	C6625
;
	CALL	C521F
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6821:	LD	HL,(DSCTMP+1)
	LD	(HL),E
J6825:	POP	BC
	JP	J6654

;	  Subroutine STRING$ function
;	     Inputs  ________________________
;	     Outputs ________________________

J6829:	RST	CHRGTR
;
	RST	SYNCHR
	DEFB	"("			; check for (
	CALL	GETBYT
	PUSH	DE
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	FRMEVL			; evaluate expression
;
	RST	SYNCHR
	DEFB	")"			; check for )
	EX	(SP),HL
	PUSH	HL
	RST	GETYPR
;
	JR	Z,J6841
;
	CALL	C521F
;
	JR	J6844
;
;	-----------------
J6841:	CALL	C680F
;
J6844:	POP	DE
	CALL	C684D

;	  Subroutine SPACE$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C6848:	CALL	C521F
;
	LD	A,20H	; " "
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C684D:	PUSH	AF
	LD	A,E
	CALL	C6627
;
	LD	B,A
	POP	AF
	INC	B
	DEC	B
	JR	Z,J6825
;
	LD	HL,(DSCTMP+1)
J685B:	LD	(HL),A
	INC	HL
	DJNZ	J685B
;
	JR	J6825

;	  Subroutine LEFT$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C6861:	CALL	C68E3
;
	XOR	A
J6865:	EX	(SP),HL
	LD	C,A
	DEFB	03EH		; LD A,xx (to skip next statement)
C6868:	PUSH	HL
I6869:	PUSH	HL
	LD	A,(HL)
	CP	B
	JR	C,J6870
;
	LD	A,B
	DEFB	011H		; LD DE,xxxx (to skip next statement)
J6870:	LD	C,0
	PUSH	BC
	CALL	C668E
;
	POP	BC
	POP	HL
	PUSH	HL
	INC	HL
	LD	B,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,B
	LD	B,00H
	ADD	HL,BC
	LD	B,H
	LD	C,L
	CALL	C662A
;
	LD	L,A
	CALL	C67C7
;
	POP	DE
	CALL	C67D7		; free string (descriptor in DE)
;
	JP	J6654

;	  Subroutine RIGHT$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C6891:	CALL	C68E3
;
	POP	DE
	PUSH	DE
	LD	A,(DE)
	SUB	B
	JR	J6865

;	  Subroutine MID$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C689A:	EX	DE,HL
	LD	A,(HL)
	CALL	C68E6
;
	INC	B
	DEC	B
	JP	Z,C475A
;
	PUSH	BC
	CALL	C69E4
;
	POP	AF
	EX	(SP),HL
	LD	BC,I6869
	PUSH	BC
	DEC	A
	CP	(HL)
	LD	B,00H
	RET	NC
;
	LD	C,A
	LD	A,(HL)
	SUB	C
	CP	E
	LD	B,A
	RET	C
;
	LD	B,E
	RET	

;	  Subroutine VAL function
;	     Inputs  ________________________
;	     Outputs ________________________

C68BB:	CALL	C6803
;
	JP	Z,C4FCF
;
	LD	E,A
	INC	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	PUSH	HL
	ADD	HL,DE
	LD	B,(HL)
	LD	(VLZADR),HL
	LD	A,B
	LD	(VLZDAT),A
	LD	(HL),D
	EX	(SP),HL
	PUSH	BC
	DEC	HL
	RST	CHRGTR
	CALL	C3299			; convert text to number
	LD	HL,0
	LD	(VLZADR),HL
	POP	BC
	POP	HL
	LD	(HL),B
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C68E3:	EX	DE,HL
	RST	SYNCHR
	DEFB	")"			; check for )
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C68E6:	POP	BC
	POP	DE
	PUSH	BC
	LD	B,E
	RET	

;	  Subroutine INSTR function
;	     Inputs  ________________________
;	     Outputs ________________________

J68EB:	RST	CHRGTR
;
	CALL	C4C62			; evaluate ( expression
;
	RST	GETYPR
;
	LD	A,01H	; 1 
	PUSH	AF
	JR	Z,J6906
;
	POP	AF
	CALL	C521F
;
	OR	A
	JP	Z,C475A
;
	PUSH	AF
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	FRMEVL			; evaluate expression
;
	CALL	C3058			; check if string
;
J6906:	RST	SYNCHR
	DEFB	","			; check for ,
	PUSH	HL
	LD	HL,(DAC+2)
	EX	(SP),HL
	CALL	FRMEVL			; evaluate expression
;
	RST	SYNCHR
	DEFB	")"			; check for )
	PUSH	HL
	CALL	FRESTR
;
	EX	DE,HL
	POP	BC
	POP	HL
	POP	AF
	PUSH	BC
	LD	BC,J3297
	PUSH	BC
	LD	BC,C4FCF
	PUSH	BC
	PUSH	AF
	PUSH	DE
	CALL	C67D6			; free string (descriptor in HL)
;
	POP	DE
	POP	AF
	LD	B,A
	DEC	A
	LD	C,A
	CP	(HL)
	LD	A,00H
	RET	NC
;
	LD	A,(DE)
	OR	A
	LD	A,B
	RET	Z
;
	LD	A,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,B
	LD	B,00H
	ADD	HL,BC
J693E:	SUB	C
	LD	B,A
	PUSH	BC
	PUSH	DE
	EX	(SP),HL
	LD	C,(HL)
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	POP	HL
J6949:	PUSH	HL
	PUSH	DE
	PUSH	BC
J694C:	LD	A,(DE)
	CP	(HL)
	JR	NZ,J6966
;
	INC	DE
	DEC	C
	JR	Z,J695D
;
	INC	HL
	DJNZ	J694C
;
	POP	DE
	POP	DE
	POP	BC
J695A:	POP	DE
	XOR	A
	RET	
;
;	-----------------
J695D:	POP	HL
	POP	DE
	POP	DE
	POP	BC
	LD	A,B
	SUB	H
	ADD	A,C
	INC	A
	RET	
;
;	-----------------
J6966:	POP	BC
	POP	DE
	POP	HL
	INC	HL
	DJNZ	J6949
;
	JR	J695A
;
;	-----------------
J696E:	RST	SYNCHR
	DEFB	"("			; check for (
	CALL	PTRGET
	CALL	C3058			; check if string
;
	PUSH	HL
	PUSH	DE
	EX	DE,HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	HL,(STREND)
	RST	DCOMPR
;
	JR	C,J6993
;
	LD	HL,(TXTTAB)
	RST	DCOMPR
;
	JR	NC,J6993
;
	POP	HL
	PUSH	HL
	CALL	C6611
;
	POP	HL
	PUSH	HL
	CALL	C2EF3			; HL = DE (valtyp)
;
J6993:	POP	HL
	EX	(SP),HL
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	GETBYT
;
	OR	A
	JP	Z,C475A
;
	PUSH	AF
	LD	A,(HL)
	CALL	C69E4
;
	PUSH	DE
	CALL	C4C5F			; evaluate = expression
;
	PUSH	HL
	CALL	FRESTR
;
	EX	DE,HL
	POP	HL
	POP	BC
	POP	AF
	LD	B,A
	EX	(SP),HL
	PUSH	HL
	LD	HL,J3297
	EX	(SP),HL
	LD	A,C
	OR	A
	RET	Z
;
	LD	A,(HL)
	SUB	B
	JP	C,C475A
;
	INC	A
	CP	C
	JR	C,J69C3
;
	LD	A,C
J69C3:	LD	C,B
	DEC	C
	LD	B,00H
	PUSH	DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,E
	ADD	HL,BC
	LD	B,A
	POP	DE
	EX	DE,HL
	LD	C,(HL)
	INC	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	EX	DE,HL
	LD	A,C
	OR	A
	RET	Z
;
J69DB:	LD	A,(DE)
	LD	(HL),A
	INC	DE
	INC	HL
	DEC	C
	RET	Z
;
	DJNZ	J69DB
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C69E4:	LD	E,0FFH
	CP	29H	; ")"
	JR	Z,J69EF
;
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	GETBYT
;
J69EF:	RST	SYNCHR
	DEFB	")"			; check for )
	RET	

;	  Subroutine FRE function
;	     Inputs  ________________________
;	     Outputs ________________________

C69F2:	LD	HL,(STREND)
	EX	DE,HL
	LD	HL,0
	ADD	HL,SP
	RST	GETYPR
;
	JP	NZ,J4FC1
;
	CALL	C67D3			; free string
;
	CALL	C66B6
;
	LD	DE,(STKTOP)
	LD	HL,(FRETOP)
	JP	J4FC1
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6A0E:	CALL	FRMEVL			; evaluate expression
;
	PUSH	HL
	CALL	FRESTR
;
	LD	A,(HL)
	OR	A
	JR	Z,J6A47
;
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,E
	LD	E,A
	CALL	C6F15
;
	PUSH	AF
	LD	BC,FILNAM
	LD	D,0BH	; 11 
	INC	E
J6A29:	DEC	E
	JR	Z,J6A61
;
	LD	A,(HL)
	CP	20H	; " "
	JR	C,J6A47
;
	CP	2EH	; "."
	JR	Z,J6A4D
;
	LD	(BC),A
	INC	BC
	INC	HL
	DEC	D
	JR	NZ,J6A29
;
J6A3B:	POP	AF
	PUSH	AF
	LD	D,A
	LD	A,(FILNAM)
	INC	A
	JR	Z,J6A47
;
	POP	AF
	POP	HL
	RET	
;
;	-----------------
J6A47:	JP	J6E6B
;
;	-----------------
J6A4A:	INC	HL
	JR	J6A29
;
;	-----------------
J6A4D:	LD	A,D
	CP	0BH	; 11 
	JP	Z,J6A47
;
	CP	03H	; 3 
	JP	C,J6A47
;
	JR	Z,J6A4A
;
	LD	A,20H	; " "
	LD	(BC),A
	INC	BC
	DEC	D
	JR	J6A4D
;
;	-----------------
J6A61:	LD	A,20H	; " "
	LD	(BC),A
	INC	BC
	DEC	D
	JR	NZ,J6A61
;
	JR	J6A3B
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6A6A:	CALL	C521F
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6A6D:	LD	L,A
	LD	A,(MAXFIL)
	CP	L
	JP	C,J6E7D
;
	LD	H,00H
	ADD	HL,HL
	EX	DE,HL
	LD	HL,(FILTAB)
	ADD	HL,DE
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	LD	A,(NLONLY)
	INC	A
	RET	Z
;
	LD	A,(HL)
	OR	A
	RET	Z
;
	PUSH	HL
	LD	DE,4
	ADD	HL,DE
	LD	A,(HL)
	CP	09H	; 9 
	JR	NC,J6A99
;
	CALL	H.GETP
;
	JP	J6E80
;
;	-----------------
J6A99:	POP	HL
	LD	A,(HL)
	OR	A
	SCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6A9E:	DEC	HL
	RST	CHRGTR
;
	CP	23H	; "#"
	CALL	Z,C4666
;
	CALL	GETBYT
;
	EX	(SP),HL
	PUSH	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6AAA:	CALL	C6A6D
;
	JP	Z,J6E77
;
	LD	(PTRFIL),HL
	CALL	H.SETF
;
	RET	

;	  Subroutine OPEN statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6AB7:	LD	BC,C4AFF
	PUSH	BC
	CALL	C6A0E
;
	LD	A,(HL)
	CP	82H
	LD	E,04H	; 4 
	JR	NZ,J6AE4
;
	RST	CHRGTR
;
	CP	85H
	LD	E,01H	; 1 
	JR	Z,J6AE3
;
	CP	9CH
	JR	Z,J6ADC
;
	RST	SYNCHR
	DEFB	"A"
	RST	SYNCHR
	DEFB	"P"
	RST	SYNCHR
	DEFB	"P"
	RST	SYNCHR
	DEFB	081H			; check for APPEND
	LD	E,08H	; 8 
	JR	J6AE4
;
;	-----------------
J6ADC:	RST	CHRGTR
;
	RST	SYNCHR
	DEFB	0B3H			; check for PUT token
	LD	E,02H	; 2 
	JR	J6AE4
;
;	-----------------
J6AE3:	RST	CHRGTR
;
J6AE4:	RST	SYNCHR
	DEFB	"A"
	RST	SYNCHR
	DEFB	"S"			; check for AS
	PUSH	DE
	LD	A,(HL)
	CP	"#"
	CALL	Z,C4666
;
	CALL	GETBYT
;
	OR	A
	JP	Z,J6E7D
;
	CALL	H.NOFO
;
	DEFB	01EH			; LD E,xx, skip next instruction
C6AFA:	PUSH	DE
	DEC	HL
	LD	E,A
	RST	CHRGTR
;
	JP	NZ,J4055
;
	EX	(SP),HL
	LD	A,E
	PUSH	AF
	PUSH	HL
	CALL	C6A6D
;
	JP	NZ,J6E6E
;
	POP	DE
	LD	A,D
	CP	09H	; 9 
	CALL	H.NULO
;
	JP	C,J6E80
;
	PUSH	HL
	LD	BC,4
	ADD	HL,BC
	LD	(HL),D
	LD	A,00H
	POP	HL
	CALL	C6F8F
;
	POP	AF
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6B24:	PUSH	HL
	OR	A
	JR	NZ,J6B30
	LD	A,(NLONLY)
	AND	01H
	JP	NZ,J6CF3
J6B30:	CALL	C6A6D
	JR	Z,J6B4A
	LD	(PTRFIL),HL
	PUSH	HL
	JR	C,J6B41
	CALL	H.NTFL
	JP	J6E80
;
;	-----------------
J6B41:	LD	A,02H	; 2 
	CALL	C6F8F
;
	CALL	C6CEA
;
	POP	HL
J6B4A:	PUSH	HL
	LD	DE,7
	ADD	HL,DE
	LD	(HL),A
	LD	H,A
	LD	L,A
	LD	(PTRFIL),HL
	POP	HL
	ADD	A,(HL)
	LD	(HL),00H
	POP	HL
	RET	
;
;	-----------------
J6B5B:	SCF				; Cx=1
	DEFB	011H			; skip to 6B5F

;	  Subroutine LOAD statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6B5D:	DEFB	0F6H			; OR xx, so A<>0 and Cx=0

;	  Subroutine MERGE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6B5E:	XOR	A			; A=0 and Cx=0
	PUSH	AF
	CALL	C6A0E
;
	CALL	H.MERG
;
	POP	AF
	PUSH	AF
	JR	Z,J6B76
;
	LD	A,(HL)
	SUB	2CH	; ","
	OR	A
	JR	NZ,J6B76
;
	RST	CHRGTR
;
	RST	SYNCHR
	DEFB	"R"			; check for R
	POP	AF
	SCF	
	PUSH	AF
J6B76:	PUSH	AF
	XOR	A
	LD	E,01H	; 1 
	CALL	C6AFA
;
	LD	HL,(PTRFIL)
	LD	BC,7
	ADD	HL,BC
	POP	AF
	SBC	A,A
	AND	80H
	OR	01H	; 1 
	LD	(NLONLY),A
	POP	AF
	PUSH	AF
	SBC	A,A
	LD	(FILNAM),A
	LD	A,(HL)
	OR	A
	JP	M,J6BD4
;
	POP	AF
	CALL	NZ,C6287		; new
;
	XOR	A
	CALL	C6AAA
;
	JP	J4134			; mainloop

;	  Subroutine SAVE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6BA3:	CALL	C6A0E
;
	CALL	H.SAVE
;
	DEC	HL
	RST	CHRGTR
;
	LD	E,80H
	SCF	
	JR	Z,J6BB7
;
	RST	SYNCHR
	DEFB	","
	RST	SYNCHR
	DEFB	"A"			; check for ,A
	OR	A
	LD	E,02H	; 2 
J6BB7:	PUSH	AF
	LD	A,D
	CP	09H	; 9 
	JR	C,J6BC2
;
	LD	E,02H	; 2 
	POP	AF
	XOR	A
	PUSH	AF
J6BC2:	XOR	A
	CALL	C6AFA
;
	POP	AF
	JR	C,J6BCE
;
	DEC	HL
	RST	CHRGTR
;
	JP	C522E			; list statement
;
;	-----------------
J6BCE:	CALL	H.BINS
;
	JP	J6E6B
;
;	-----------------
J6BD4:	CALL	H.BINL
;
	JP	J6E6B
;
;	-----------------
;	Unused Code ?
;	-----------------


?.6BDA:	PUSH	HL
	PUSH	DE
	LD	HL,(PTRFIL)
	LD	DE,4
	ADD	HL,DE
	LD	A,(HL)
	POP	DE
	POP	HL
	RET	
;
;	-----------------
J6BE7:	JR	NZ,J6C02
;
	PUSH	HL
J6BEA:	PUSH	BC
	PUSH	AF
	LD	DE,I6BF3
	PUSH	DE
	PUSH	BC
	OR	A
	RET	
;
;	-----------------
I6BF3:	POP	AF
	POP	BC
	DEC	A
	JP	P,J6BEA
;
	POP	HL
	RET	
;
;	-----------------
I6BFB:	POP	BC
	POP	HL
	LD	A,(HL)
	CP	2CH	; ","
	RET	NZ
;
	RST	CHRGTR
;
J6C02:	PUSH	BC
	LD	A,(HL)
	CP	23H	; "#"
	CALL	Z,C4666
;
	CALL	GETBYT
;
	EX	(SP),HL
	PUSH	HL
	LD	DE,I6BFB
	PUSH	DE
	SCF	
	JP	(HL)

;	  Subroutine CLOSE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6C14:	LD	BC,C6B24
	LD	A,(MAXFIL)
	JR	J6BE7

;	  Subroutine close all io channels
;	     Inputs  ________________________
;	     Outputs ________________________

C6C1C:	LD	A,(NLONLY)
	OR	A				; flag (b7) for not closing channels set ?
	RET	M				; yep, quit doing nothing
	LD	BC,C6B24
	XOR	A
	LD	A,(MAXFIL)
	JR	J6BE7

;	  Subroutine LFILES statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6C2A:	LD	A,01H	; 1 
	LD	(PRTFLG),A

;	  Subroutine FILES statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6C2F:	CALL	H.FILE
;
	JP	C475A
;
;	-----------------
J6C35:	PUSH	AF
	CALL	C6A9E
;
	JR	C,J6C41
;
	CALL	H.DGET
;
	JP	J6E6B
;
;	-----------------
J6C41:	POP	DE
	POP	BC
	LD	A,04H	; 4 
	JP	C6F8F
;
;	-----------------
C6C48:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CALL	C6C62
;
	JR	NC,J6C57
;
	CALL	H.FILO
;
	JP	J6E6B
;
;	-----------------
J6C57:	POP	AF
	PUSH	AF
	LD	C,A
	LD	A,06H	; 6 
	CALL	C6F8F
;
	JP	J72FF
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6C62:	PUSH	DE
	LD	HL,(PTRFIL)
	EX	DE,HL
	LD	HL,4
	ADD	HL,DE
	LD	A,(HL)
	EX	DE,HL
	POP	DE
	CP	09H	; 9 
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6C71:	PUSH	HL
J6C72:	PUSH	DE
	PUSH	BC
	CALL	C6C62
;
	JR	NC,J6C7F
;
I6C79:	CALL	H.INDS
;
	JP	J6E80
;
;	-----------------
J6C7F:	LD	A,08H	; 8 
	CALL	C6F8F
;
	JP	J7300

;	  Subroutine INPUT$ function
;	     Inputs  ________________________
;	     Outputs ________________________

J6C87:	RST	CHRGTR
;
	RST	SYNCHR
	DEFB	"$"
	RST	SYNCHR
	DEFB	"("			; check for $(
	PUSH	HL
	LD	HL,(PTRFIL)
	PUSH	HL
	LD	HL,0
	LD	(PTRFIL),HL
	POP	HL
	EX	(SP),HL
	CALL	GETBYT
;
	PUSH	DE
	LD	A,(HL)
	CP	2CH	; ","
	JR	NZ,J6CB3
;
	RST	CHRGTR
;
	CALL	C6A9E
;
	CP	01H	; 1 
	JP	Z,J6CB0
;
	CP	04H	; 4 
	JP	NZ,J6E83
;
J6CB0:	POP	HL
	XOR	A
	LD	A,(HL)
J6CB3:	PUSH	AF
	RST	SYNCHR
	DEFB	")"			; check for )
	POP	AF
	EX	(SP),HL
	PUSH	AF
	LD	A,L
	OR	A
	JP	Z,C475A
;
	PUSH	HL
	CALL	C6627
;
	EX	DE,HL
	POP	BC
J6CC4:	POP	AF
	PUSH	AF
	JR	Z,J6CE2
;
	CALL	CHGET
;
	PUSH	AF
	CALL	CKCNTC
;
	POP	AF
J6CD0:	LD	(HL),A
	INC	HL
	DEC	C
	JR	NZ,J6CC4
;
	POP	AF
	POP	BC
	POP	HL
	CALL	H.RSLF
;
	LD	(PTRFIL),HL
	PUSH	BC
	JP	J6654
;
;	-----------------
J6CE2:	CALL	C6C71
;
	JP	C,J6E83
;
	JR	J6CD0
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6CEA:	CALL	C6CFB
;
	PUSH	HL
	LD	B,00H
	CALL	C6CF5
;
J6CF3:	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6CF5:	XOR	A
J6CF6:	LD	(HL),A
	INC	HL
	DJNZ	J6CF6
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6CFB:	LD	HL,(PTRFIL)
	LD	DE,9
	ADD	HL,DE
	RET	

;	  Subroutine LOC function
;	     Inputs  ________________________
;	     Outputs ________________________

C6D03:	CALL	H.SAVD
;
	CALL	C6A6A
;
	JR	Z,J6D2B
;
	LD	A,0AH	; 10 
	JR	C,J6D30
;
	CALL	H.LOC
;
	JR	J6D36

;	  Subroutine LOF function
;	     Inputs  ________________________
;	     Outputs ________________________

C6D14:	CALL	H.SAVD
;
	CALL	C6A6A
;
	JR	Z,J6D2B
;
	LD	A,0CH	; 12 
	JR	C,J6D30
;
	CALL	H.LOF
;
	JR	J6D36

;	  Subroutine EOF function
;	     Inputs  ________________________
;	     Outputs ________________________

C6D25:	CALL	H.SAVD
;
	CALL	C6A6A
;
J6D2B:	JP	Z,J6E77
;
	LD	A,0EH	; 14 
J6D30:	JP	C,C6F8F
;
	CALL	H.EOF
;
J6D36:	JP	J6E80

;	  Subroutine FPOS function
;	     Inputs  ________________________
;	     Outputs ________________________

C6D39:	CALL	H.SAVD
;
	CALL	C6A6A
;
	LD	A,10H	; 16 
	JR	C,J6D30
;
	CALL	H.FPOS
;
	JR	J6D36
;
;	-----------------
J6D48:	CALL	ISFLIO
;
	JP	Z,J4640
;
	XOR	A
	CALL	C6B24
;
	JP	J6E71
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6D55:	LD	C,01H	; 1 
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6D57:	CP	23H	; "#"
	RET	NZ
;
	PUSH	BC
	CALL	C521B
;
	RST	SYNCHR
	DEFB	","			; check for ,
	LD	A,E
	PUSH	HL
	CALL	C6AAA
;
	LD	A,(HL)
	POP	HL
	POP	BC
	CP	C
	JR	Z,J6D79
;
	CP	04H	; 4 
	JR	Z,J6D79
;
	CP	08H	; 8 
	JR	NZ,J6D76
;
	LD	A,C
	CP	02H	; 2 
J6D76:	JP	NZ,J6E7D
;
J6D79:	LD	A,(HL)
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6D7B:	LD	BC,I6317
	PUSH	BC
	XOR	A
	JP	C6B24
;
;	-----------------
J6D83:	RST	GETYPR
;
	LD	BC,I4BF1
	LD	DE,2C20H
	JR	NZ,J6DA3
;
	LD	E,D
	JR	J6DA3
;
;	-----------------
J6D8F:	LD	BC,C4AFF
	PUSH	BC
	CALL	C6D55
;
	CALL	PTRGET
;
	CALL	C3058			; check if string
;
	PUSH	DE
	LD	BC,J487B
	XOR	A
	LD	D,A
	LD	E,A
J6DA3:	PUSH	AF
	PUSH	BC
	PUSH	HL
J6DA6:	CALL	C6C71
;
	JP	C,J6E83
;
	CP	20H	; " "
	JR	NZ,J6DB4
;
	INC	D
	DEC	D
	JR	NZ,J6DA6
;
J6DB4:	CP	22H	; """
	JR	NZ,J6DC6
;
	LD	A,E
	CP	2CH	; ","
	LD	A,22H	; """
	JR	NZ,J6DC6
;
	LD	D,A
	LD	E,A
	CALL	C6C71
;
	JR	C,J6E0D
;
J6DC6:	LD	HL,BUF
	LD	B,0FFH
J6DCB:	LD	C,A
	LD	A,D
	CP	22H	; """
	LD	A,C
	JR	Z,J6DFC
;
	CP	0DH	; 13 
	PUSH	HL
	JR	Z,J6E27
;
	POP	HL
	CP	0AH	; 10 
	JR	NZ,J6DFC
;
J6DDC:	LD	C,A
	LD	A,E
	CP	2CH	; ","
	LD	A,C
	CALL	NZ,C6E61
;
	CALL	C6C71
;
	JR	C,J6E0D
;
	CP	0AH	; 10 
	JR	Z,J6DDC
;
	CP	0DH	; 13 
	JR	NZ,J6DFC
;
	LD	A,E
	CP	20H	; " "
	JR	Z,J6E08
;
	CP	2CH	; ","
	LD	A,0DH	; 13 
	JR	Z,J6E08
;
J6DFC:	OR	A
	JR	Z,J6E08
;
	CP	D
	JR	Z,J6E0D
;
	CP	E
	JR	Z,J6E0D
;
	CALL	C6E61
;
J6E08:	CALL	C6C71
;
	JR	NC,J6DCB
;
J6E0D:	PUSH	HL
	CP	22H	; """
	JR	Z,J6E16
;
	CP	20H	; " "
	JR	NZ,J6E41
;
J6E16:	CALL	C6C71
;
	JR	C,J6E41
;
	CP	20H	; " "
	JR	Z,J6E16
;
	CP	2CH	; ","
	JR	Z,J6E41
;
	CP	0DH	; 13 
	JR	NZ,J6E30
;
J6E27:	CALL	C6C71
;
	JR	C,J6E41
;
	CP	0AH	; 10 
	JR	Z,J6E41
;
J6E30:	LD	C,A
	CALL	C6C62
;
	JR	NC,J6E3C
;
	CALL	H.BAKU
;
	JP	J6E80
;
;	-----------------
J6E3C:	LD	A,12H	; 18 
	CALL	C6F8F
;
J6E41:	POP	HL
J6E42:	LD	(HL),00H
	LD	HL,BUFMIN
	LD	A,E
	SUB	20H	; " "
	JR	Z,J6E53
;
	LD	B,00H
	CALL	C6638
;
	POP	HL
	RET	
;
;	-----------------
J6E53:	RST	GETYPR
;
	PUSH	AF
	RST	CHRGTR
;
	POP	AF
	PUSH	AF
	CALL	C,C3299			; convert text to number
;
	POP	AF
	CALL	NC,C3299		; convert text to number
;
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6E61:	OR	A
	RET	Z
;
	LD	(HL),A
	INC	HL
	DEC	B
	RET	NZ
;
	POP	AF
	JP	J6E42
;
;	-----------------
J6E6B:	LD	E,38H	; "8"
	DEFB	001H

J6E6E:	LD	E,36H
	DEFB	001H

J6E71:	LD	E,39H
	DEFB	001H

	LD	E,35H
	DEFB	001H

J6E77:	LD	E,3BH
	DEFB	001H

	LD	E,32H
	DEFB	001H

J6E7D:	LD	E,34H
	DEFB	001H

J6E80:	LD	E,33H
	DEFB	001H

J6E83:	LD	E,37H
	DEFB	001H

J6E86:	LD	E,3AH
	XOR	A
	LD	(NLONLY),A
	LD	(FLBMEM),A
	JP	J406F

;	  Subroutine BSAVE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6E92:	CALL	C6A0E
;
	PUSH	DE
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	C6F0B
;
	EX	DE,HL
	LD	(SAVENT),HL
	EX	DE,HL
	PUSH	DE
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	C6F0B
;
	EX	DE,HL
	LD	(SAVEND),HL
	EX	DE,HL
	DEC	HL
	RST	CHRGTR
;
	JR	Z,J6EB9
;
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	C6F0B
;
	EX	DE,HL
	LD	(SAVENT),HL
	EX	DE,HL
J6EB9:	POP	BC
	POP	DE
	PUSH	HL
	PUSH	BC
	LD	A,D
	CP	0FFH
	JP	Z,J6FD7
;
	JP	J6E6B

;	  Subroutine BLOAD statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6EC6:	CALL	C6A0E
;
	PUSH	DE
	XOR	A
	LD	(RUNBNF),A
	DEC	HL
	RST	CHRGTR
;
	LD	BC,0
	JR	Z,J6EE8
;
	RST	SYNCHR
	DEFB	","			; check for ,
	CP	"R"
	JR	NZ,J6EE3
;
	LD	(RUNBNF),A
	RST	CHRGTR
;
	JR	Z,J6EE8
;
	RST	SYNCHR
	DEFB	","			; check for ,
J6EE3:	CALL	C6F0B
;
	LD	B,D
	LD	C,E
J6EE8:	POP	DE
	PUSH	HL
	PUSH	BC
	LD	A,D
	CP	0FFH
	JP	Z,J7014
;
	JP	J6E6B

;	-----------------
;	BLOAD routine, used by diskrom
;	-----------------

J6EF4:	LD	A,(RUNBNF)
	OR	A
	JR	Z,J6F06
;
	XOR	A
	CALL	C6B24
;
	LD	HL,J6CF3
	PUSH	HL
	LD	HL,(SAVENT)
	JP	(HL)
;
;	-----------------
J6F06:	POP	HL
	XOR	A
	JP	C6B24
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6F0B:	CALL	FRMEVL			; evaluate expression
;
	PUSH	HL
	CALL	C5439			; convert adres to INT
;
	POP	DE
	EX	DE,HL
	RET	
;
;	-----------------
;
;	  Subroutine devicename parser
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6F15:	CALL	H.PARD
;
	LD	A,(HL)
	CP	3AH			;
	JR	C,J6F37			; bad filename
;
J6F1D:	PUSH	HL
	LD	D,E
	LD	A,(HL)
	INC	HL
	DEC	E
	JR	Z,J6F2E			; filespec has length 1, no device
J6F24:	CP	":"			; device seperator ?
	JR	Z,J6F3D			; yep,
	LD	A,(HL)
	INC	HL
	DEC	E
	JP	P,J6F24			; check for device
J6F2E:	LD	E,D
	POP	HL
	XOR	A			; Z=1
	LD	A,0FFH			; devicecode for CAS
	CALL	H.NODE
	RET	

J6F37:	CALL	H.POSD
	JP	J6E6B

J6F3D:	LD	A,D
	SUB	E
	DEC	A			; length of devicename
	POP	BC
	PUSH	DE
	PUSH	BC
	LD	C,A
	LD	B,A
	LD	DE,I6F76		; internal devicename table
	EX	(SP),HL
	PUSH	HL
J6F4A:	CALL	C4EA9			; get char uppercase
	PUSH	BC
	LD	B,A
	LD	A,(DE)
	INC	HL
	INC	DE
	CP	B
	POP	BC
	JR	NZ,J6F63		; differently
	DEC	C
	JR	NZ,J6F4A		; next
;
J6F59:	LD	A,(DE)
	OR	A			; name in table also ends ?
	JP	P,J6F63			; nope, this is not it!
;
	POP	HL			; yep, A=devicecode
	POP	HL
	POP	DE
	OR	A			; Z=0
	RET	
;
;	-----------------
J6F63:	OR	A			; already at devicecode ?
	JP	M,J6F59			; yep, found device!
;
J6F67:	LD	A,(DE)
	ADD	A,A
	INC	DE
	JR	NC,J6F67		; skip to next devicename in table
;
	LD	C,B
	POP	HL
	PUSH	HL
	LD	A,(DE)
	OR	A
	JR	NZ,J6F4A		; try next devicename
;
	JP	J55F8			; try external devices (in expansion roms)
;
;	-----------------
I6F76:	DEFB	"CAS",0FFH
	DEFB	"LPT",0FEH
	DEFB	"CRT",0FDH
	DEFB	"GRP",0FCH
	DEFB	0

I6F87:	DEFW	C71C7
	DEFW	C72A6
	DEFW	C71A2
	DEFW	C7182

;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C6F8F:	CALL	H.GEND
;
	PUSH	HL
	PUSH	DE
	PUSH	AF
	LD	DE,4
	ADD	HL,DE
	LD	A,(HL)
	CP	0FCH
	JP	C,J564A
;
	LD	A,0FFH
	SUB	(HL)
	ADD	A,A
	LD	E,A
	LD	HL,I6F87
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	POP	AF
	LD	L,A
	LD	H,00H
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	EX	DE,HL
	POP	DE
	EX	(SP),HL
	RET	
;
;	  Subroutine CSAVE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C6FB7:	JP	J4055
;
; MSX 1,2 and 2+ had
;
; CSAVE handler here
;

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C6FBA:	OUT	(0A4H),A
J6FBC:	IN	A,(0A4H)
	OR	A
	JR	Z,J6FBC
	EXX	
J6FC2:	IN	A,(0A4H)
	CP	E
	JR	NZ,J6FC2
	EXX	
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C6FC9:	DI	
	IN	A,(0AAH)
	AND	0F0H
	ADD	A,07H
	OUT	(0AAH),A
	RET	

	DEFS	06FD7H-$,0

;
; End of change
;

;	-----------------
;	BSAVE subroutine
;	-----------------

J6FD7:	JP	J6E6B
;
; MSX 1 had
;
; BSAVE subroutine here
;

J6FDA:	EXX	
	LD	E,A
	LD	HL,0C00H
	EXX	
J6FE0:	IN	A,(0A9H)
	AND	10H
	JR	NZ,J6FF0
	LD	A,02H
J6FE8:	POP	HL
	POP	HL
	POP	HL
	POP	DE
	POP	BC
	JP	J7222

J6FF0:	CALL	C70F1
	SUB	80H
	JP	P,J6FFA
	NEG	
J6FFA:	DEFB	0FDH
	CP	L			; CP IYL
	JR	C,J6FE0
	DEFB	0FDH
	LD	H,01H			; LD IYH,01H
	POP	AF
	EX	AF,AF'
	POP	AF
	AND	04H
	EX	AF,AF'
	POP	HL
	POP	DE
	POP	BC
	JP	P,J7080
	CALL	C7287
	JR	J7084

	DEFS	07014H-$,0

;
; End of change
;

;	-----------------
;	BLOAD subroutine
;	-----------------

J7014:	JP	J6E6B
;
; MSX 1 had
;
; BLOAD subroutine here
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7017:	EXX	
	LD	E,01H
	LD	HL,0800H
	EXX	
	LD	HL,0
	LD	D,H
	LD	B,04H 
D7024:	DEFB	0DDH
	LD	L,00H			; LD IXL,00H
J7027:	CALL	C70F1
	LD	E,A
	ADD	HL,DE
	DJNZ	J7027
	INC	HL
	INC	HL
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	A,L
	SUB	80H
	DEFB	0DDH
	LD	L,A			; LD IXL,A
	RET	

	DEFS	0703FH-$,0

;	  Subroutine CLOAD statement
;	     Inputs  ________________________
;	     Outputs ________________________

C703F:	JP	J4055
;
; MSX 1,2 and 2+ had
;
; CLOAD handler here
;

;
;	  Subroutine PCMREC
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7042:	EX	AF,AF'
	LD	A,0CH
	OUT	(0A5H),A
	LD	A,80H
	OUT	(0A4H),A
	CALL	GETCPU
	PUSH	AF
	OR	A
	LD	A,1
	CALL	Z,CHGCPU
	CALL	C6FC9
	EX	AF,AF'
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	AF
	AND	78H
	DEFB	0FDH
	LD	L,A			; LD IYL,A
	POP	AF
	PUSH	AF
	AND	83H
	INC	A
	RES	7,A
	RES	2,A
	PUSH	AF
	DEC	A
	JR	NZ,J7078
	CALL	GETCPU
	DEC	A
	JR	NZ,J7078
	INC	A
	JP	J6FE8

J7078:	CALL	C7017
	POP	AF
	PUSH	AF
	JP	J6FDA

J7080:	LD	D,00H
	DEFB	0FDH
	LD	H,D			; LD IYH,D
J7084:	EX	AF,AF'
	JR	Z,J70E0
J7087:	IN	A,(0A9H)
	AND	10H
	JR	Z,J70E4
	CALL	C70F1
J7090:	DEFB	0DDH
	LD	H,A			; LD IXH,A
	SUB	7FH
	CP	03H
	JR	NC,J709E
	LD	A,C
	DEC	A
	OR	B
	OR	D
	JR	NZ,J70A8
J709E:	DEFB	0DDH
	LD	A,H			; LD A,IXH
J70A0:	CALL	C7270
	JR	NC,J7087
J70A5:	JP	J720B

J70A8:	DEFB	0FDH
	LD	L,01H			; LD IYL,01H
J70AB:	CALL	C70F1
	SUB	7FH
	CP	03H
	JR	NC,J70C6
	DEFB	0FDH
	INC	L			; INC IYL
	JR	NZ,J70AB
	XOR	A
	CALL	C7270
	XOR	A
	CALL	C7270
	JR	C,J70A5
	LD	A,80H
	JR	J7090

J70C6:	ADD	A,7FH
	DEFB	0DDH
	LD	H,A			; LD IXH,A
	DEFB	0FDH
	LD	A,L			; LD A,IYL
	DEC	A
	LD	A,80H
	JR	Z,J70D7
	XOR	A
	CALL	C7270
	DEFB	0FDH
	LD	A,L			; LD A,IYL
J70D7:	CALL	C7270
	JR	C,J70A5
	DEFB	0DDH
	LD	A,H			; LD A,IXH
	JR	J70A0

J70E0:	IN	A,(0A9H)
	AND	10H
J70E4:	JP	Z,J7220
	CALL	C70F1
	CALL	C7270
	JR	NC,J70E0
	JR	J70A5

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C70F1:	EXX	
	LD	A,E
	OR	A
	JR	NZ,J70FD
J70F6:	IN	A,(0A4H)
	OR	A
	JR	NZ,J70F6
	LD	L,01H
J70FD:	IN	A,(0A4H)
	CP	L
	JR	NZ,J70FD
	ADD	A,E
	AND	03H
	LD	L,A
	LD	C,0A5H
	LD	A,H
	OR	10H
	OUT	(C),A
	LD	A,80H
	OUT	(0A4H),A
	DEFB	0EDH,070H		; ED 70 Opcode
	JP	M,J7118
	AND	7FH
J7118:	OR	40H
	OUT	(0A4H),A
	DEFB	0EDH,070H		; ED 70 Opcode
	JP	M,J7123
	AND	0BFH
J7123:	OR	20H
	OUT	(0A4H),A
	DEFB	0EDH,070H		; ED 70 Opcode
	JP	M,J712E
	AND	0DFH
J712E:	OR	10H
	OUT	(0A4H),A
	DEFB	0EDH,070H		; ED 70 Opcode
	JP	M,J7139
	AND	0EFH
J7139:	OR	08H
	OUT	(0A4H),A
	DEFB	0EDH,070H		; ED 70 Opcode
	JP	M,J7144
	AND	0F7H
J7144:	OR	04H
	OUT	(0A4H),A
	DEFB	0EDH,070H		; ED 70 Opcode
	JP	M,J714F
	AND	0FBH
J714F:	OR	02H
	OUT	(0A4H),A
	DEFB	0EDH,070H		; ED 70 Opcode
	JP	M,J715A
	AND	0FDH
J715A:	OR	01H
	OUT	(0A4H),A
	DEFB	0EDH,070H		; ED 70 Opcode
	JP	M,J7165
	AND	0FEH
J7165:	OUT	(C),H
	DEFB	0DDH,04DH		; LD C,IXL
	BIT	7,C
	JR	NZ,J7174
	SUB	C
	JR	NC,J717B
	LD	A,01H
	EXX	
	RET	

J7174:	SUB	C
	JR	C,J717B
	LD	A,0FFH
	EXX	
	RET	

J717B:	SUB	01H
	ADC	A,01H
	EXX	
	RET	

	DEFS	07182H-$,0


C7182:	DEFW	J71B6
	DEFW	J71C2
	DEFW	J6E86
	DEFW	J7196
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A

J7196:	LD	A,(SCRMOD)
	CP	02H	; 2 
	JP	C,C475A
;
	LD	A,C
	JP	GRPPRT
;
;	-----------------
C71A2:	DEFW	J71B6
	DEFW	J71C2
	DEFW	J6E86
	DEFW	J71C3
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A

J71B6:	CALL	C72CD
;
	CP	01H	; 1 
	JP	Z,J6E6B
;
	LD	(PTRFIL),HL
	LD	(HL),E
J71C2:	RET	
;
;	-----------------
J71C3:	LD	A,C
	JP	CHPUT
;
;	-----------------
C71C7:	DEFW	J6E6B
	DEFW	C475A
	DEFW	J6E86
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A

; MSX 1 had
; file open CAS here
;

;
;	  Subroutine PCMPLY
;	     Inputs  ________________________
;	     Outputs ________________________
;

C71DB:	CALL	C721D
;
	EX	AF,AF'
	CALL	GETCPU
;
	PUSH	AF
	OR	A
	LD	A,01H	; 1 
	CALL	Z,CHGCPU
;
	CALL	C6FC9
;
	EX	AF,AF'
	INC	A
	RES	7,A
	RES	2,A
	EXX	
	LD	E,A
	EXX	
	JP	M,J7233
;
J71F8:	IN	A,(0A9H)
	AND	10H	; 16 
	JR	Z,J7220
;
	LD	A,(HL)
	INC	HL
	OR	A
	JR	Z,J7225
;
	CALL	C6FBA
;
J7206:	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J71F8
;
J720B:	OR	A
J720C:	EX	AF,AF'
	POP	AF
	OR	A
	CALL	Z,CHGCPU
;
J7212:	LD	A,80H
	OUT	(0A4H),A
	LD	A,03H	; 3 
	OUT	(0A5H),A
	EX	AF,AF'
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C721D:	EX	AF,AF'
	JR	J7212
;
;	-----------------
J7220:	LD	A,02H	; 2 
J7222:	SCF	
	JR	J720C
;
;	-----------------
J7225:	DEC	BC
	LD	A,C
	OR	B
	JR	Z,J720B
;
	PUSH	BC
	LD	B,(HL)
	INC	HL
	CALL	C725A
;
	POP	BC
	JR	J7206
;
;	-----------------
J7233:	CALL	C728E
;
J7236:	IN	A,(0A9H)
	AND	10H	; 16 
	JR	Z,J7220
;
	IN	A,(98H)
	OR	A
	JR	Z,J724B
;
	CALL	C6FBA
;
J7244:	CALL	C7262
;
	JR	NC,J7236
;
	JR	J720B
;
;	-----------------
J724B:	CALL	C7262
;
	JR	C,J720B
;
	PUSH	BC
	IN	A,(98H)
	LD	B,A
	CALL	C725A
;
	POP	BC
	JR	J7244
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C725A:	LD	A,80H
	CALL	C6FBA
;
	DJNZ	C725A
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7262:	INC	HL
	LD	A,L
	OR	A
	JR	NZ,J727B
;
	OR	H
	JR	NZ,J726B
;
	INC	E
J726B:	CALL	C728E
;
	JR	J727B
;
;	-----------------
C7270:	DEFB	0FDH		; << Illegal Op Code Byte >>
;	-----------------
;
	INC	H
	DEFB	0FDH		; << Illegal Op Code Byte >>
;	-----------------
;
	DEC	H
	JR	NZ,J7278
;
	LD	(HL),A
	DEFB	0C2H		; JP NZ,xxxx, skip next instruction
J7278:	OUT	(098H),A
;
	INC	HL
J727B:	DEC	D
	LD	A,B
	OR	C
	DEC	BC
	RET	Z
;
	INC	D
	LD	A,B
	OR	C
	OR	D
	RET	NZ
;
	SCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7287:	LD	A,H
	AND	3FH	; "?"
	OR	40H	; "@"
	JR	J7291
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C728E:	LD	A,H
	AND	3FH	; "?"
J7291:	PUSH	AF
	LD	A,H
	AND	0C0H
	OR	E
	RLCA	
	RLCA	
	OUT	(99H),A
	LD	A,8EH
	OUT	(99H),A
	LD	A,L
	OUT	(99H),A
	POP	AF
	OUT	(99H),A
	RET	
;
	DEFS	072A6H-$,0


C72A6:	DEFW	J71B6
	DEFW	J71C2
	DEFW	J6E86
	DEFW	J72BA
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A
	DEFW	C475A

J72BA:	LD	A,C
	JP	OUTDLP
;
;	-----------------
;	Unused subroutine CAS device
;	-----------------


?.72BE:	LD	A,(HL)
	LD	(HL),00H
	AND	A
	RET	Z
;
	INC	SP
	INC	SP
	CP	1AH
	SCF	
	CCF	
	RET	NZ
;
	LD	(HL),A
	SCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C72CD:	LD	A,E
	CP	08H	; 8 
	JP	Z,J6E6B
;
	RET	
;
;	-----------------
;	Unused subroutine CAS device
;	-----------------


?.72D4:	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	TAPIN
;
	JR	NC,J7300
;
	JR	J72F2

;	-----------------
;	Unused subroutine CAS device
;	-----------------

?.72DE:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CALL	TAPOUT
;
	JR	NC,J72FF
;
	JR	J72F2

;	-----------------
;	Unused subroutine CAS device
;	-----------------

?.72E9:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CALL	TAPION
;
	JR	NC,J72FF
;
J72F2:	CALL	TAPIOF
;
	JP	J73B2

;	-----------------
;	Unused subroutine CAS device
;	-----------------

?.72F8:	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CALL	TAPOON
;
J72FF:	POP	AF
J7300:	POP	BC
	POP	DE
	POP	HL
	RET	

;	  Subroutine end printeroutput
;	     Inputs  ________________________
;	     Outputs ________________________

C7304:	XOR	A
	LD	(PRTFLG),A
	LD	A,(LPTPOS)
	OR	A
	RET	Z
	LD	A,0DH
	CALL	C731C
	LD	A,0AH
	CALL	C731C
	XOR	A
	LD	(LPTPOS),A
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C731C:	CALL	LPTOUT
;
	RET	NC
;
	JP	J73B2
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7323:	LD	A,(TTYPOS)
	OR	A
	RET	Z


;	  Subroutine newline to outdo
;	     Inputs  ________________________
;	     Outputs ________________________

C7328:	CALL	H.CRDO
	LD	A,0DH	; 13 
	RST	OUTDO
	LD	A,0AH	; 10 
	RST	OUTDO
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7331:	CALL	ISFLIO
;
	JR	Z,J7338
;
	XOR	A
	RET	
;
;	-----------------
J7338:	LD	A,(PRTFLG)
	OR	A
	JR	Z,J7343
;
	XOR	A
	LD	(LPTPOS),A
	RET	
;
;	-----------------
J7343:	LD	(TTYPOS),A
	RET	

;	  Subroutine INKEY$ function
;	     Inputs  ________________________
;	     Outputs ________________________

J7347:	RST	CHRGTR
;
	PUSH	HL
	CALL	CHSNS
;
	JR	Z,J735A
;
	CALL	CHGET
;
	PUSH	AF
	CALL	C6625
;
	POP	AF
	LD	E,A
	CALL	C6821
;
J735A:	LD	HL,I3FD6
	LD	(DAC+2),HL
	LD	A,03H	; 3 
	LD	(VALTYP),A
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7367:	RST	OUTDO
;
	CP	0AH	; 10 
	RET	NZ
;
	LD	A,0DH	; 13 
	RST	OUTDO
;
	CALL	C7331
;
	LD	A,0AH	; 10 
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7374:	CALL	H.DSKC
;
	LD	B,0FFH
	LD	HL,BUF
J737C:	CALL	C6C71
;
	JR	C,J7397
;
	LD	(HL),A
	CP	0DH	; 13 
	JR	Z,J7391
;
	CP	09H	; 9 
	JR	Z,J738E
;
	CP	0AH	; 10 
	JR	Z,J737C
;
J738E:	INC	HL
	DJNZ	J737C
;
J7391:	XOR	A
	LD	(HL),A
	LD	HL,BUFMIN
	RET	
;
;	-----------------
J7397:	INC	B
	JR	NZ,J7391
;
C739A:	LD	A,(NLONLY)
	AND	80H
	LD	(NLONLY),A
	CALL	C6D7B
	LD	A,(FILNAM)
	AND	A
	JP	Z,J411E
	CALL	C629A			; initialize interpreter, basic pointer at start of program
	JP	NEWSTT
;
;	-----------------
J73B2:	LD	E,13H	; 19 
	JP	J406F
;
; MSX 1 had
; MOTOR statement here
;
;	  Subroutine MOTOR statement
;	     Inputs  ________________________
;	     Outputs ________________________

C73B7:	JP	J4055
;
	DEFS	073CAH-$,0

;	  Subroutine SOUND statement
;	     Inputs  ________________________
;	     Outputs ________________________

C73CA:	CALL	GETBYT
;
	CP	0EH	; 14 
	JP	NC,C475A
;
	PUSH	AF
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	GETBYT
;
	POP	AF
	CP	07H	; 7 
	JR	NZ,J73E1
;
	RES	6,E
	SET	7,E
J73E1:	JP	WRTPSG
;
;	-----------------
I73E4:	DEFB	" "

;	  Subroutine PLAY statement
;	     Inputs  ________________________
;	     Outputs ________________________

C73E5:	CALL	H.PLAY
	PUSH	HL
	LD	HL,I752E
	LD	(MCLTAB),HL
	LD	A,00H
	LD	(PRSCNT),A
	LD	HL,-10
	ADD	HL,SP
	LD	(SAVSP),HL
	POP	HL
	PUSH	AF
J73FD:	CALL	FRMEVL			; evaluate expression
	EX	(SP),HL
	PUSH	HL
	CALL	FRESTR
	CALL	C2EDF			; load from HL
	LD	A,E
	OR	A
	JR	NZ,J7413
;
	LD	E,01H	; 1 
	LD	BC,I73E4
	LD	D,C
	LD	C,B
J7413:	POP	AF
	PUSH	AF
	CALL	GETVCP
;
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	(HL),C
	INC	HL
	LD	D,H
	LD	E,L
	LD	BC,001CH
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	BC
	POP	HL
	INC	B
	LD	A,B
	CP	03H	; 3 
	JR	NC,J7446
;
	DEC	HL
	RST	CHRGTR
;
	JR	Z,J7439
;
	PUSH	BC
	RST	SYNCHR
	DEFB	","			; check for ,
	JR	J73FD
;
;	-----------------
J7439:	LD	A,B
	LD	(VOICEN),A
	CALL	C7507
;
	INC	B
	LD	A,B
	CP	03H	; 3 
	JR	C,J7439
;
J7446:	DEC	HL
	RST	CHRGTR
;
	JP	NZ,J4055
;
	PUSH	HL
J744C:	XOR	A
J744D:	PUSH	AF
	LD	(VOICEN),A
	LD	B,A
	CALL	C7521
;
	JP	C,J74D6
;
	LD	A,B
	CALL	GETVCP
;
	LD	A,(HL)
	OR	A
	JP	Z,J74D6
;
	LD	(MCLLEN),A
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	(MCLPTR),DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	PUSH	HL
	LD	L,24H	; "$"
	CALL	GETVC2
;
	PUSH	HL
	LD	HL,(SAVSP)
	DEC	HL
	POP	BC
	DI	
	CALL	C6253
;
	POP	DE
	LD	H,B
	LD	L,C
	LD	SP,HL
	EI	
	LD	A,0FFH
	LD	(MCLFLG),A
	JP	J56A2
;
;	-----------------
J748E:	LD	A,(MCLLEN)
	OR	A
	JR	NZ,J7497
;
J7494:	CALL	C7507
;
J7497:	LD	A,(VOICEN)
	CALL	GETVCP
;
	LD	A,(MCLLEN)
	LD	(HL),A
	INC	HL
	LD	DE,(MCLPTR)
	LD	(HL),E
	INC	HL
	LD	(HL),D
	LD	HL,0
	ADD	HL,SP
	EX	DE,HL
	LD	HL,(SAVSP)
	DI	
	LD	SP,HL
	POP	BC
	POP	BC
	POP	BC
	PUSH	HL
	OR	A
	SBC	HL,DE
	JR	Z,J74D4
;
	LD	A,0F0H
	AND	L
	OR	H
	JP	NZ,C475A
;
	LD	L,24H	; "$"
	CALL	GETVC2
;
	POP	BC
	DEC	BC
	CALL	C6253
;
	POP	HL
	DEC	HL
	LD	(HL),B
	DEC	HL
	LD	(HL),C
	JR	J74D6
;
;	-----------------
J74D4:	POP	BC
	POP	BC
J74D6:	EI	
	POP	AF
	INC	A
	CP	03H	; 3 
	JP	C,J744D
;
	DI	
	LD	A,(INTFLG)
	CP	03H	; 3 
	JR	Z,J7502
;
	LD	A,(PRSCNT)
	RLCA	
	JR	C,J74F3
;
	LD	HL,PLYCNT
	INC	(HL)
	CALL	STRTMS
;
J74F3:	EI	
	LD	HL,PRSCNT
	LD	A,(HL)
	OR	80H
	LD	(HL),A
	CP	83H
	JP	NZ,J744C
;
J7500:	POP	HL
	RET	
;
;	-----------------
J7502:	CALL	GICINI
;
	JR	J7500
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7507:	LD	A,(PRSCNT)
	INC	A
	LD	(PRSCNT),A
	LD	E,0FFH
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7510:	PUSH	HL
	PUSH	BC
J7512:	PUSH	DE
	LD	A,(VOICEN)
	DI	
	CALL	PUTQ
;
	EI	
	POP	DE
	JR	Z,J7512
;
	POP	BC
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7521:	LD	A,(VOICEN)
	PUSH	BC
	DI	
	CALL	LFTQ
;
	EI	
	POP	BC
	CP	08H	; 8 
	RET	
;
;	-----------------
I752E:	DEFB	"A"
	DEFW	C763E
	DEFB	"B"
	DEFW	C763E
	DEFB	"C"
	DEFW	C763E
	DEFB	"D"
	DEFW	C763E
	DEFB	"E"
	DEFW	C763E
	DEFB	"F"
	DEFW	C763E
	DEFB	"G"
	DEFW	C763E
	DEFB	"M"+128
	DEFW	C759E
	DEFB	"V"+128
	DEFW	C7586
	DEFB	"S"+128
	DEFW	C75BE
	DEFB	"N"+128
	DEFW	C7621
	DEFB	"O"+128
	DEFW	C75EF
	DEFB	"R"+128
	DEFW	C75FC
	DEFB	"T"+128
	DEFW	C75E2
	DEFB	"L"+128
	DEFW	C75C8
	DEFB	"X"
	DEFW	C5782
	DEFB	0

I755F:	DEFB	010H,012H,014H,016H,000H,000H,002H,004H
	DEFB	006H,008H,00AH,00AH,00CH,00EH,010H

I756E:	DEFW	00D5DH
	DEFW	00C9CH
	DEFW	00BE7H
	DEFW	00B3CH
	DEFW	00A9BH
	DEFW	00A02H
	DEFW	00973H
	DEFW	008EBH
	DEFW	0086BH
	DEFW	007F2H
	DEFW	00780H
	DEFW	00714H
	
C7586:	JR	C,J758A
;
	LD	E,08H	; 8 
J758A:	LD	A,0FH	; 15 
	CP	E
	JR	C,J75DF
;
J758F:	XOR	A
	OR	D
	JR	NZ,J75DF
;
	LD	L,12H	; 18 
	CALL	GETVC2
;
	LD	A,40H	; "@"
	AND	(HL)
	OR	E
	LD	(HL),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C759E:	LD	A,E
	JR	C,J75A4
;
	CPL	
	INC	A
	LD	E,A
J75A4:	OR	D
	JR	Z,J75DF
;
	LD	L,13H	; 19 
	CALL	GETVC2
;
	PUSH	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	RST	DCOMPR
;
	POP	HL
	RET	Z
;
	LD	(HL),E
	INC	HL
	LD	(HL),D
	DEC	HL
	DEC	HL
	LD	A,40H	; "@"
	OR	(HL)
	LD	(HL),A
	RET	
;
;	-----------------
C75BE:	LD	A,E
	CP	10H	; 16 
	JR	NC,J75DF
;
	OR	10H	; 16 
	LD	E,A
	JR	J758F
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C75C8:	JR	C,J75CC
;
	LD	E,04H	; 4 
J75CC:	LD	A,E
	CP	41H	; "A"
	JR	NC,J75DF
;
	LD	L,10H	; 16 
J75D3:	CALL	GETVC2
;
	XOR	A
	OR	D
	JR	NZ,J75DF
;
	OR	E
	JR	Z,J75DF
;
	LD	(HL),A
	RET	
;
;	-----------------
J75DF:	CALL	C475A
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C75E2:	JR	C,J75E6
;
	LD	E,78H	; "x"
J75E6:	LD	A,E
	CP	20H	; " "
	JR	C,J75DF
;
	LD	L,11H	; 17 
	JR	J75D3
;
;	-----------------
C75EF:	JR	C,J75F3
;
	LD	E,04H	; 4 
J75F3:	LD	A,E
	CP	09H	; 9 
	JR	NC,J75DF
;
	LD	L,0FH	; 15 
	JR	J75D3
;
;	-----------------
C75FC:	JR	C,J7600
;
	LD	E,04H	; 4 
J7600:	XOR	A
	OR	D
	JR	NZ,J75DF
;
	OR	E
	JR	Z,J75DF
;
	CP	41H	; "A"
	JR	NC,J75DF
;
J760B:	LD	HL,0
	PUSH	HL
	LD	L,10H	; 16 
	CALL	GETVC2
;
	PUSH	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	LD	(SAVVOL),A
	LD	(HL),80H
	DEC	HL
	DEC	HL
	JR	J769C
;
;	-----------------
C7621:	JR	NC,J75DF
;
	XOR	A
	OR	D
	JR	NZ,J75DF
;
	OR	E
	JR	Z,J760B
;
	CP	61H	; "a"
	JR	NC,J75DF
;
	LD	A,E
	LD	B,00H
	LD	E,B
J7632:	SUB	0CH	; 12 
	INC	E
	JR	NC,J7632
;
	ADD	A,0CH	; 12 
	ADD	A,A
	LD	C,A
	JP	J7673
;
;	-----------------
C763E:	LD	B,C
	LD	A,C
	SUB	40H	; "@"
	ADD	A,A
	LD	C,A
	CALL	C56EE
;
	JR	Z,J7665
;
	CP	23H	; "#"
	JR	Z,J7666
;
	CP	2BH	; "+"
	JR	Z,J7666
;
	CP	2DH	; "-"
	JR	Z,J765A
;
	CALL	C570B
;
	JR	J7665
;
;	-----------------
J765A:	DEC	C
	LD	A,B
	CP	43H	; "C"
	JR	Z,J7664
;
	CP	46H	; "F"
	JR	NZ,J7665
;
J7664:	DEC	C
J7665:	DEC	C
J7666:	LD	L,0FH	; 15 
	CALL	GETVC2
;
	LD	E,(HL)
	LD	B,00H
	LD	HL,I755F
	ADD	HL,BC
	LD	C,(HL)
J7673:	LD	HL,I756E
	ADD	HL,BC
	LD	A,E
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
J767B:	DEC	A
	JR	Z,J7687
;
	SRL	D
	RR	E
	JR	J767B
;
;	-----------------
J7684:	CALL	C475A
;
J7687:	ADC	A,E
	LD	E,A
	ADC	A,D
	SUB	E
	LD	D,A
	PUSH	DE
	LD	L,10H	; 16 
	CALL	GETVC2
;
	LD	C,(HL)
	PUSH	HL
	CALL	C56EE
;
	JR	Z,J76A9
;
	CALL	C572F
;
J769C:	LD	A,40H	; "@"
	CP	E
	JR	C,J7684
;
	XOR	A
	OR	D
	JR	NZ,J7684
;
	OR	E
	JR	Z,J76A9
;
	LD	C,E
J76A9:	POP	HL
	LD	D,00H
	LD	B,D
	INC	HL
	LD	E,(HL)
	PUSH	HL
	CALL	C314A			; unsigned integer multiply
	EX	DE,HL
	CALL	C2FCB			; convert to single precision real
	CALL	C2F10			; HL = DAC
	LD	HL,I7754
	CALL	C2EBE			; DAC = (single)
	CALL	C289F			; DAC / ARG
	CALL	C2F8A			; convert DAC to integer
	LD	D,H
	LD	E,L
J76C8:	CALL	C56EE
;
	JR	Z,J76E3
;
	CP	2EH	; "."
	JR	NZ,J76E0
;
	SRL	D
	RR	E
	ADC	HL,DE
	LD	A,0E0H
	AND	H
	JR	Z,J76C8
;
	XOR	H
	LD	H,A
	JR	J76E3
;
;	-----------------
J76E0:	CALL	C570B
;
J76E3:	LD	DE,5
	RST	DCOMPR
;
	JR	C,J76EA
;
	EX	DE,HL
J76EA:	LD	BC,-9
	POP	HL
	PUSH	HL
	ADD	HL,BC
	LD	(HL),D
	INC	HL
	LD	(HL),E
	INC	HL
	LD	C,02H	; 2 
	EX	(SP),HL
	INC	HL
	LD	E,(HL)
	LD	A,E
	AND	0BFH
	LD	(HL),A
	EX	(SP),HL
	LD	A,80H
	OR	E
	LD	(HL),A
	INC	HL
	INC	C
	EX	(SP),HL
	LD	A,E
	AND	40H	; "@"
	JR	Z,J7716
;
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	POP	HL
	LD	(HL),D
	INC	HL
	LD	(HL),E
	INC	HL
	INC	C
	INC	C
	DEFB	0FEH			; CP xx, skip next instruction
J7716:	POP	HL
	POP	DE
	LD	A,D
	OR	E
	JR	Z,J7721
;
	LD	(HL),D
	INC	HL
	LD	(HL),E
	INC	C
	INC	C
J7721:	LD	L,07H	; 7 
	CALL	GETVC2
;
	LD	(HL),C
	LD	A,C
	SUB	02H	; 2 
	RRCA	
	RRCA	
	RRCA	
	INC	HL
	OR	(HL)
	LD	(HL),A
	DEC	HL
	LD	A,D
	OR	E
	JR	NZ,J7741
;
	PUSH	HL
	LD	A,(SAVVOL)
	OR	80H
	LD	BC,11
	ADD	HL,BC
	LD	(HL),A
	POP	HL
J7741:	POP	DE
	LD	B,(HL)
	INC	HL
J7744:	LD	E,(HL)
	INC	HL
	CALL	C7510
;
	DJNZ	J7744
;
	CALL	C7521
;
	JP	C,J748E
;
	JP	J56A2
;
;	-----------------



	IF INTHZ EQ 60

I7754:	DEFB	040H,000H,045H,014H		; 14400

	ELSE

I7754:	DEFB	000H,000H,045H,012H		; 12000

	ENDIF


;	  Subroutine PUT statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7758:	LD	B,80H
	DEFB	011H		; skip next instruction

;	  Subroutine GET statement
;	     Inputs  ________________________
;	     Outputs ________________________

C775B:	LD	B,00H
	CP	0C7H			; SPRITE token follows ?
;
; MSX 1 had
; 	jp	z,A7AAF
;
; change because of extended PUT/GET statement
;
	JP	J7993
;
;	-----------------
J7762:	LD	A,B
	JP	J6C35

;	  Subroutine LOCATE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7766:	LD	DE,(CSRY)
	PUSH	DE
	CP	2CH	; ","
	JR	Z,J777A
;
	CALL	GETBYT
;
	INC	A
	POP	DE
	LD	D,A
	PUSH	DE
	DEC	HL
	RST	CHRGTR
;
	JR	Z,J779F
;
J777A:	RST	SYNCHR
	DEFB	","			; check for ,
	CP	2CH	; ","
	JR	Z,J778B
;
	CALL	GETBYT
;
	INC	A
	POP	DE
	LD	E,A
	PUSH	DE
	DEC	HL
	RST	CHRGTR
;
	JR	Z,J779F
;
J778B:	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	GETBYT
;
	AND	A
	LD	A,79H	; "y"
	JR	NZ,J7796
;
	DEC	A
J7796:	PUSH	AF
	LD	A,1BH
	RST	OUTDO
;
	POP	AF
	RST	OUTDO
;
	LD	A,35H	; "5"
	RST	OUTDO
;
J779F:	EX	(SP),HL
	CALL	POSIT
;
	POP	HL
	RET	
;
;	-----------------
J77A5:	PUSH	HL
	LD	HL,TRPTBL+30
	JR	J77CF
;
;	-----------------
J77AB:	PUSH	HL
	LD	HL,TRPTBL+33
	JR	J77CF
;
;	-----------------
J77B1:	RST	SYNCHR
	DEFB	"E"
	RST	SYNCHR
	DEFB	"R"
	RST	SYNCHR
	DEFB	0FFH
	RST	SYNCHR
	DEFB	094H			; check for ERVAL
	PUSH	HL
	LD	HL,TRPTBL+51
	JR	J77CF
;
;	-----------------
J77BF:	LD	A,4			; max is 4 
	CALL	C7C08
;
	DEC	HL
	RST	CHRGTR
;
	PUSH	HL
	LD	D,00H
	LD	HL,TRPTBL+36
	ADD	HL,DE
	ADD	HL,DE
	ADD	HL,DE
J77CF:	CALL	C77FE
;
	JR	J77E2
;
;	-----------------
J77D4:	CALL	GETBYT
;
	DEC	A
	CP	0AH	; 10 
	JP	NC,C475A
;
	LD	A,(HL)
	PUSH	HL
	CALL	C77E8
;
J77E2:	POP	HL
	POP	AF
	RST	CHRGTR
;
	JP	J4612
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C77E8:	LD	D,00H
	LD	HL,FNKFLG-1
	ADD	HL,DE
	PUSH	HL
	LD	HL,TRPTBL-3
	ADD	HL,DE
	ADD	HL,DE
	ADD	HL,DE
	CALL	C77FE
;
	LD	A,(HL)
	AND	01H	; 1 
	POP	HL
	LD	(HL),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C77FE:	CP	95H
	JP	Z,J631B
;
	CP	0EBH
	JP	Z,J632B
;
	CP	90H
	JP	Z,C6331
;
	JP	J4055
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7810:	CALL	H.ONGO
;
	LD	BC,10
	CP	0CCH
	RET	Z
;
	LD	BC,0A01H
	CP	90H
	RET	Z
;
	INC	B
	CP	0C7H
	RET	Z
;
	CP	0FFH
	RET	C
;
	PUSH	HL
	RST	CHRGTR
;
	CP	0A3H
	JR	Z,J7833
;
	CP	85H
	JR	Z,J7838
;
J7830:	POP	HL
	SCF	
	RET	
;
;	-----------------
J7833:	POP	BC
	LD	BC,0C05H
	RET	
;
;	-----------------
J7838:	RST	CHRGTR
;
	CP	45H	; "E"
	JR	NZ,J7830
;
	POP	BC
	RST	CHRGTR
;
	RST	SYNCHR
	DEFB	"R"
	RST	SYNCHR
	DEFB	0FFH
	RST	SYNCHR
	DEFB	094H
	RST	SYNCHR
	DEFB	0EFH			; check for RVAL=
	CALL	FRMQNT
;
	LD	A,D
	OR	E
	JP	Z,C475A
;
	EX	DE,HL
	LD	(INTVAL),HL
	LD	(INTCNT),HL
	EX	DE,HL
	LD	BC,1101H
	DEC	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C785C:	PUSH	HL
	LD	B,A
	ADD	A,A
	ADD	A,B
	LD	L,A
	LD	H,00H
	LD	BC,TRPTBL+1
	ADD	HL,BC
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	HL
	RET	

;	  Subroutine KEY statement
;	     Inputs  ________________________
;	     Outputs ________________________

C786C:	CP	93H
	JR	NZ,J78AE
;
	RST	CHRGTR
;
	PUSH	HL
	LD	HL,FNKSTR
	LD	C,0AH	; 10 
J7877:	LD	B,10H	; 16 
J7879:	LD	A,(HL)
	INC	HL
	CALL	CNVCHR
;
	JR	C,J7891
;
	DEC	B
	JR	Z,J789E
;
	LD	A,(HL)
	INC	HL
	LD	E,A
	CALL	CNVCHR
;
	JR	Z,J7891
;
	LD	A,01H	; 1 
	RST	OUTDO
;
	LD	A,E
	JR	J789B
;
;	-----------------
J7891:	CP	7FH
	JR	Z,J7899
;
	CP	20H	; " "
	JR	NC,J789B
;
J7899:	LD	A,20H	; " "
J789B:	RST	OUTDO
;
	DJNZ	J7879
;
J789E:	CALL	C7328			; newline to outdo
;
	DEC	C
	JR	NZ,J7877
;
	POP	HL
	RET	
;
;	-----------------
J78A6:	RST	CHRGTR
;
	JP	DSPFNK
;
;	-----------------
J78AA:	RST	CHRGTR
;
	JP	ERAFNK
;
;	-----------------
J78AE:	CP	28H	; "("
	JP	Z,J77D4
;
	CP	95H
	JR	Z,J78A6
;
	CP	0EBH
	JR	Z,J78AA
;
	CALL	GETBYT
;
	DEC	A
	CP	0AH	; 10 
	JP	NC,C475A
;
	EX	DE,HL
	LD	L,A
	LD	H,00H
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,FNKSTR
	ADD	HL,BC
	PUSH	HL
	EX	DE,HL
	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	FRMEVL			; evaluate expression
;
	PUSH	HL
	CALL	FRESTR
;
	LD	B,(HL)
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	POP	HL
	EX	(SP),HL
	LD	C,0FH	; 15 
	LD	A,B
	AND	A
	JR	Z,J78F5
;
J78E8:	LD	A,(DE)
	AND	A
	JP	Z,C475A
;
	LD	(HL),A
	INC	DE
	INC	HL
	DEC	C
	JR	Z,J78FA
;
	DJNZ	J78E8
;
J78F5:	LD	(HL),B
	INC	HL
	DEC	C
	JR	NZ,J78F5
;
J78FA:	LD	(HL),C
	CALL	FNKSB
;
	POP	HL
	RET	

;	  Subroutine TIME function
;	     Inputs  ________________________
;	     Outputs ________________________

J7900:	RST	CHRGTR
;
	PUSH	HL
	LD	HL,(JIFFY)
	CALL	C3236
;
	POP	HL
	RET	

;	  Subroutine CSRLIN function
;	     Inputs  ________________________
;	     Outputs ________________________

J790A:	RST	CHRGTR
;
	PUSH	HL
	LD	A,(CSRY)
	JR	J7932

;	  Subroutine TIME statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7911:	RST	SYNCHR
	DEFB	0EFH			; check for =
	CALL	FRMQNT
;
	LD	(JIFFY),DE
	RET	

;	  Subroutine PLAY function
;	     Inputs  ________________________
;	     Outputs ________________________

J791B:	RST	CHRGTR
;
	LD	A,3			; max is 3
	CALL	C7C08
;
	PUSH	HL
	LD	A,(MUSICF)
	DEC	E
	JP	M,J7938
;
J7929:	RRCA	
	DEC	E
	JP	P,J7929
;
	LD	A,00H
	JR	NC,J7933
;
J7932:	DEC	A
J7933:	CALL	C2E9A
;
	POP	HL
	RET	
;
;	-----------------
J7938:	AND	07H	; 7 
	JR	Z,J7933
;
	LD	A,0FFH
	JR	J7933

;	  Subroutine STICK function
;	     Inputs  ________________________
;	     Outputs ________________________

C7940:	CALL	C521F
;
	CP	03H	; 3 
	JR	NC,J7951
;
	CALL	GTSTCK
;
	JR	J7966

;	  Subroutine TRIG function
;	     Inputs  ________________________
;	     Outputs ________________________

C794C:	CALL	C521F
;
	CP	05H	; 5 
J7951:	JP	NC,C475A
;
	CALL	GTTRIG
;
J7957:	JP	C2E9A

;	  Subroutine PDL function
;	     Inputs  ________________________
;	     Outputs ________________________


C795A:	CALL	C521F
;
	DEC	A
	CP	0CH	; 12 
	JR	NC,J7951
;
	INC	A
	CALL	GTPDL
;
J7966:	JP	C4FCF

;	  Subroutine PAD function
;	     Inputs  ________________________
;	     Outputs ________________________

C7969:	CALL	C521F
;
;
; MSX 1 had
; 	CP	008H
;
; change because of expanded PAD function
;
	CP	14H	; 20
;
; end of change
;
	JR	NC,J7951
;
	PUSH	AF
	CALL	GTPAD
;
	LD	B,A
	POP	AF
	CALL	C7B3E
;
	CP	02H
	LD	A,B
	JR	C,J7966
;
	JR	J7957		; 0 or -1
;
;	  Subroutine COLOR statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7980:	LD	IX,S.COLOR
	JP	EXTROM
;
;	unused space color statement used for patch code
;

;	-----------------
;	Patch for stoping vdp command in error handling routine
;	-----------------

C7987:	LD	(NLONLY),A
	DI	
	OUT	(99H),A
	LD	A,0AEH
	OUT	(99H),A			; cancel any vdp command in progress
	EI	
	RET	
;
;	-----------------
;	Patch for handling extended PUT/GET statement
;	-----------------

J7993:	JP	Z,J7AAF			; SPRITE token follows,
;
	LD	IX,S.GETPUT
	CALL	EXTROM
;
	RET	NC			; handled by subrom, quit
;
	JP	J7762			; back to MSX 1 style PUT/GET
;
;	-----------------
;	Patch for correcting a bug in
;	-----------------

C79A1:	CALL	C4257
	INC	HL
	LD	(VARTAB),HL
	RET	
;
;	  Subroutine CLS statement
;	     Inputs  ________________________
;	     Outputs ________________________
;	     Comment updated CLS statement for use with kanji

C79A9:	RET	NZ
;
	LD	A,(SCRMOD)
	CP	02H			; text mode ?
	JR	NC,J79BE		; nope, just cls
;
	PUSH	HL
	XOR	A
	LD	DE,1100H
	CALL	EXTBIO			; In kanji mode ?
;
	POP	HL
	AND	A
	JP	NZ,C475A		; yep,
;
J79BE:	XOR	A
	JP	CLS
;
;	-----------------
;	Patch for calling init,statement and device routines in page 2 or 3
;	-----------------

C79C2:	EX	AF,AF'
	BIT	7,D			; page 2 or 3 ?
	JP	NZ,J7BD2		; yep, use with temp stack calslt
;
	EX	AF,AF'
	JP	CALSLT

;	  Subroutine SCREEN statement
;	     Inputs  ________________________
;	     Outputs ________________________

C79CC:	CALL	H.SCRE
;
	LD	IX,S.SCREEN
	JP	EXTROM

;
;	unused space color statement used for patch code
;
;
;	-----------------
;	patch for handling pset statement in MSX2 screens
;	-----------------

J79D6:	CALL	CHKNEW
;
	JR	C,J79E2
;
	LD	IX,S.PSET
	JP	EXTROM
;
;	-----------------
J79E2:	PUSH	AF
	CALL	C57AB
;
	JP	J57F1

;
;	-----------------
;	patch for handling line statement in MSX2 screens
;	-----------------

J79E9:	CALL	CHKNEW
;
	JR	C,J79F5
;
	LD	IX,S.GLINE
	JP	EXTROM
;
;	-----------------
J79F5:	CALL	C579C
;
	JP	J58AA
;
;	-----------------
;	patch for handling paint statement in MSX2 screens
;	-----------------

J79FB:	CALL	CHKNEW
;
	JR	C,J7A07
;
	LD	IX,S.PAINT
	JP	EXTROM
;
;	-----------------
J7A07:	CALL	C579C
;
	JP	J59C8
;
;	-----------------
;	patch for handling line subroutine in MSX2 screens
;	-----------------

J7A0D:	CALL	CHKNEW
;
	JR	C,J7A19
;
	LD	IX,S.DOGRPH
	JP	EXTROM
;
;	-----------------
J7A19:	CALL	SCALXY
;
	JP	J5942
;
;	-----------------
;	patch for bug in clear
;	-----------------

J7A1F:	JP	P,J64E5
;
	DEC	HL
	JP	J64EA

	DEFS	07A48H-$,0

;	  Subroutine SPRITE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7A48:	CP	24H	; "$"
	JP	NZ,J77AB
;
	LD	A,(SCRMOD)
	AND	A
	JP	Z,C475A
;
	CALL	C7AA0
;
	PUSH	DE
	CALL	C4C5F			; evaluate = expression
;
	EX	(SP),HL
	PUSH	HL
	CALL	FRESTR
;
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	CALL	GSPSIZ
;
	LD	C,A
	LD	B,00H
	DEC	HL
	DEC	HL
	DEC	A
	CP	(HL)
	LD	A,(HL)
	JR	C,J7A7D
;
	POP	HL
	PUSH	HL
	PUSH	AF
	XOR	A
	CALL	BIGFIL
;
	POP	AF
	AND	A
	LD	C,A
	LD	B,00H
J7A7D:	EX	DE,HL
	POP	DE
	CALL	NZ,LDIRVM
;
	POP	HL
	RET	

;	  Subroutine SPRITE function
;	     Inputs  ________________________
;	     Outputs ________________________

J7A84:	CALL	C7A9F
;
	PUSH	HL
	PUSH	DE
	CALL	GSPSIZ
;
	LD	C,A
	LD	B,00H
	PUSH	BC
	CALL	C6627
;
	LD	HL,(DSCTMP+1)
	EX	DE,HL
	POP	BC
	POP	HL
	CALL	LDIRMV
;
	JP	J6654
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7A9F:	RST	CHRGTR
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7AA0:	RST	SYNCHR
	DEFB	"$"			; check for $
	LD	A,255			; max is 255
	CALL	C7C08
;
	PUSH	HL
	LD	A,E
	CALL	CALPAT
;
	EX	DE,HL
	POP	HL
	RET	
;
;	-----------------
J7AAF:	DEC	B			; PUT ?
	JP	M,C475A			; illegal function call
;
; MSX 1 had
;
;	ld	a,(scrmod)
;
	JP	J7CF4
; end of change
;
;	-----------------
J7AB6:	AND	A
	JP	Z,C475A
;
	RST	CHRGTR
;
	CALL	GETBYT
;
	CP	20H	; " "
	JP	NC,C475A
;
	PUSH	HL
	CALL	CALATR
;
	EX	(SP),HL
	RST	SYNCHR
	DEFB	","			; check for ,
	CP	2CH	; ","
	JR	Z,J7AF9
;
	CALL	C579C
;
	EX	(SP),HL
	LD	A,E
	CALL	WRTVRM
;
	LD	A,B
	ADD	A,A
	LD	A,C
	LD	B,00H
	JR	NC,J7AE1
;
	ADD	A,20H	; " "
	LD	B,80H
J7AE1:	INC	HL
	CALL	WRTVRM
;
	INC	HL
	INC	HL
	CALL	RDVRM
;
	AND	0FH	; 15 
	OR	B
	CALL	WRTVRM
;
	DEC	HL
	DEC	HL
	DEC	HL
	EX	(SP),HL
	DEC	HL
	RST	CHRGTR
;
	POP	BC
	RET	Z
;
	PUSH	BC
J7AF9:	RST	SYNCHR
	DEFB	","			; check for ,
	CP	2CH	; ","
	JR	Z,J7B1D
;
	CALL	GETBYT
;
	CP	10H	; 16 
	JP	NC,C475A
;
	EX	(SP),HL
	INC	HL
	INC	HL
	INC	HL
	CALL	RDVRM
;
	AND	80H
	OR	E
	CALL	WRTVRM
;
	DEC	HL
	DEC	HL
	DEC	HL
	EX	(SP),HL
	DEC	HL
	RST	CHRGTR
;
	POP	BC
	RET	Z
;
	PUSH	BC
J7B1D:	RST	SYNCHR
	DEFB	","			; check for ,
	CALL	GETBYT
;
	CALL	GSPSIZ
;
	LD	A,E
	JR	NC,J7B2F
;
	CP	40H	; "@"
	JP	NC,C475A
;
	ADD	A,A
	ADD	A,A
J7B2F:	EX	(SP),HL
	INC	HL
	INC	HL
	CALL	WRTVRM
;
	POP	HL
	RET	

;	  Subroutine VDP statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7B37:	LD	IX,S.VDP
	JP	EXTROM
;
;	-----------------
;	patch ?
;	-----------------

C7B3E:	ADD	A,04H	; 4 
	AND	0F3H
	DEC	A
	RET	

	DEFS	07B47H-$,0

;	  Subroutine VDP function
;	     Inputs  ________________________
;	     Outputs ________________________

J7B47:	LD	IX,S.VDPF
	JP	EXTROM

	DEFS	07B5AH-$,0

;	  Subroutine BASE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7B5A:	LD	IX,S.BASE
	JP	EXTROM

; MSX1 had BASE statement from 07B5AH - 07BCAH
; remaining space used otherwise

;
; -----------------
; part of the system init
; MSX1 had this in page 0
; with MSX2 moved here because of space left in page 0
; -----------------

C7B61:	LD	HL,0
	ADD	HL,SP
	LD	A,H
	OUT	(0A8H),A
	LD	A,L
	LD	(D.FFFF),A
	LD	A,C
	LD	BC,0C77H
	LD	DE,VARWRK+1
	LD	HL,VARWRK
	LD	(HL),00H
	LDIR	
	LD	C,A
	LD	B,04H	; 4 
	LD	HL,EXPTBL+3
J7B80:	RR	C
	SBC	A,A
	AND	80H
	LD	(HL),A
	DEC	HL
	DJNZ	J7B80
;
	IN	A,(0A8H)
	LD	C,A
	XOR	A
	OUT	(0A8H),A
	LD	A,(D.FFFF)
	CPL	
	LD	L,A
	LD	A,40H	; "@"
	OUT	(0A8H),A
	LD	A,(D.FFFF)
	CPL	
	LD	H,A
	LD	A,80H
	OUT	(0A8H),A
	LD	A,(D.FFFF)
	CPL	
	LD	E,A
	LD	A,0C0H
	OUT	(0A8H),A
	LD	A,(D.FFFF)
	CPL	
	LD	D,A
	LD	A,C
	OUT	(0A8H),A
	LD	(SLTTBL+0),HL
	EX	DE,HL
	LD	(SLTTBL+2),HL
	IM	1
;
; MSX 2 had
;
;	JP	C7C76
;
	JP	J1A31			; patch for initialize midi

	DEFS	07BCBH-$,0		; remaining space


;	  Subroutine BASE function
;	     Inputs  ________________________
;	     Outputs ________________________

J7BCB:	LD	IX,S.BASEF
	JP	EXTROM

; MSX1 had BASE function from 07BCBH - 07BE1H
; remaining space used otherwise

;
; -----------------
; subroutine for calling init,statement or device of extension rom in page 2 or 3
; -----------------

J7BD2:	EX	AF,AF'
	LD	(BUF+256),SP
	LD	SP,BUF+256
	CALL	CALSLT
	LD	SP,(BUF+256)
	RET	

;	  Subroutine VPOKE statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7BE2:	LD	IX,S.VPOKE
	JR	J7BF2

; MSX1 had VPOKE statement from 07BE2H - 07BF4H
; remaining space used otherwise

;
; -----------------
; prompt subroutine
; -----------------

C7BE8:	LD	IX,S.PROMPT
	JR	J7BF2
;
; -----------------
; init workscreen subroutine
; -----------------

C7BEE:	LD	IX,S.SETSCR
J7BF2:	JP	EXTROM

;	  Subroutine VPEEK function
;	     Inputs  ________________________
;	     Outputs ________________________

C7BF5:	LD	IX,S.VPEEK
	JP	EXTROM

; MSX1 had VPEEK statement from 07BF5H - 07C07H
; remaining space not used

	DEFS	07C08H-$,0
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7C08:	PUSH	AF
	RST	SYNCHR
	DEFB	"("			; check for (
	CALL	GETBYT
	POP	AF
	CP	E
	JR	C,J7C73
	RST	SYNCHR
	DEFB	")"			; check for )
	LD	A,E
	RET	

;	  Subroutine DSKO$ statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C16:	CALL	H.DSKO
	JR	J7C73

;	  Subroutine SET statement
;	     Inputs  ________________________
;	     Outputs ________________________

; MSX1 had
;
;	CALL	H.SETS
;	JR	J7C73

C7C1B:	JP	J7CE3			; patched for MSX2 SET statement

	DEFS	07C20H-$,0		; remaining space not used

;	  Subroutine NAME statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C20:	CALL	H.NAME
	JR	J7C73

;	  Subroutine KILL statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C25:	CALL	H.KILL
	JR	J7C73

;	  Subroutine IPL statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C2A:	CALL	H.IPL
	JR	J7C73

;	  Subroutine COPY statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C2F:	JP	J7D03

	DEFS	07C34H-$,0

;	  Subroutine CMD statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C34:	CALL	H.CMD
	JR	J7C73

;	  Subroutine DSKF function
;	     Inputs  ________________________
;	     Outputs ________________________

C7C39:	CALL	H.DSKF
	JR	J7C73

;	  Subroutine DSKI$ function
;	     Inputs  ________________________
;	     Outputs ________________________

J7C3E:	CALL	H.DSKI
	JR	J7C73

;	  Subroutine ATTR$ function
;	     Inputs  ________________________
;	     Outputs ________________________

J7C43:	CALL	H.ATTR
	JR	J7C73

;	  Subroutine LSET statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C48:	CALL	H.LSET
	JR	J7C73

;	  Subroutine RSET statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C4D:	CALL	H.RSET
	JR	J7C73

;	  Subroutine FIELD statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7C52:	CALL	H.FIEL
	JR	J7C73

;	  Subroutine MKI$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C7C57:	CALL	H.MKI$
	JR	J7C73

;	  Subroutine MKS$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C7C5C:	CALL	H.MKS$
	JR	J7C73

;	  Subroutine MKD$ function
;	     Inputs  ________________________
;	     Outputs ________________________

C7C61:	CALL	H.MKD$
	JR	J7C73

;	  Subroutine CVI function
;	     Inputs  ________________________
;	     Outputs ________________________

C7C66:	CALL	H.CVI
	JR	J7C73

;	  Subroutine CVS function
;	     Inputs  ________________________
;	     Outputs ________________________

C7C6B:	CALL	H.CVS
	JR	J7C73

;	  Subroutine CVD function
;	     Inputs  ________________________
;	     Outputs ________________________

C7C70:	CALL	H.CVD
J7C73:	JP	C475A

;
; -----------------
; init msx basic
; -----------------

C7C76:	LD	SP,VARWRK-10
	LD	BC,00230H-1
	LD	DE,H.KEYI+1
	LD	HL,H.KEYI
	LD	(HL),0C9H
	LDIR	
	LD	HL,VARWRK
	LD	(HIMEM),HL
	CALL	C7D5D			; search lowest BASIC RAM adres
	LD	(BOTTOM),HL		; save in BOTTOM
	LD	BC,00090H
	LD	DE,VARWRK
	LD	HL,I7F27
	LDIR				; initialize workarea
	CALL	INIFNK			; initialize functionkeys
	XOR	A
	LD	(ENDBUF),A
	LD	(NLONLY),A
	LD	A,","
	LD	(BUFMIN),A
	LD	A,":"
	LD	(KBFMIN),A
	LD	HL,(CGTABL)
	LD	(CGPNT+1),HL
	LD	HL,PRMSTK
	LD	(PRMPRV),HL
	LD	(STKTOP),HL
	LD	BC,200
	ADD	HL,BC
	LD	(MEMSIZ),HL
	LD	A,1
	LD	(VARTAB+1),A
	CALL	C7E6B			; allocate 1 io buffer
	CALL	C62E5
	LD	HL,(BOTTOM)
	XOR	A
	LD	(HL),A
	INC	HL
	LD	(TXTTAB),HL
	CALL	C6287			; new
	CALL	INITIO
	JR	J7D14			; jump over patch code

; MSX1 code (07CE1H - 07D14H) does:
;	startupscreen
;	wait 3 seconds
; this code + call to 07D75H is in CHKSLZ
; space used otherwise

;
; -----------------
; patch for extended SET statement
; -----------------

J7CE3:	CALL	H.SETS			; hook for SET statement expansion
	LD	IX,S.SETS
	JP	EXTROM			; MSX2 and above SET statements
;
; -----------------
; Initialize screen for basic start
; -----------------

C7CED:	LD	IX,S.SDFSCR
	JP	EXTROM
;
; -----------------
; patch for PUT SPRITE statement handler, because of new spritesmodes
; -----------------

J7CF4:	LD	A,(SCRMOD)
	CP	04H
	JP	C,J7AB6			; MSX 1 style sprites, use classic
	LD	IX,S.PUTSPRT
	JP	EXTROM
;
; -----------------
; patch for extended COPY statement
; -----------------

J7D03:	LD	IX,S.SCOPY
	CALL	EXTROM
	RET	NC			; handled by subrom, quit
	CALL	H.COPY
	JP	C475A

	DEFS	07D14H-$,0		; remaining space not used


J7D14:	CALL	CHKSLZ			; check subrom and do extension ROMs

; MSX1 had
;
;	CALL	C7D75

;
; Entrypoint used by diskrom
; diskrom handles extension roms by its self, so continues here
;
J7D17:	LD	HL,(BOTTOM)
	XOR	A
	LD	(HL),A
	INC	HL
	LD	(TXTTAB),HL
	CALL	C6287			; new
	CALL	C7D29
	JP	J411F
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7D29:	JR	J7D31			; skip over unused space

; MSX1 code (07D29H - 07D30H) does:
;	function keys on
;	screen 0
; functional code already done in CHKSLZ



;
;	unused
;
	DEFS	07D2FH-$,0


; orginally with MSX1, 07D2EH had
;	CALL	INITXT
; 07CEDH is replacement for INITXT
; Diskrom read adres from 07D2FH for initializing screen



D7D2F:	DEFW	C7CED
;
; Entrypoint
;
J7D31:

; MSX1 code (07D31H - 07D3EH) does:
;	print MSX Basic
;	print version

	CALL	C7BEE			; init workscreen
	LD	HL,SLTWRK+0
	LD	A,(HL)
	AND	20H
	LD	(HL),A			; ramdisk invalid, but flag ramdisk disabled remains unchanged
	NOP
	NOP				; align to MSX1 code


	LD	HL,J7EFD
	CALL	C6678			; print copyright message
	LD	HL,(VARTAB)
	EX	DE,HL
	LD	HL,(STKTOP)
	LD	A,L
	SUB	E
	LD	L,A
	LD	A,H
	SBC	A,D
	LD	H,A
	LD	BC,0FFF2H
	ADD	HL,BC
	CALL	C3412
	LD	HL,I7F1B
	JP	C6678			; print bytes free message


;	  Subroutine search for start of ram 0EFFFH - 08000H area (downwards)
;	     Inputs  ________________________
;	     Outputs ________________________

C7D5D:	LD	HL,0EF00H
J7D60:	LD	A,(HL)
	CPL	
	LD	(HL),A
	CP	(HL)
	CPL	
	LD	(HL),A
	JR	NZ,J7D71		; no RAM, quit search
	INC	L
	JR	NZ,J7D60
	LD	A,H
	DEC	A
	RET	P
	LD	H,A
	JR	J7D60

J7D71:	LD	L,00H
	INC	H
	RET	
;
;	-----------------
;	extension ROM handler
;	-----------------

C7D75:	DI	
	LD	C,00H
	LD	DE,EXPTBL
	LD	HL,SLTATR
J7D7E:	LD	A,(DE)
	OR	C
	LD	C,A
	PUSH	DE
J7D82:	INC	HL
	PUSH	HL
	LD	HL,04000H
J7D87:	CALL	C7E1A
	PUSH	HL
	LD	HL,04241H
	RST	DCOMPR
	POP	HL			; expansion ROM ?
	LD	B,00H
	JR	NZ,J7DBE		; nope, next
	CALL	C7E1A			; read INIT entry
	PUSH	HL
	PUSH	BC
	PUSH	DE
	POP	IX
	LD	A,C
	PUSH	AF
	POP	IY
	CALL	NZ,C7FF2		; call this INIT after VR
	POP	BC
	POP	HL
	CALL	C7E1A			; read STATEMENT entry
	ADD	A,0FFH
	RR	B
	CALL	C7E1A			; read DEVICE entry
	ADD	A,0FFH
	RR	B
	CALL	C7E1A			; read BAS entry
	ADD	A,0FFH
	RR	B
	LD	DE,-8
	ADD	HL,DE
J7DBE:	EX	(SP),HL
	LD	(HL),B			; adjust SLTATR
	INC	HL
	EX	(SP),HL
	LD	DE,04000H-2
	ADD	HL,DE			; next page
	LD	A,H
	CP	0C0H
	JR	C,J7D87			; we are doing page 1 and 2
	POP	HL
	INC	HL
	LD	A,C
	AND	A
	LD	DE,000CH
	JP	P,J7DE0			; primary slot, next primary
	ADD	A,04H
	LD	C,A
	CP	90H
	JR	C,J7D82			; next secundair slot
	AND	03H
	LD	C,A
	DEFB	03EH			; skip next instruction
J7DE0:	ADD	HL,DE
	POP	DE
	INC	DE
	INC	C
	LD	A,C
	CP	04H
	JR	C,J7D7E			; next primary
	LD	HL,SLTATR
	LD	B,40H
J7DEE:	LD	A,(HL)
	ADD	A,A
	JR	C,J7DF6			; extension ROM has BAS entry, run it
	INC	HL
	DJNZ	J7DEE
	RET	

;	  Subroutine start basic program in extension ROM
;	     Inputs  ________________________
;	     Outputs ________________________

J7DF6:	CALL	C7E2A			; calculate devicecode
	CALL	ENASLT			; enable slot on page 2
	LD	HL,(VARTAB)
	LD	DE,0C000H
	RST	DCOMPR
	JR	NC,J7E09		; VARTAB is already in page 3, leave it alone
	EX	DE,HL
	LD	(VARTAB),HL		; VARTAB = 0C000H for
J7E09:	LD	HL,(08008H)
	INC	HL
	LD	(TXTTAB),HL		; start of basiccode
	LD	A,H
	LD	(BASROM),A		; flag execution of basic program in ROM (cannot be aborted)

;
; Entrypoint used by diskrom to start extension ROM with basic program
;

C7E14:	CALL	C629A			; initialize interpreter, basic pointer at start of program
	JP	NEWSTT			; start executing

;	  Subroutine read word from extension ROM
;	     Inputs  ________________________
;	     Outputs ________________________

C7E1A:	CALL	C7E1E
	LD	E,D
C7E1E:	LD	A,C
	PUSH	BC
	PUSH	DE
	CALL	RDSLT
	POP	DE
	POP	BC
	LD	D,A
	OR	E
	INC	HL
	RET	

;	  Subroutine calculate devicecode
;	     Inputs  ________________________
;	     Outputs ________________________

C7E2A:	LD	A,40H
	SUB	B

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C7E2D:	LD	B,A
	LD	H,0
	RRA	
	RR	H
	RRA	
	RR	H
	RRA	
	RRA	
	AND	03H
	LD	C,A
	LD	A,B
	LD	B,0
	PUSH	HL
	LD	HL,EXPTBL
	ADD	HL,BC
	AND	0CH
	OR	C
	LD	C,A
	LD	A,(HL)
	POP	HL
	OR	C
	RET	

;	  Subroutine MAX statement
;	     Inputs  ________________________
;	     Outputs ________________________

C7E4B:	RST	SYNCHR
	DEFB	0B7H
	RST	SYNCHR
	DEFB	0EFH			; check for FILES=
	CALL	GETBYT
	JP	NZ,J4055
	CP	10H	; 16 
	JP	NC,C475A
	LD	(TEMP),HL
	PUSH	AF
	CALL	C6C1C			; close all io channels
	POP	AF
	CALL	C7E6B			; allocate io buffers
	CALL	C62A7			; initialize interpreter, basic pointer from TEMP
	JP	NEWSTT			; continue executing

;	  Subroutine allocate io buffers
;	     Inputs  A = number of io buffers
;	     Outputs ________________________

C7E6B:	PUSH	AF
	LD	HL,(HIMEM)
	LD	DE,-267
J7E72:	ADD	HL,DE
	DEC	A
	JP	P,J7E72
	EX	DE,HL
	LD	HL,(STKTOP)
	LD	B,H
	LD	C,L
	LD	HL,(MEMSIZ)
	LD	A,L
	SUB	C
	LD	L,A
	LD	A,H
	SBC	A,B
	LD	H,A
	POP	AF
	PUSH	HL
	PUSH	AF
	LD	BC,140
	ADD	HL,BC
	LD	B,H
	LD	C,L
	LD	HL,(VARTAB)
	ADD	HL,BC
	RST	DCOMPR
	JP	NC,J6275
	POP	AF
	LD	(MAXFIL),A
	LD	L,E
	LD	H,D
	LD	(FILTAB),HL
	DEC	HL
	DEC	HL
	LD	(MEMSIZ),HL
	POP	BC
	LD	A,L
	SUB	C
	LD	L,A
	LD	A,H
	SBC	A,B
	LD	H,A
	LD	(STKTOP),HL
	DEC	HL
	DEC	HL
	POP	BC
	LD	SP,HL
	PUSH	BC
	LD	A,(MAXFIL)
	LD	L,A
	INC	L
	LD	H,00H
	ADD	HL,HL
	ADD	HL,DE
	EX	DE,HL
	PUSH	DE
	LD	BC,267-2
J7EC2:	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	EX	DE,HL
	LD	(HL),00H
	ADD	HL,BC
	EX	DE,HL
	DEC	A
	JP	P,J7EC2
	POP	HL
	LD	BC,9
	ADD	HL,BC
	LD	(NULBUF),HL
	RET	
;
;	-----------------
?.7ED8:	DEFB	"MSX  system"
	DEFB	0

?.7EE4:	DEFB	"version 4.1",13,10
	DEFB	0

?.7EF2:	DEFB	"MSX BASIC "
	DEFB	0
;
J7EFD:	DEFB	"Copyright 1990 by Microsoft",13,10
	DEFB	0

I7F1B:	DEFB	" Bytes free"
	DEFB	0


;
; Initial Workarea variables
;


I7F27:	OUT	(0A8H),A
	LD	E,(HL)
	JR	J7F2F

	OUT	(0A8H),A
	LD	(HL),E
J7F2F:	LD	A,D
	OUT	(0A8H),A
	RET	

	OUT	(0A8H),A
	EX	AF,AF'
	CALL	CLPRM1
	EX	AF,AF'
	POP	AF
	OUT	(0A8H),A
	EX	AF,AF'
	RET	

	JP	(IX)

	defw	C475A
	defw	C475A
	defw	C475A
	defw	C475A
	defw	C475A
	defw	C475A
	defw	C475A
	defw	C475A
	defw	C475A
	defw	C475A

	IF BASVER EQ 0
	defb	39
	ELSE
	defb	37
	ENDIF

	defb	29

	IF BASVER EQ 0
	defb	29
	ELSE
	defb	37
	ENDIF

	defb	24
	defb	14

	defw	0
	defw	0
	defw	00800H
	defw	0
	defw	0

	defw	01800H
	defw	02000H
	defw	0
	defw	01B00H
	defw	03800H

	defw	01800H
	defw	02000H
	defw	0
	defw	01B00H
	defw	03800H

	defw	00800H
	defw	0
	defw	0
	defw	01B00H
	defw	03800H

	defb	1
	defb	1
	defb	1
	defb	0

	defb	000H,0E0H,000H,000H,000H,000H,000H,000H
	defb	000H
	defb	0FFH
	defb	15
	defb	4

	IF BASVER EQ 0
	defb	7
	ELSE
	defb	4
	ENDIF

	jp	0
	jp	0
	defb	15
	defw	QUETAB
	defb	0FFH
	defb	1
	defb	50
	defw	KEYBUF
	defw	KEYBUF
	defb	053H,05CH,026H,02DH,00FH
	defb	025H,02DH,00EH,016H,01FH
	defb	053H,05CH,026H,02DH,00FH
	defw	00100H
	defw	00100H
	defb	':'

; bugfix for zero length devicename

C7FB7:	LD	DE,PROCNM
	AND	A
	RET	NZ
	INC	B			; use length 1 (name ":" is used)
	RET	

;	  Subroutine helper routine for RDSLT
;	     Inputs  ________________________
;	     Outputs ________________________


C7FBE:	CALL	C7FD1			; switch page 0 primary slot 0
	LD	E,(HL)			; read
	JR	J7FC8			; restore orginal page 0

;	  Subroutine helper routine for WRSLT
;	     Inputs  ________________________
;	     Outputs ________________________

C7FC4:	CALL	C7FD1			; switch page 0 primary slot 0
	LD	(HL),E			; write
J7FC8:	IN	A,(0A8H)
	AND	3FH
	OUT	(0A8H),A
	LD	A,C			; saved secundairy slotregister
	JR	J7FE6			; restore orginal page 0

;	  Subroutine switch page 0 primary slot 0
;	     Inputs  ________________________
;	     Outputs ________________________
;
C7FD1:	RRCA	
	RRCA	
	AND	03H
	LD	D,A
	IN	A,(0A8H)
	LD	B,A			; save primairy slotregister
	AND	3FH
	OUT	(0A8H),A		; prim. slot 0 in page 3 (access the sec. slotreg)
	LD	A,(D.FFFF)
	CPL	
	LD	C,A			; save secundairy slotregister
	AND	0FCH
	OR	D
	LD	D,A
J7FE6:	LD	(D.FFFF),A		; switch sec. slot page 0 (rombios gone!)
	LD	A,B
	OUT	(0A8H),A		; restore primairy slotregister
	LD	A,E
	RET	

	DEFS	07FF2H-$,0		; unused space

;	  Subroutine CALSLT after Vertical Retrace
;	     Inputs  ________________________
;	     Outputs ________________________

C7FF2:	IN	A,(99H)
	RLCA	
	JR	NC,C7FF2		; wait for VR
	JP	CALSLT

;	  Subroutine entrypoint for EXTBIO
;	     Inputs  ________________________
;	     Outputs ________________________
;	     Remark  used to call extbio with basic rom active

C7FFA:	JP	EXTBIO

;	  Subroutine entrypoint for disksystem
;	     Inputs  ________________________
;	     Outputs ________________________
;	     Remark  used to call disksystem with basic rom active

C7FFD:	JP	JF37D

	END

