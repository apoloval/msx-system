; AUDIO00.MAC

; MSX AUDIO BIOS ROM

; Source re-created by Z80DIS 2.2
; Z80DIS was written by Kenneth Gielow, Palo Alto, CA

; Code Copyrighted by ASCII and maybe others
; Source comments by Arjen Zeilemaker

; Sourcecode supplied for STUDY ONLY
; Recreation NOT permitted without authorisation of the copyrightholders


	.Z80
	ASEG
	ORG	0000H

I3000	EQU	3000H	; 9 channels, both Y8950, 32 bytes per channel
; +0	1st operator (20H)
; +1	1st operator (40H)
; +2	1st operator (60H)
; +3	1st operator (80H)
; +4	1st operator volume selector
; +5	1st operator added to TOTAL LEVEL
; +6	not used
; +7	not used
; +8	2nd operator (20H)
; +9	2nd operator (40H)
; +10	2nd operator (60H)
; +11	2nd operator (80H)
; +12	2nd operator volume selector
; +13	2nd operator added to TOTAL LEVEL
; +14	not used
; +15	not used
; +16,2	base word for F-NUMB/BLOCK
; +18,2	add1 word for F-NUMB/BLOCK (audio keyboard)
; +20	(B0H)
; +21	audio keyboard volume
; +22	(C0H), b4 set (use only base word), b5 set (use b7,b6 as AM/VIB depth)
; +23	channel volume (0-15)
; +24,2	add2 word for F-NUMB/BLOCK
; +26	predefined instrument
; +27	channel flags
; +28	offset channel registers
; +29	offset operator registers
; +30	key off down counter
; +31	(A0H)

I3280	EQU	3280H	; control registers 1st Y8950
; registers 0-31

D32A0	EQU	32A0H	; PITCH/TRANSPOSE 1st Y8950
D32A2	EQU	32A2H	; AM/VIB DEPTH/RHYTHM register 1st Y8950
			; sample ram size (in 32 KB units) 1st Y8950
D32A4	EQU	32A4H	; flags 1st Y8950
			; pointer to orginal info block of sample
			; C value ?
			; base ADPCM vol ?
			; word value ?
			; word value ?
			; byte value ?
			; word value ?
			; word value ?
			; word value ?
			; byte value ?
I32C0	EQU	32C0H	; control registers 2nd Y8950
D32E0	EQU	32E0H	; PITCH/TRANSPOSE 2nd Y8950
D32E2	EQU	32E2H	; AM/VIB DEPTH/RHYTHM register 2nd Y8950
D32E4	EQU	32E4H	; flags 2nd Y8950
J3300	EQU	3300H	; general interrupt handler
C3308	EQU	3308H	; should VDP interrupts handled routine
C3310	EQU	3310H	; unknown interrupt routine
C3318	EQU	3318H	; VRAM read ready routine
I3340	EQU	3340H	; TIMER-1 int
I3344	EQU	3344H	; TIMER-2 int
I3348	EQU	3348H	; VDP int
I334C	EQU	334CH	; user int
I3350	EQU	3350H	; EOS int 1st Y8950
I3354	EQU	3354H	; EOS int 2nd Y8950
D3360	EQU	3360H	; pointer to TIMER-2 int block
D3362	EQU	3362H	; pointer to TIMER-1 int block
D3364	EQU	3364H	; pointer to VDP int block
D3366	EQU	3366H	; pointer to user int block
D3370	EQU	3370H	; audio keyboard key pressed/released handler
D3372	EQU	3372H	; ADPCM sampling ends 1st Y8950 handler
D3374	EQU	3374H	; ADPCM sampling ends 2nd Y8950 handler
D3380	EQU	3380H	; pointer to predefined instrument definitions (00-31)
D3382	EQU	3382H	; pointer to programable instrument definitions (32-63)
D3384	EQU	3384H	; pointer to predefined instrument definitions (32-63)
D3391	EQU	3391H	; 2nd Y8950 available
D3392	EQU	3392H	; drums enabled
D3400	EQU	3400H	; interrupt suspend counter
I3401	EQU	3401H	; ?? suspend counter
D3402	EQU	3402H	; b1 = ?, b0 = ?
D3403	EQU	3403H	; keyboard channel mask
D3405	EQU	3405H	; first channel to check for free (audio keyboard)
I3407	EQU	3407H	; audio keyboard channel in use by key (9 channels)
D3410	EQU	3410H	; ?? word audio keyboard, something with add1 word part B
D3412	EQU	3412H	; ?? byte audio keyboard, something with add1 word part B
D3413	EQU	3413H	; add1 word part B, dirived from 3410 and 3412
D3415	EQU	3415H	; add1 word part A 1st Y8950
D3417	EQU	3417H	; add1 word part A 2nd Y8950
I341B	EQU	341BH	; 3*9, AUDIO keyboard
D3436	EQU	3436H	; audio keyboard velocity
D3437	EQU	3437H	; audio keyboard fm play enabled

D3438	EQU	3438H	; source memory type
D343A	EQU	343AH	; source start block
D343C	EQU	343CH	; number of blocks
D343E	EQU	343EH	; sample frequency

D3448	EQU	3448H	; destination memory type
D344A	EQU	344AH	; destination start block
D344C	EQU	344CH	; number of blocks transfered

D3462	EQU	3462H	; used with ADPCM conversion
D3464	EQU	3464H	; used with ADPCM conversion
D3466	EQU	3466H	; address get/put for sample routine
D3468	EQU	3468H	; RAM address
D346A	EQU	346AH	; address finish for sample routine
D346C	EQU	346CH	; volume speechsynthesis
D346D	EQU	346DH	; speechsynthesis
D346E	EQU	346EH	; speechsynthesis
D346F	EQU	346FH	; buffer speechsynthesis
D3471	EQU	3471H	; speechsynthesis
D3479	EQU	3479H	; pointer to temper block
I347B	EQU	347BH	; temper block
D3488	EQU	3488H	; record sample, mic sync flag
D3489	EQU	3489H	; play sample, repeat flag
D348A	EQU	348AH	; address start for sample routine
D348C	EQU	348CH	; first entry to check for free (audio keyboard)
D348E	EQU	348EH	; pitch value 1st Y8950
D3490	EQU	3490H	; pitch value 2nd Y8950
D3492	EQU	3492H	; transpose value 1st Y8950
D3494	EQU	3494H	; transpose value 2nd Y8950
D3496	EQU	3496H	; audio keyboard mode and flags
D3497	EQU	3497H	; put pointer recording buffer
D3499	EQU	3499H	; start recording buffer
D349B	EQU	349BH	; end recording buffer
D349D	EQU	349DH	; get pointer replay buffer
D349F	EQU	349FH	; start replay buffer
D34A1	EQU	34A1H	; end replay buffer
D34A3	EQU	34A3H	; audio keyboard replay timer
D34A4	EQU	34A4H	; audio keyboard recording timer
D34A5	EQU	34A5H	; saved audio keyboard state
D34A6	EQU	34A6H	; saved end recording buffer
C34A8	EQU	34A8H	; write VDP cmd
C34AB	EQU	34ABH	; read VDP status
C34AE	EQU	34AEH	; write VDP data
C34B1	EQU	34B1H	; read VDP data
I3500	EQU	3500H	; temporary buffer sample
I3600	EQU	3600H	; temporary buffer2 sample
I3700	EQU	3700H	; programable instrument definitions (32-63)
D3B0C	EQU	3B0CH	; VDP dataregister read
D3B0D	EQU	3B0DH	; VDP dataregister write
D3B0E	EQU	3B0EH	; slotid MSX-AUDIO

C4010	EQU	4010H
J4013	EQU	4013H
J4016	EQU	4016H
D7B23	EQU	7B23H
D7B31	EQU	7B31H
RDPRIM	EQU	0F380H
WRPRIM	EQU	0F385H
CLPRIM	EQU	0F38CH
MUSICF	EQU	0FB3FH
BASROM	EQU	0FBB1H
OLDKEY	EQU	0FBDAH
EXPTBL	EQU	0FCC1H
SLTTBL	EQU	0FCC5H
DFFFF	EQU	0FFFFH


;	  Subroutine audio function
;	     Inputs  ________________________
;	     Outputs ________________________


C0000:	JP	J04A2

	DEFS	0008H-$,0

;	  Subroutine suspend interrupt processing
;	     Inputs  ________________________
;	     Outputs ________________________


C0008:	JP	J03F5

	DEFS	000CH-$,0

;	  Subroutine RDSLT
;	     Inputs  ________________________
;	     Outputs ________________________


C000C:	JP	C0218

	DEFS	0010H-$,0

;	  Subroutine resume interrupt processing
;	     Inputs  ________________________
;	     Outputs ________________________


C0010:	JP	J0401

	DEFS	0014H-$,0

;	  Subroutine WRSLT
;	     Inputs  ________________________
;	     Outputs ________________________


C0014:	JP	C0233

	DEFS	0018H-$,0

;	  Subroutine write Y8950 register (EI)
;	     Inputs  ________________________
;	     Outputs ________________________


C0018:	JP	C0753

	DEFS	001CH-$,0

;	  Subroutine CALSLT
;	     Inputs  ________________________
;	     Outputs ________________________


C001C:	JP	C0273

	DEFS	0020H-$,0

;	  Subroutine write Y8950 register
;	     Inputs  ________________________
;	     Outputs ________________________


C0020:	JP	C0758

	DEFS	0024H-$,0

;	  Subroutine ENASLT
;	     Inputs  ________________________
;	     Outputs ________________________


C0024:	JP	C031E


	DEFS	0030H-$,0

;	  Subroutine CALLF
;	     Inputs  ________________________
;	     Outputs ________________________


C0030:	JP	J0261

	DEFS	0034H-$,0

;	  Subroutine get slotid
;	     Inputs  ________________________
;	     Outputs ________________________


C0034:	JP	C01C7

	DEFS	0038H-$,0

;	  Subroutine KEYINT
;	     Inputs  ________________________
;	     Outputs ________________________


C0038:	JP	J3300

	DEFS	0066H-$,0

C0066:	RETN

	DEFS	0080H-$,0

I0080:	DEFB	"AUDIO"

	DEFS	0090H-$,0

?0090:	JP	J0593		; initialize
?0093:	JP	J03F5		; suspend interrupt processing
C0096:	JP	J0401		; resume interrupt processing
?0099:	JP	C0753		; write Y8950 register (EI)
?009C:	JP	C0758		; write Y8950 register
?009F:	JP	J07B4		; read Y8950 register (EI)
?00A2:	JP	C07B9		; read Y8950 register
?00A5:	JP	C07CE		; read Y8950 status (EI)
?00A8:	JP	C07D1		; read Y8950 status
?00AB:	JP	J0459		; audio setup
?00AE:	JP	J04A2		; audio function
?00B1:	JP	J056E		; audio keyboard
C00B4:	JP	J0397		; H.KEYI interrupt handler
I00B7:	JP	J0550		; TIMER-2 interrupt
?00BA:	RET
	RET
	RET
?00BD:	RET
	RET
	RET
?00C0:	RET
	RET
	RET
?00C3:	RET
	RET
	RET
?00C6:	RET
	RET
	RET
?00C9:	RET
	RET
	RET
?00CC:	RET
	RET
	RET
?00CF:	RET
	RET
	RET
?00D2:	RET
	RET
	RET
?00D5:	RET
	RET
	RET
?00D8:	RET
	RET
	RET
?00DB:	RET
	RET
	RET
?00DE:	RET
	RET
	RET
I00E1:	RET
	RET
	RET
?00E4:	RET
	RET
	RET
?00E7:	RET
	RET
	RET
?00EA:	RET
	RET
	RET
?00ED:	RET
	RET
	RET

	DEFS	01C1H-$,0

;	  Subroutine start routine
;	     Inputs  HL = adres routine
;	     Outputs ________________________


C01C1:	JP	(HL)

;	  Subroutine get table entry
;	     Inputs  HL = pointer to table, A = entry
;	     Outputs HL = pointer to entry

C01C2:	ADD	A,L
	LD	L,A
	RET	NC
	INC	H
	RET

;	  Subroutine get slotid
;	     Inputs  HL = adres
;	     Outputs A = slotid

C01C7:	DI
	IN	A,(0A8H)
	LD	C,A
	LD	D,A
	LD	A,H
	RLCA
	RLCA
	AND	03H			; page 0 ?
	JR	Z,J01DA			; yep,
	LD	B,A
	LD	A,D
J01D5:	RRCA
	RRCA
	DJNZ	J01D5
	LD	D,A
J01DA:	LD	A,D
	AND	03H			; primairy slot on page
	LD	D,A
	PUSH	HL
	LD	HL,EXPTBL
	ADD	A,L
	LD	L,A
	BIT	7,(HL)			; slot expanded ?
	POP	HL
	CALL	NZ,C01EC		; yep,
	LD	A,D
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C01EC:	LD	A,D
	RRCA
	RRCA
	AND	0C0H
	LD	E,A
	LD	A,C
	AND	3FH
	OR	E
	OUT	(0A8H),A
	LD	A,(DFFFF)
	XOR	0FFH			; read secundairy slotregister
	LD	E,A
	LD	A,C
	OUT	(0A8H),A
	LD	A,H
	RLCA
	RLCA
	DEC	A
	AND	03H
	JR	Z,J0210
	LD	B,A
	LD	A,E
J020B:	RRCA
	RRCA
	DJNZ	J020B
	LD	E,A
J0210:	LD	A,E
	AND	0CH
	OR	80H
	OR	D
	LD	D,A
	RET

;	  Subroutine RDSLT
;	     Inputs  ________________________
;	     Outputs ________________________


C0218:	CALL	C033E
	JP	M,J0228
	IN	A,(0A8H)
	LD	D,A
	AND	C
	OR	B
	CALL	RDPRIM
	LD	A,E
	RET

J0228:	PUSH	HL
	CALL	C0363
	EX	(SP),HL
	PUSH	BC
	CALL	C0218
	JR	J024E

;	  Subroutine WRSLT
;	     Inputs  ________________________
;	     Outputs ________________________


C0233:	PUSH	DE
	CALL	C033E
	JP	M,J0243
	POP	DE
	IN	A,(0A8H)
	LD	D,A
	AND	C
	OR	B
	JP	WRPRIM

J0243:	EX	(SP),HL
	PUSH	HL
	CALL	C0363
	POP	DE
	EX	(SP),HL
	PUSH	BC
	CALL	C0233
J024E:	POP	BC
	EX	(SP),HL
	PUSH	AF
	LD	A,B
	AND	3FH
	OR	C
	OUT	(0A8H),A
	LD	A,L
	LD	(DFFFF),A
	LD	A,B
	OUT	(0A8H),A
	POP	AF
	POP	HL
	RET

;	  Subroutine CALLF
;	     Inputs  ________________________
;	     Outputs ________________________


J0261:	EX	(SP),HL
	PUSH	AF
	PUSH	DE
	LD	A,(HL)
	PUSH	AF
	POP	IY
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	PUSH	DE
	POP	IX
	POP	DE
	POP	AF
	EX	(SP),HL

;	  Subroutine CALSLT
;	     Inputs  ________________________
;	     Outputs ________________________


C0273:	EXX
	EX	AF,AF'
	PUSH	IY
	POP	AF
	PUSH	IX
	POP	HL
	CALL	C033E
	JP	M,J028A
	IN	A,(0A8H)
	PUSH	AF
	AND	C
	OR	B
	EXX
	JP	CLPRIM

J028A:	PUSH	AF
	AND	03H
	PUSH	BC
	LD	B,A
	LD	A,(D3B0E)
	AND	03H
	CP	B
	POP	BC
	JR	NZ,J029D
	LD	A,H
	AND	0C0H
	JR	Z,J02D6
J029D:	POP	AF
	CALL	C0363
	PUSH	AF
	POP	IY
	PUSH	HL
	PUSH	BC
	LD	C,A
	LD	B,00H
	LD	A,L
	AND	H
	OR	D
	LD	HL,SLTTBL
	ADD	HL,BC
	LD	(HL),A
	PUSH	HL
	EX	AF,AF'
	EXX
	CALL	C0273
	EXX
	EX	AF,AF'
	POP	HL
	POP	BC
	POP	DE
	LD	A,I
	PUSH	AF
	LD	A,B
	AND	3FH
	OR	C
	DI
	OUT	(0A8H),A
	LD	A,E
	LD	(DFFFF),A
	LD	A,B
	OUT	(0A8H),A
	LD	(HL),E
J02CE:	POP	AF
	JP	PO,J02D3
	EI
J02D3:	EX	AF,AF'
	EXX
	RET

J02D6:	LD	H,40H
	CALL	C01C7			; get slotid page 1
	PUSH	AF
	LD	A,(D3B0E)
	LD	H,40H
	CALL	C031E			; enable MSX-AUDIO on page 1
	POP	HL
	POP	AF
	PUSH	HL
	LD	L,A
	AND	03H
	PUSH	HL
	PUSH	AF
	LD	HL,SLTTBL
	ADD	A,L
	LD	L,A
	POP	AF
	EX	(SP),HL
	RRCA
	RRCA
	LD	D,A
	IN	A,(0A8H)
	LD	C,A
	AND	3FH
	OR	D
	LD	H,A
	OUT	(0A8H),A
	LD	A,(DFFFF)
	CPL
	LD	B,A
	LD	A,L
	AND	0CH
	RRCA
	RRCA
	LD	E,A
	LD	A,B
	AND	0FCH
	OR	E
	LD	E,A
	JP	J4016			; helper routine in page 1

J0312:	LD	(HL),B
	POP	AF
	POP	HL
	PUSH	AF
	LD	A,H
	LD	H,40H
	CALL	C031E			; enable orginal slot on page 1
	JR	J02CE

;	  Subroutine ENASLT
;	     Inputs  ________________________
;	     Outputs ________________________


C031E:	CALL	C033E
	JP	M,J032B
	IN	A,(0A8H)
	AND	C
	OR	B
	OUT	(0A8H),A
	RET

J032B:	PUSH	HL
	CALL	C0363
	LD	C,A
	LD	B,00H
	LD	A,L
	AND	H
	OR	D
	LD	HL,SLTTBL
	ADD	HL,BC
	LD	(HL),A
	POP	HL
	LD	A,C
	JR	C031E

;	  Subroutine get slot masks
;	     Inputs  ________________________
;	     Outputs ________________________


C033E:	DI
	PUSH	AF
	LD	A,H
	RLCA
	RLCA
	AND	03H
	LD	E,A
	LD	A,0C0H
J0348:	RLCA
	RLCA
	DEC	E
	JP	P,J0348
	LD	E,A
	CPL
	LD	C,A
	POP	AF
	PUSH	AF
	AND	03H
	INC	A
	LD	B,A
	LD	A,0ABH
J0359:	ADD	A,55H
	DJNZ	J0359
	LD	D,A
	AND	E
	LD	B,A
	POP	AF
	AND	A
	RET

;	  Subroutine change secundairy slotregister
;	     Inputs  ________________________
;	     Outputs ________________________


C0363:	PUSH	AF
	LD	A,D
	AND	0C0H
	LD	C,A
	POP	AF
	PUSH	AF
	LD	D,A
	IN	A,(0A8H)
	LD	B,A
	AND	3FH
	OR	C
	OUT	(0A8H),A
	LD	A,D
	RRCA
	RRCA
	AND	03H
	LD	D,A
	LD	A,0ABH
J037B:	ADD	A,55H
	DEC	D
	JP	P,J037B
	AND	E
	LD	D,A
	LD	A,E
	CPL
	LD	H,A
	LD	A,(DFFFF)
	CPL
	LD	L,A
	AND	H
	OR	D
	LD	(DFFFF),A
	LD	A,B
	OUT	(0A8H),A
	POP	AF
	AND	03H
	RET

;	  Subroutine H.KEYI interrupt handler
;	     Inputs  ________________________
;	     Outputs ________________________


J0397:	DI
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	B,80H
	LD	A,4
	OUT	(0C0H),A
	LD	C,0C1H
	IN	A,(0C0H)		; read status
	OUT	(C),B			; reset int
	ADD	A,A
	ADD	A,A			; TIMER-1 int ?
	JR	NC,J03B0
	LD	HL,I3340
	INC	(HL)			; yep, increase count
J03B0:	ADD	A,A			; TIMER-2 int ?
	JR	NC,J03B7
	LD	HL,I3344
	INC	(HL)			; yep, increase count
J03B7:	ADD	A,A			; 1st Y8950 EOS int ?
	JR	NC,J03BE
	LD	HL,I3350
	INC	(HL)			; yep, increase count
J03BE:	LD	A,(D32E4)
	AND	02H			; 2nd Y8950 found ?
	JR	NZ,J03D7		; nope, skip
	LD	A,4
	OUT	(0C2H),A
	LD	C,0C3H
	IN	A,(0C2H)		; read status
	OUT	(C),B			; reset int
	AND	10H			; 2nd Y8950 EOS int ?
	JR	Z,J03D7
	LD	HL,I3354
	INC	(HL)			; yep, increase count
J03D7:	CALL	C3308			; should VDP ints handled ?
	JR	C,J03E6			; nope, skip
	CALL	C34AB			; read VDP status
	ADD	A,A			; VDP int ?
	JR	NC,J03E6
	LD	HL,I3348
	INC	(HL)			; yep, increase count
J03E6:	CALL	C3310
	LD	A,(D3400)
	AND	A			; handle interrupts ?
	CALL	Z,C041B			; yep, proces interrupts
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET

;	  Subroutine suspend interrupt processing
;	     Inputs  ________________________
;	     Outputs ________________________


J03F5:	DI
	PUSH	AF
	LD	A,(D3400)
	INC	A
	LD	(D3400),A
	POP	AF
	EI
	RET

;	  Subroutine resume interrupt processing
;	     Inputs  ________________________
;	     Outputs ________________________


J0401:	DI
	PUSH	AF
	LD	A,(D3400)
	AND	A			; interrupts suspended ?
	JR	Z,J0418			; nope, quit
	DEC	A
	LD	(D3400),A		; interrupts now resumed ?
	JR	NZ,J0418		; nope, quit
	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	C041B			; proces pending interrupts
	POP	HL
	POP	DE
	POP	BC
J0418:	POP	AF
	EI
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C041B:	LD	A,1
	LD	(D3400),A		; suspend interrupt processing
J0420:	DI
	XOR	A
	LD	HL,I3350
	OR	(HL)			; EOS int 1st Y8950 ?
	JR	NZ,J044A		; yep, start handler
	LD	HL,I3354
	OR	(HL)			; EOS int 2nd Y8950 ?
	JR	NZ,J044A		; yep, start handler
	LD	HL,(D3360)
	OR	(HL)			; TIMER-2 int ?
	JR	NZ,J044A		; yep, start handler
	LD	HL,(D3362)
	OR	(HL)			; TIMER-1 int ?
	JR	NZ,J044A		; yep, start handler
	LD	HL,(D3364)
	OR	(HL)			; VDP int ?
	JR	NZ,J044A		; yep, start handler
	LD	HL,(D3366)
	OR	(HL)			; ??
	JR	NZ,J044A		; yep, start handler
	LD	(D3400),A		; resume interrupts processing
	RET

J044A:	DEC	(HL)
	LD	C,(HL)
	INC	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	EI
	OR	H
	LD	A,C
	CALL	NZ,C01C1		; start routine
	JR	J0420

J0459:	DI
	LD	HL,D3402
	BIT	1,(HL)
	JR	NZ,J048E
	CP	8
	RET	NC
	PUSH	IX
	PUSH	IY
	LD	HL,D3400
	INC	(HL)			; suspend interrupt processing
	LD	HL,D3402
	SET	0,(HL)
	ADD	A,A
	LD	HL,I0492
	CALL	C01C2			; get table entry
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	EI
	CALL	C01C1			; start routine
	EI
	LD	HL,D3402
	RES	0,(HL)
	CALL	C0096			; resume interrupt processing
	POP	IY
	POP	IX
	RET

J048E:	XOR	A
	CCF
	EI
	RET

I0492:	DEFW	C0980			; 0, setup audio
	DEFW	C0B08			; 1, initialize channel for audio keyboard both Y8950
	DEFW	C193A			; 2, init AUDIO keyboard
	DEFW	C1E66			; 3, init AUDIO keyboard mode
	DEFW	C054E
	DEFW	C054E
	DEFW	C054E
	DEFW	C054E

;	  Subroutine audio function dispatcher
;	     Inputs  ________________________
;	     Outputs ________________________


J04A2:	CP	64
	RET	NC
	DI
	PUSH	IX
	PUSH	IY
	LD	HL,D3400
	INC	(HL)			; suspend interrupt processing
	LD	HL,I3401
	INC	(HL)
	ADD	A,A
	LD	HL,I04CE
	CALL	C01C2			; get table entry
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	EI
	CALL	C01C1			; start routine
	EI
	LD	HL,I3401
	DEC	(HL)
	CALL	C0096			; resume interrupt processing
	POP	IY
	POP	IX
	RET

I04CE:	DEFW	C2705			; 0, transfer sample data
	DEFW	C2788			; 1, test convert ADPCM sample data to PCM sample data
	DEFW	C27BD			; 2, convert ADPCM sample data to PCM sample data
	DEFW	C280B			; 3, convert PCM sample data to ADPCM sample data
	DEFW	C1F72			; 4, set PCM sample volume
	DEFW	C2621			; 5, play PCM sample
	DEFW	C2690			; 6, record PCM sample
	DEFW	C1F4C			; 7, set ADPCM sample volume
	DEFW	C2526			; 8, play ADPCM sample
	DEFW	C25A4			; 9, record ADPCM sample
	DEFW	C248C			; 10, abort sampling
	DEFW	C23AB			; 11, play ADPCM sample from sample memory
	DEFW	C23B7			; 12, record ADPCM sample to sample memory
	DEFW	C295F			; 13, ?? related with 14,15
	DEFW	C2A9B			; 14, ?? related with 13,15
	DEFW	C29D4			; 15, ?? related with 13,14
	DEFW	C07E0			; 16, start T1,T2 and set masks
	DEFW	C07FF			; 17, set TIMER-1 counter
	DEFW	C0816			; 18, set TIMER-2 counter
	DEFW	C080C			; 19, set TIMER-2 counter (?)
	DEFW	C08A3			; 20, key off, percussion off all channels
	DEFW	C090F			; 21, play percussion
	DEFW	C1F12			; 22, scan AUDIO keyboard
	DEFW	C08D1			; 23, set AM and VIB depth
	DEFW	C08E3			; 24, set pitch/transpose all channels
	DEFW	C2C61			; 25, speech synthesis
	DEFW	C226C			; 26, transfer to RAM
	DEFW	C22BD			; 27, transfer from RAM
	DEFW	C1A48			; 28, convert audio keyboard key to key value
	DEFW	C1A62			; 29, TEMPER
	DEFW	C1A93			; 30, PITCH
	DEFW	C1ABB			; 31, TRANSPOSE
	DEFW	C0B7F			; 32, both Y8950: key on with downcounter
	DEFW	C0B48			; 33, both Y8950: set add2 word with downcounter
	DEFW	C0C1F			; 34, both Y8950: operators sustain level 0, key off
	DEFW	C0B7D			; 35, both Y8950: key on
	DEFW	C0B46			; 36, both Y8950: set add2 word
	DEFW	C0C04			; 37, both Y8950: key off
	DEFW	C0C85			; 38, FM function for audio keyboard
	DEFW	C0CFC			; 39, set predefined instrument
	DEFW	C0DC6			; 40, FM function
	DEFW	C0D16			; 41, set custom made instrument
	DEFW	C23B3			; 42, play ADPCM sample repeat from sample memory
	DEFW	C204F			; 43, set sample rate for playing
	DEFW	C0930			; 44, set percussion volume
	DEFW	C054E
	DEFW	C054E
	DEFW	C054E
	DEFW	C195D			; 48, operators sustain level 0, key off on all audio keyboard channels
	DEFW	C197F			; 49, key off on all audio keyboard channels
	DEFW	C19A1			; 50, audio keyboard key on/key off
	DEFW	C1C12			; 51, audio keyboard FM play ?
	DEFW	C1C23			; 52, audio keyboard FM play ?
	DEFW	C1C7D			; 53, audio keyboard FM play parameters
	DEFW	C1CED			; 54, set predefined instrument audio keyboard channels
	DEFW	C1D14			; 55, FM function on all audio keyboard channels
	DEFW	C1D3D			; 56, set custom made instrument audio keyboard channels
	DEFW	C1D64			; 57, audio keyboard
	DEFW	C054E
	DEFW	C054E
	DEFW	C054E
	DEFW	C054E
	DEFW	C054E
	DEFW	C054E

C054E:	XOR	A
	RET

;	  Subroutine TIMER-2 interrupt handler
;	     Inputs  ________________________
;	     Outputs ________________________



J0550:	DI
	LD	HL,I3401
	INC	(HL)
	LD	HL,D3400
	INC	(HL)			; suspend interrupt processing
	EI
	PUSH	IX
	PUSH	IY
	CALL	C0C63
	POP	IY
	POP	IX
	LD	HL,I3401
	DEC	(HL)
	CALL	C0096			; resume interrupt processing
	AND	A
	RET

;	  Subroutine scan audio keyboard
;	     Inputs  ________________________
;	     Outputs ________________________


J056E:	DI
	LD	A,(D3402)
	AND	02H
	JR	NZ,J0590
	LD	HL,D3400
	INC	(HL)			; suspend interrupt processing
	EI
	PUSH	IX
	PUSH	IY
	CALL	C1E89			; scan AUDIO keyboard
	POP	IY
	POP	IX
	LD	HL,D3402
	RES	1,(HL)
	CALL	C0096			; resume interrupt processing
	AND	A
	RET

J0590:	EI
	SCF
	RET

J0593:	DI
	PUSH	IX
	PUSH	IY
	CALL	C05CC
	LD	IX,I3000		; channelset 1st Y8950
	LD	IY,I3280		; controlregisters 1st Y8950
	LD	(IY+36),04H		; register disabled, Y8950 available, use 1st Y8950
	CALL	C0675
	LD	IX,I3000+32		; channelset 2nd Y8950
	LD	IY,I32C0		; controlregisters 2nd Y8950
	LD	(IY+36),05H		; register disabled, Y8950 available, use 2nd Y8950
	CALL	C0718			; check if 2nd Y8950
	JR	NC,J05C4		; yep,
	LD	(IY+36),07H		; Y8950 not available
	LD	HL,D3391
	SET	0,(HL)			; no 2nd Y8950
J05C4:	CALL	C0675
	POP	IY
	POP	IX
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C05CC:	LD	HL,I3000
	LD	DE,I3000+1
	LD	BC,0700H-1
	LD	(HL),0
	LDIR				; clear 3000-36FF
	LD	A,81H
	LD	(D3496),A		; enable audio keyboard scan, recmod 1
	LD	(D34A5),A		; saved state: enable audio keyboard scan, recmod 1
	LD	HL,I0641
	LD	DE,C34A8
	LD	BC,12
	LDIR
	LD	A,(D3B0C)
	LD	(C34B1+1),A
	INC	A
	LD	(C34AB+1),A
	LD	A,(D3B0D)
	LD	(C34AE+1),A
	INC	A
	LD	(C34A8+1),A		; setup VDP routines
	LD	HL,I064D
	LD	DE,J3300
	LD	BC,32
	LDIR				; setup handlers
	LD	HL,I066D
	LD	DE,D3360
	LD	BC,8
	LDIR				; setup interrupt control blocks
	LD	HL,I00B7
	LD	(I3344+1),HL		; setup TIMER-2 handler
	LD	HL,I24F6
	LD	(I3350+1),HL		; setup EOS 1st Y8950 handler
	LD	HL,I2503
	LD	(I3354+1),HL		; setup EOS 2nd Y8950 handler
	LD	HL,I1096
	LD	(D3380),HL		; instruments 00-31
	LD	HL,I1516
	LD	(D3384),HL		; instruments 32-63 (ROM)
	LD	HL,I3700
	LD	(D3382),HL		; instruments 32-63 (RAM)
	LD	HL,I347B
	LD	(D3479),HL
	RET

I0641:	OUT	(00H),A
	RET

?0644:	IN	A,(00H)
	RET

?0647:	OUT	(00H),A
	RET

?064A:	IN	A,(00H)
	RET

;	  Subroutine general interrupt handler
;	     Inputs  ________________________
;	     Outputs ________________________

;	Remark copied to 3300

I064D:	CALL	C00B4
	EI
	RET

?0652:	DEFB	0B0H,0C2H,0FAH

;	  Subroutine should VDP interrupts handled
;	     Inputs  ________________________
;	     Outputs ________________________

;	Remark copied to 3308

	XOR	A			; do handle VDP interrupts
	RET

?0657:	DEFB	0FEH,00FH,028H,01FH,078H,0FEH

;	  Subroutine unknown purpose interrupt routine
;	     Inputs  ________________________
;	     Outputs ________________________

;	Remark copied to 3310

	RET

	DEFB	028H,02FH,0B7H,079H,028H,004H,0B7H

;	  Subroutine VRAM ready routine
;	     Inputs  ________________________
;	     Outputs ________________________

;	Remark copied to 3318

	XOR	A
	RET

?0667:	DEFB	078H,019H,0F6H,090H,0DDH,077H

I066D:	DEFW	I3344
	DEFW	I3340
	DEFW	I3348
	DEFW	I334C


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C0675:	LD	A,08H			; b3 is output, b2-b0 is input
	LD	C,18H
	RST	20H			; write Y8950 I/O CONTROL register
	INC	C
	CALL	C07B9			; read Y8950 I/O DATA register
	AND	07H
	OR	08H			; set b3
	LD	(IY+25),A
	XOR	08H			; reset b3
	LD	C,19H
	RST	20H			; write Y8950 I/O DATA register
	XOR	A			; every 20.48 ms TIMER-1 interrupt
	LD	C,2
	RST	20H			; write Y8950 TIMER-1 register
	LD	A,0BFH
	LD	(IY+3),A		; every 20.80 ms TIMER-2 interrupt
	INC	C
	RST	20H			; write Y8950 TIMER-2 register
	LD	A,01H
	LD	C,07H
	RST	20H			; write Y8950 register
	XOR	A
	RST	20H			; write Y8950 register
	INC	C
	RST	20H			; write Y8950 register
	LD	A,78H			; all masks set, start T1 and T2
	LD	(IY+4),A
	LD	C,4
	RST	20H			; write Y8950 register
	LD	A,80H			; reset IRQ
	RST	20H			; write Y8950 register
	XOR	A
	LD	(IY+22),A
	LD	C,22
	RST	20H			; write DAC-DATA Y8950 register
	LD	A,4 
	LD	(IY+23),A
	INC	C
	RST	20H			; write DAC-DATA Y8950 register
	XOR	A
	LD	C,0BDH
	RST	20H			; write Y8950 register
	DEC	A
	LD	C,18
	RST	20H			; write ADPCM ENVELOPE CONTROL Y8950 register
	CALL	C22FE			; get size of sample RAM
	LD	(IY+35),A
	LD	B,9
	LD	C,0
	LD	DE,64
	LD	HL,I070F
J06CF:	PUSH	BC
	LD	A,(IY+36)		; Y8950 flags
	LD	(IX+27),A
	LD	(IX+28),C		; offset channel registers
	LD	A,(HL)
	INC	HL
	LD	(IX+29),A		; offset operator registers
	XOR	A
	LD	C,0B0H
	CALL	C077A			; write register if channel enabled
	LD	A,20H
	LD	C,20H
	CALL	C077A			; write register if channel enabled
	LD	(IX+0),A
	LD	C,23H
	CALL	C077A			; write register if channel enabled
	LD	(IX+8),A
	LD	A,0CH
	LD	C,80H
	CALL	C077A			; write register if channel enabled
	LD	(IX+3),A
	LD	C,83H
	CALL	C077A			; write register if channel enabled
	LD	(IX+11),A
	POP	BC
	ADD	IX,DE
	INC	C
	DJNZ	J06CF
	RET

I070F:	DEFB	0
	DEFB	1
	DEFB	2
	DEFB	8
	DEFB	9
	DEFB	10
	DEFB	16
	DEFB	17
	DEFB	18

;	  Subroutine check if 2nd Y8950
;	     Inputs  ________________________
;	     Outputs ________________________


C0718:	LD	C,2
	LD	A,0FCH			; 0.32 ms
	CALL	C0743			; set TIMER-1 counter
	LD	C,4
	LD	A,78H
	CALL	C0743			; mask T1,T2,EOS,BUF RDY, stop T2,T1
	LD	A,3BH
	CALL	C0743			; mask T2,EOS,BUF RDY, start T2,T1
	LD	A,80H
	CALL	C0743			; reset IRQ
	IN	A,(0C2H)		; read status
	AND	40H			; TIMER-1 int ?
	JR	NZ,J073F		; yep, quit
	LD	B,A
J0737:	IN	A,(0C2H)
	AND	40H			; TIMER-1 int ?
	JR	NZ,J0741		; yep,
	DJNZ	J0737
J073F:	SCF
	RET

J0741:	LD	A,78H			; mask T1,T2,EOS,BUF RDY, stop T2,T1


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C0743:	PUSH	AF
	LD	A,C
	OUT	(0C2H),A
	POP	AF
	OUT	(0C3H),A
	RET

;	  Subroutine quit if channel disabled
;	     Inputs  ________________________
;	     Outputs ________________________


C074B:	AND	A
	BIT	2,(IX+27)		; channel enabled ?
	RET	Z			; yep, quit
	POP	HL
	RET

;	  Subroutine write Y8950 register (EI)
;	     Inputs  ________________________
;	     Outputs ________________________


C0753:	CALL	C0758			; write Y8950 register
	EI
	RET

;	  Subroutine write Y8950 register
;	     Inputs  C = register, A = data, IY = 
;	     Outputs ________________________


C0758:	DI
	AND	A
	PUSH	AF
	LD	A,(IY+36)
	RRA				; use 1st Y8950 ?
	JR	C,J0768			; nope,
	LD	A,C
	OUT	(0C0H),A
	POP	AF
	OUT	(0C1H),A		; write Y8950 register
	RET

J0768:	RRA				; 2nd Y8950 found ?
	JR	C,J0772			; nope, quit with error
	LD	A,C
	OUT	(0C2H),A
	POP	AF
	OUT	(0C3H),A		; write Y8950 register
	RET

J0772:	POP	AF
	SCF
	RET

;	  Subroutine write register if channel enabled (EI)
;	     Inputs  ________________________
;	     Outputs ________________________


C0775:	CALL	C077A			; write register if channel enabled
	EI
	RET

;	  Subroutine write register if channel enabled (DI)
;	     Inputs  ________________________
;	     Outputs ________________________


C077A:	DI
	SCF
	BIT	2,(IX+27)		; channel disabled ?
	RET	NZ			; yep, quit with error
	AND	A

;	  Subroutine write register
;	     Inputs  ________________________
;	     Outputs ________________________


C0782:	PUSH	AF
	LD	A,C
	CP	0A0H
	JR	NC,J078D
	ADD	A,(IX+29)		; offset operator registers
	JR	J0790

;	  Subroutine write channel register
;	     Inputs  ________________________
;	     Outputs ________________________


J078D:	ADD	A,(IX+28)		; offset channel registers
J0790:	BIT	0,(IX+27)		; use 1st Y8950 ?
	JR	NZ,J079C		; nope, use 2nd Y8950
	OUT	(0C0H),A
	POP	AF
	OUT	(0C1H),A		; write Y8950 register
	RET

J079C:	OUT	(0C2H),A
	POP	AF
	OUT	(0C3H),A		; write Y8950 register
	RET

;	  Subroutine write channel register 1st Y8950
;	     Inputs  ________________________
;	     Outputs ________________________


C07A2:	ADD	A,(IX+28)		; offset channel register
	OUT	(0C0H),A
	LD	A,C
	OUT	(0C1H),A		; write Y8950 register
	RET

;	  Subroutine write channel register 2nd Y8950
;	     Inputs  ________________________
;	     Outputs ________________________


C07AB:	ADD	A,(IX+28)		; offset channel register
	OUT	(0C2H),A
	LD	A,C
	OUT	(0C3H),A		; write Y8950 register
	RET

;	  Subroutine read Y8950 register (EI)
;	     Inputs  ________________________
;	     Outputs ________________________


J07B4:	CALL	C07B9			; read Y8950 register
	EI
	RET

;	  Subroutine read Y8950 register
;	     Inputs  ________________________
;	     Outputs ________________________


C07B9:	DI
	LD	A,(IY+36)
	RRA				; use 1st Y8950 ?
	JR	C,J07C6			; nope,
	LD	A,C
	OUT	(0C0H),A
	IN	A,(0C1H)		; read register
	RET

J07C6:	RRA				; 2nd Y8950 found ?
	RET	C			; nope, quit with error
	LD	A,C
	OUT	(0C2H),A
	IN	A,(0C3H)		; read register
	RET

;	  Subroutine read Y8950 status (EI)
;	     Inputs  ________________________
;	     Outputs ________________________


C07CE:	EI
	JR	J07D2

;	  Subroutine read Y8950 status
;	     Inputs  ________________________
;	     Outputs ________________________


C07D1:	DI
J07D2:	LD	A,(IY+36)
	RRA				; use 1st Y8950 ?
	JR	C,J07DB			; nope,
	IN	A,(0C0H)		; read status
	RET

J07DB:	RRA				; 2nd Y8950 found ?
	RET	C			; nope, quit with error
	IN	A,(0C2H)		; read status
	RET

;	  Subroutine start T1,T2 and set masks
;	     Inputs  ________________________
;	     Outputs ________________________


C07E0:	LD	IY,I3280		; control registers 1st Y8950
	LD	A,C
	LD	C,63H			; mask T1,T2 start T2,T1
	RRA
	JR	NC,J07EC
	RES	6,C			; do not mask T1
J07EC:	RRA
	JR	NC,J07F1
	RES	5,C			; do not mask T2
J07F1:	LD	A,(I3280+4)
	AND	1CH
	OR	C
	LD	(I3280+4),A
	LD	C,4
	RST	18H			; write Y8950 register (EI)
	AND	A
	RET

;	  Subroutine set TIMER-1 counter
;	     Inputs  C = 256 - (number of microseconds)/80
;	     Outputs ________________________


C07FF:	LD	IY,I3280
	LD	A,C
	LD	(I3280+2),A
	LD	C,2
	RST	18H			; write Y8950 register (EI)
	AND	A
	RET

;	  Subroutine set TIMER-2 counter
;	     Inputs  C = value
;	     Outputs ________________________


C080C:	LD	A,C
	SRL	A
	LD	HL,I0823
	CALL	C01C2			; get table entry
	LD	C,(HL)

;	  Subroutine set TIMER-2 counter
;	     Inputs  C = 256 - (number of microseconds)/320
;	     Outputs ________________________


C0816:	LD	IY,I3280
	LD	A,C
	LD	(I3280+3),A
	LD	C,3
	RST	18H			; write Y8950 register (EI)
	AND	A
	RET

I0823:	DEFB	000H,000H,000H,000H,000H,000H,000H,000H
	DEFB	000H,000H,000H,000H,000H,000H,000H,000H
	DEFB	00CH,01AH,027H,032H,03DH,046H,04EH,056H
	DEFB	05DH,064H,06AH,06FH,074H,079H,07EH,082H
	DEFB	086H,08AH,08DH,090H,093H,096H,099H,09CH
	DEFB	09EH,0A1H,0A3H,0A5H,0A7H,0A9H,0ABH,0ADH
	DEFB	0AFH,0B0H,0B2H,0B3H,0B5H,0B6H,0B8H,0B9H
	DEFB	0BAH,0BBH,0BDH,0BEH,0BFH,0C0H,0C1H,0C2H
	DEFB	0C3H,0C4H,0C5H,0C6H,0C7H,0C7H,0C8H,0C9H
	DEFB	0CAH,0CAH,0CBH,0CCH,0CDH,0CDH,0CEH,0CFH
	DEFB	0CFH,0D0H,0D0H,0D1H,0D1H,0D2H,0D3H,0D3H
	DEFB	0D4H,0D4H,0D5H,0D5H,0D6H,0D6H,0D6H,0D7H
	DEFB	0D7H,0D8H,0D8H,0D9H,0D9H,0D9H,0DAH,0DAH
	DEFB	0DAH,0DBH,0DBH,0DBH,0DCH,0DCH,0DCH,0DDH
	DEFB	0DDH,0DDH,0DEH,0DEH,0DEH,0DFH,0DFH,0DFH
	DEFB	0DFH,0E0H,0E0H,0E0H,0E0H,0E1H,0E1H,0E1H


;	  Subroutine function 20, all channels key off, percussion off
;	     Inputs  ________________________
;	     Outputs ________________________


C08A3:	LD	IY,I3280		; control registers 1st Y8950
	LD	A,(D32A2)
	AND	0E0H			; all rhythm off
	LD	C,0BDH
	RST	18H			; write Y8950 register (EI)
	LD	IY,I32C0		; control registers 2nd Y8950
	LD	A,(D32E2)
	AND	0E0H			; all rhythm off
	RST	18H			; write Y8950 register (EI)
	LD	B,9
	LD	IX,I3000
J08BF:	PUSH	BC
	PUSH	IX
	CALL	C0C1F			; both Y8950: operators sustain level 0, key off
	POP	IX
	POP	BC
	LD	DE,64
	ADD	IX,DE
	DJNZ	J08BF			; next channel
	AND	A
	RET

;	  Subroutine set AM and VIB depth
;	     Inputs  ________________________
;	     Outputs ________________________


C08D1:	LD	A,C
	AND	0C0H
	LD	C,A
	LD	A,(IY+34)
	AND	3FH
	OR	C
	LD	(IY+34),A
	LD	C,0BDH
	RST	18H			; write Y8950 register (EI)
	AND	A
	RET

;	  Subroutine set pitch/transpose all channels
;	     Inputs  ________________________
;	     Outputs ________________________


C08E3:	LD	(IY+32),E
	LD	(IY+33),D
	LD	A,(IY+36)
	RRCA
	RRCA				; Y8950 available ?
	JR	C,J090D			; nope, quit
	RRCA				; registers enabled ?
	JR	C,J090D			; nope, quit
	LD	B,9
	LD	IX,I3000
	BIT	5,A			; 1st Y8950 ?
	JR	Z,J0901			; yep, use 1st Y8950 channels
	LD	IX,I3000+32		; nope, use 2nd Y8950 channels
J0901:	PUSH	BC
	CALL	C0EAB			; calculate and write BLOCK/F-NUMBER
	POP	BC
	LD	DE,64
	ADD	IX,DE
	DJNZ	J0901			; next channel
J090D:	AND	A
	RET

;	  Subroutine function 21, play percussion
;	     Inputs  ________________________
;	     Outputs ________________________


C090F:	LD	A,C
	AND	1FH
	LD	D,A			; drum instrument SET mask
	CPL
	LD	E,A			; drum instrument RESET mask
	LD	C,0BDH
	LD	IY,I3280
	CALL	C0922
	LD	IY,I32C0


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C0922:	LD	A,(IY+34)
	LD	B,A
	AND	E
	RST	18H			; write Y8950 register (EI)
	LD	A,B
	OR	D
	LD	(IY+34),A
	RST	18H			; write Y8950 register (EI)
	AND	A
	RET

;	  Subroutine function 44, set percursion volume
;	     Inputs  C = percursion selector, E = volume
;	     Outputs ________________________


C0930:	LD	A,C
	AND	1FH
	RET	Z
	PUSH	BC
	LD	BC,7*64
	RRCA
	CALL	C,C095F			; set TOTAL LEVEL add 1st operator both Y8950
	LD	BC,8*64
	RRCA
	CALL	C,C095B			; set TOTAL LEVEL add 2nd operator both Y8950
	RRCA
	CALL	C,C095F			; set TOTAL LEVEL add 1st operator both Y8950
	LD	BC,7*64
	RRCA
	CALL	C,C095B			; set TOTAL LEVEL add 2nd operator both Y8950
	LD	BC,6*64
	RRCA
	CALL	C,C095F			; set TOTAL LEVEL add 1st operator both Y8950
	CALL	C,C095B			; set TOTAL LEVEL add 2nd operator both Y8950
	POP	BC
	OR	A
	RET

;	  Subroutine set TOTAL LEVEL add 2nd operator both Y8950
;	     Inputs  BC = channel offset
;	     Outputs ________________________


C095B:	LD	D,13			; set TOTAL LEVEL add 2nd operator
	JR	J0961

;	  Subroutine set TOTAL LEVEL add 1st operator both Y8950
;	     Inputs  BC = channel offset
;	     Outputs ________________________


C095F:	LD	D,5			; set TOTAL LEVEL add 1st operator
J0961:	PUSH	AF
	PUSH	IX
	ADD	IX,BC
	CALL	C0977			; FM function 1st Y8950
	PUSH	BC
	LD	BC,32
	ADD	IX,BC
	POP	BC
	CALL	C0977			; FM function 2nd Y8950
	POP	IX
	POP	AF
	RET

;	  Subroutine FM function
;	     Inputs  D = function
;	     Outputs ________________________


C0977:	PUSH	BC
	PUSH	DE
	LD	C,D
	CALL	C0DC6			; FM function
	POP	DE
	POP	BC
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C0980:	BIT	2,C			; drum mode ?
	JR	Z,J098A			; nope,
	LD	D,00H
	LD	A,E
	AND	3FH
	LD	E,A			; yep, use 6 channel at most for keyboard
J098A:	LD	(D3403),DE		; keyboard channel mask
	LD	HL,1
	LD	(D3405),HL		; start with channel 0 for FM play by audiokeyboard
	LD	HL,I3407
	LD	(D348C),HL		; start with entry 0 for FM play by audiokeyboard
	PUSH	BC
	LD	C,0FBH
	LD	A,(D32A4)
	AND	C
	LD	(D32A4),A		; registers 1st Y8950 enabled
	LD	B,9
	LD	IX,I3000
	LD	DE,64
J09AD:	LD	A,(IX+27)
	AND	C
	LD	(IX+27),A		; channel enabled
	ADD	IX,DE
	DJNZ	J09AD
	LD	A,(D32E4)
	BIT	1,A			; 2nd Y8950 found ?
	JR	Z,J09C6			; yep,
	OR	04H
	LD	(D32E4),A		; registers 2nd Y8950 disabled
	JR	J09DB
J09C6:	AND	C
	LD	(D32E4),A		; registers 2nd Y8950 enabled
	LD	B,9
	LD	IX,I3000+32
J09D0:	LD	A,(IX+27)
	AND	C
	LD	(IX+27),A		; channel enabled
	ADD	IX,DE
	DJNZ	J09D0
J09DB:	CALL	C08A3			; all channels key off, percussion off
	CALL	C0AF1			; initialize all channels for audio keyboard both Y8950
	CALL	C193A
	POP	BC
	PUSH	BC
	BIT	0,C			; b0 set ?
	JR	Z,J0A02			; nope, skip
	LD	B,9
	LD	C,0A3H			; special csm instrument
	LD	IX,I3000
J09F2:	PUSH	IX
	PUSH	BC
	CALL	C0CFC			; set predefined instrument
	POP	BC
	POP	IX
	LD	DE,64
	ADD	IX,DE
	DJNZ	J09F2
J0A02:	POP	BC
	PUSH	BC
	BIT	1,C			; b1 set ?
	JR	Z,J0A20			; nope, skip
	LD	B,9
	LD	C,0A3H			; special csm instrument
	LD	IX,I3000+32
J0A10:	PUSH	IX
	PUSH	BC
	CALL	C0CFC			; set predefined instrument
	POP	BC
	POP	IX
	LD	DE,64
	ADD	IX,DE
	DJNZ	J0A10
J0A20:	POP	BC
	LD	A,C
	AND	01H
	RLCA
	RLCA
	LD	H,A			; b0 set, enable channels 1st Y8950
	LD	A,(D32A4)
	AND	02H
	RLCA
	OR	H			; if 1st Y8950 available, enable channels 1st Y8950
	LD	H,A
	LD	A,C
	AND	02H
	RLCA
	LD	L,A			; b1 set, enable channels 2nd Y8950
	LD	A,(D32E4)
	AND	02H
	RLCA
	OR	L			; if 2nd Y8950 available, enable channels 2nd Y8950
	LD	L,A
	LD	B,9
	LD	DE,64
	LD	IX,I3000
J0A45:	LD	A,(IX+27)
	AND	0FBH
	OR	H
	LD	(IX+27),A		; channel enable flag
	LD	A,(IX+27+32)
	AND	0FBH
	OR	L
	LD	(IX+27+32),A		; channel enable flag
	ADD	IX,DE
	DJNZ	J0A45
	LD	IX,I3280
	LD	A,(IX+36)
	AND	0FBH
	OR	H
	LD	(IX+36),A		; register enable flag 1st Y8950
	LD	A,(IX+36+64)
	AND	0FBH
	OR	L
	LD	(IX+36+64),A		; register enable flag 2nd Y8950
	LD	A,C
	AND	04H			; drum mode ?
	LD	HL,0
	JR	Z,J0A7C
	LD	HL,2001H		; yep, RHYTHM flag, drums enabled
J0A7C:	LD	B,0C0H
	LD	A,(IX+34)
	AND	B
	OR	H
	LD	(IX+34),A
	LD	A,(IX+34+64)
	AND	B
	OR	H
	LD	(IX+34+64),A
	LD	A,(D3392)
	AND	0FEH
	OR	L
	LD	(D3392),A
	LD	A,(IX+34)
	LD	C,0BDH
	CALL	C0753			; write Y8950 AM/VIB DEPTH/RHYTHM register
	LD	IY,I3280
	LD	C,0			; AM 1 dB, VIB 7 cents
	CALL	C08D1			; set AM and VIB depth
	LD	DE,0
	CALL	C08E3			; set pitch/transpose all channels
	LD	IY,I32C0
	LD	C,0			; AM 1 dB, VIB 7 cents
	CALL	C08D1			; set AM and VIB depth
	LD	DE,0
	CALL	C08E3			; set pitch/transpose all channels
	CALL	C0AF1			; initialize all channels for audio keyboard both Y8950
	CALL	C193A
	LD	A,(D32A2)
	AND	20H			; RHYTHM on ?
	RET	Z			; nope, quit
	LD	B,3
	LD	C,0A0H			; rhythm instrument definitions
	LD	IX,I3000+6*64
J0AD1:	PUSH	IX
	PUSH	BC
	CALL	C0CFC			; set predefined instrument
	POP	BC
	POP	IX
	LD	DE,32
	ADD	IX,DE
	PUSH	IX
	PUSH	BC
	CALL	C0CFC			; set predefined instrument
	POP	BC
	POP	IX
	LD	DE,32
	ADD	IX,DE
	INC	C			; next rhythm instrument
	DJNZ	J0AD1
	RET

;	  Subroutine initialize all channels for audio keyboard both Y8950
;	     Inputs  ________________________
;	     Outputs ________________________


C0AF1:	LD	B,9
	LD	IX,I3000
J0AF7:	PUSH	BC
	PUSH	IX
	CALL	C0B08			; initialize channel for audio keyboard both Y8950
	POP	IX
	POP	BC
	LD	DE,64
	ADD	IX,DE
	DJNZ	J0AF7
	RET

;	  Subroutine initialize channel for audio keyboard both Y8950
;	     Inputs  IX = channel pointer
;	     Outputs ________________________


C0B08:	PUSH	IX
	CALL	C0C1F			; both Y8950: operators sustain level 0, key off
	POP	IX
	CALL	C0B1C			; initialize channel for audio keyboard 1st Y8950
	LD	DE,32
	ADD	IX,DE
	CALL	C0B1C			; initialize channel for audio keyboard 2nd Y8950
	AND	A
	RET

;	  Subroutine initialize channel for audio keyboard
;	     Inputs  IX = channel pointer
;	     Outputs ________________________


C0B1C:	LD	C,21			; audio keyboard volume
	LD	E,8			; volume 8
	CALL	C0C85			; FM function for audio keyboard
	LD	C,23			; channel volume
	LD	E,0			; volume 0
	CALL	C0C85			; FM function for audio keyboard
	LD	C,20			; key on/off
	LD	E,0			; key off
	CALL	C0C85			; FM function for audio keyboard
	LD	C,24			; set add2 word BLOCK/F-NUMBER
	LD	DE,4000H
	CALL	C0C85			; FM function for audio keyboard
	LD	C,18			; set add1 word BLOCK/F-NUMBER
	LD	DE,0
	CALL	C0C85			; FM function for audio keyboard
	LD	C,0			; Piano 1
	JP	C0CFC			; set predefined instrument

C0B46:	LD	B,0			; NO key off downcounter
C0B48:	LD	(IX+30),B
	PUSH	IX
	LD	IY,I3280
	PUSH	DE
	CALL	C0B6D			; set add2 word BLOCK/F-NUMBER
	LD	DE,32
	ADD	IX,DE
	POP	DE
	LD	IY,I32C0
	CALL	C0B6D			; set add2 word BLOCK/F-NUMBER
	CALL	C0EAE			; write KEY/BLOCK/F-NUMBER (2nd Y8950)
	POP	IX
	CALL	C0EAE			; write KEY/BLOCK/F-NUMBER (1st Y8950)
	EI
	AND	A
	RET

;	  Subroutine set add2 word BLOCK/F-NUMBER
;	     Inputs  ________________________
;	     Outputs ________________________


C0B6D:	BIT	2,(IX+27)		; channel enabled ?
	RET	NZ			; nope, quit
	RES	7,D
	LD	(IX+24),E
	LD	(IX+25),D		; add2 word BLOCK/F-NUMBER
	JP	C0EC6			; calculate BLOCK/F-NUMBER

;	  Subroutine key on both Y8950
;	     Inputs  C = volume, DE = key
;	     Outputs ________________________


C0B7D:	LD	B,0			; NO key off down counter
C0B7F:	LD	(IX+30),B
	PUSH	IX
	LD	IY,I3280
	PUSH	BC
	PUSH	DE
	CALL	C0BD6			; key off and set new key
	LD	DE,32
	ADD	IX,DE
	POP	DE
	POP	BC
	LD	IY,I32C0
	CALL	C0BD6			; key off and set new key
	BIT	2,(IX+27)		; channel enabled ?
	JR	NZ,J0BB6		; nope,
	DI
	SET	5,(IX+20)		; KEY ON
	LD	C,(IX+20)
	LD	A,0B0H
	CALL	C07AB			; write channel register 2nd Y8950
	LD	C,(IX+31)
	LD	A,0A0H
	CALL	C07AB			; write channel register 2nd Y8950
J0BB6:	POP	IX
	BIT	2,(IX+27)		; channel enabled ?
	JR	NZ,J0BD3		; nope, quit
	DI
	SET	5,(IX+20)		; KEY ON
	LD	C,(IX+20)
	LD	A,0B0H
	CALL	C07A2			; write channel register 1st Y8950
	LD	C,(IX+31)
	LD	A,0A0H
	CALL	C07A2			; write channel register 1st Y8950
J0BD3:	EI
	AND	A
	RET

;	  Subroutine key off and set new key
;	     Inputs  ________________________
;	     Outputs ________________________


C0BD6:	BIT	2,(IX+27)		; channel enabled ?
	RET	NZ			; nope, quit
	LD	A,C
	AND	0FH
	LD	(IX+23),A		; channel volume
	RES	7,D
	LD	(IX+24),E
	LD	(IX+25),D		; add2 word BLOCK/F-NUMBER
	DI
	CALL	C0C50			; KEY OFF
	EI
	CALL	C0EC6			; calculate BLOCK/F-NUMBER
	CALL	C0FAC			; write TOTAL LEVEL both operators
	LD	A,(IX+3)
	LD	C,80H
	CALL	C077A			; write first operator register if channel enabled
	LD	A,(IX+11)
	LD	C,83H
	JP	C0775			; write second operator register if channel enabled (EI)

;	  Subroutine both Y8950: key off
;	     Inputs  ________________________
;	     Outputs ________________________


C0C04:	LD	(IX+30),0		; NO key off down counter
	DI
	CALL	C0C17			; KEY OFF when channel is enabled
	LD	DE,32
	ADD	IX,DE
	CALL	C0C17			; KEY OFF when channel is enabled
	EI
	AND	A
	RET

;	  Subroutine KEY OFF when channel is enabled
;	     Inputs  ________________________
;	     Outputs ________________________


C0C17:	BIT	2,(IX+27)		; channel enabled ?
	RET	NZ			; nope, quit
	JP	C0C50			; KEY OFF

;	  Subroutine both Y8950: operators sustain level 0, key off
;	     Inputs  ________________________
;	     Outputs ________________________


C0C1F:	LD	(IX+30),0		; NO key off down counter
	CALL	C0C31			; operators sustain level 0, key off
	LD	DE,32
	ADD	IX,DE
	CALL	C0C31			; operators sustain level 0, key off
	EI
	AND	A
	RET

;	  Subroutine operators sustain level 0, key off
;	     Inputs  ________________________
;	     Outputs ________________________


C0C31:	BIT	2,(IX+27)		; channel enabled ?
	RET	NZ			; nope, quit
	LD	A,(IX+11)
	OR	0FH
	LD	D,A			; sustain level 0
	LD	A,(IX+3)
	OR	0FH			; sustain level 0
	LD	C,80H
	LD	E,(IX+29)		; operator offset
	DI
	CALL	C0C5D			; write first operator register
	LD	A,D
	LD	C,83H
	CALL	C0C5D			; write second operator register

;	  Subroutine KEY OFF
;	     Inputs  ________________________
;	     Outputs ________________________


C0C50:	RES	5,(IX+20)		; KEY OFF
	LD	A,(IX+20)
	PUSH	AF
	LD	A,0B0H
	JP	J078D			; write channel register

;	  Subroutine write operator register
;	     Inputs  C = base register, E = offset, A = data
;	     Outputs ________________________


C0C5D:	PUSH	AF
	LD	A,C
	ADD	A,E
	JP	J0790			; write register


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C0C63:	LD	B,9
	LD	IX,I3000
J0C69:	LD	A,(IX+30)
	AND	A			; counter already zero ?
	JR	Z,J0C7D			; yep, next channel
	DEC	(IX+30)			; decrease counter
	JR	NZ,J0C7D
	PUSH	BC
	PUSH	IX
	CALL	C0C04			; counter reached zero, both Y8950: key off
	POP	IX
	POP	BC
J0C7D:	LD	DE,64
	ADD	IX,DE
	DJNZ	J0C69			; next channel
	RET

;	  Subroutine FM function for audio keyboard
;	     Inputs  ________________________
;	     Outputs ________________________


C0C85:	CALL	C074B			; quit if channel disabled
	LD	A,C
	CP	25
	RET	NC
	LD	HL,I0C92
	JP	J0DD0

I0C92:	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0CC4			; 18, add1 word BLOCK/F-NUMBER
	DEFW	C0DDB
	DEFW	C0CCC			; 20, KEY ON/KEY OFF
	DEFW	C0CE0			; 21, set audio keyboard volume
	DEFW	C0DDB
	DEFW	C0CE8			; 23, set channel volume
	DEFW	C0CF1			; 24, add2 word BLOCK/F-NUMBER

C0CC4:	LD	(IX+18),E
	LD	(IX+19),D
	JR	J0CF9

C0CCC:	RES	5,(IX+20)		; KEY OFF
	BIT	5,E
	JR	Z,J0CD8
	SET	5,(IX+20)		; KEY ON
J0CD8:	LD	A,(IX+20)
	LD	C,0B0H
	JP	C0775			; write register if channel enabled (EI)

C0CE0:	LD	A,E
	AND	3FH
	LD	(IX+21),A		; audio keyboard volume
	JR	J0CEE

C0CE8:	LD	A,E
	AND	0FH
	LD	(IX+23),A		; channel volume
J0CEE:	JP	C0FAC			; write TOTAL LEVEL both operators and quit

C0CF1:	RES	7,D
	LD	(IX+24),E
	LD	(IX+25),D		; add2 word BLOCK/F-NUMBER
J0CF9:	JP	C0EAB			; calculate and write BLOCK/F-NUMBER

;	  Subroutine set predefined instrument
;	     Inputs  ________________________
;	     Outputs ________________________


C0CFC:	CALL	C074B			; quit if channel disabled
	LD	A,C
	BIT	7,A			; b7 set ?
	JR	Z,J0D1E			; nope,
	AND	7FH
	CP	20H
	CCF				; normal instrument 80H-9FH ?
	RET	NC			; yep, quit
	CP	24H			; rhythm instrument A0H-A3H ?
	RET	NC			; nope, quit
	LD	(IX+26),A
	LD	IY,I1096
	JR	J0D32

;	  Subroutine set custom made instrument
;	     Inputs  ________________________
;	     Outputs ________________________


C0D16:	CALL	C074B			; quit if channel disabled
	PUSH	BC
	POP	IY
	JR	J0D3D

J0D1E:	CP	64			; instrument 0-63 ?
	RET	NC			; nope, quit
	LD	(IX+26),A
	LD	IY,(D3380)
	CP	32			; instrument 0-31 ?
	JR	C,J0D32			; yep, use
	AND	1FH
	LD	IY,(D3382)
J0D32:	ADD	A,A
	ADD	A,A
	LD	L,A
	LD	H,00H
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	EX	DE,HL
	ADD	IY,DE
J0D3D:	LD	E,(IY+8)
	LD	D,(IY+9)
	LD	C,16			; base word BLOCK/F-NUMBER
	CALL	C0DBE			; FM function
	BIT	0,(IY+10)
	LD	E,0FFH
	LD	C,3			; SUSTAIN LEVEL/RELEASE RATE first operator
	CALL	NZ,C0DBE		; yep, FM function
	LD	E,(IY+16)
	LD	C,0			; AM/VIB/EG/KSR/MULTI first operator
	CALL	C0DBE			; FM function
	LD	E,(IY+24)
	LD	C,8			; AM/VIB/EG/KSR/MULTI second operator
	CALL	C0DBE			; FM function
	LD	E,(IY+17)
	LD	C,1			; KSL first operator
	CALL	C0DBE			; FM function
	LD	E,(IY+25)
	LD	C,9			; KSL second operator
	CALL	C0DBE			; FM function
	LD	E,(IY+18)
	LD	C,2			; ATTACK/DECAY RATE first operator
	CALL	C0DBE			; FM function
	LD	E,(IY+26)
	LD	C,10			; ATTACK/DECAY RATE second operator
	CALL	C0DBE			; FM function
	LD	E,(IY+19)
	LD	C,3			; SUSTAIN LEVEL/RELEASE RATE first operator
	CALL	C0DBE			; FM function
	LD	E,(IY+27)
	LD	C,11			; SUSTAIN LEVEL/RELEASE RATE second operator
	CALL	C0DBE			; FM function
	LD	A,(IY+20)
	AND	0F0H
	LD	(IX+4),A		; volume selector 1st operator
	LD	A,(IY+28)
	AND	0F0H
	LD	(IX+12),A		; volume selector 2nd operator
	LD	A,(IY+17)
	AND	3FH
	LD	(IX+5),A		; TOTAL LEVEL add 1st operator
	LD	A,(IY+25)
	AND	3FH
	LD	(IX+13),A		; TOTAL LEVEL add 2nd operator
	LD	E,(IY+10)
	LD	C,22			; FEEDBACK/CONNECTION/AM/VIB
	CALL	C0DBE			; FM function
	JP	C0FAC			; write TOTAL LEVEL both operators

;	  Subroutine FM function
;	     Inputs  C = function
;	     Outputs ________________________


C0DBE:	PUSH	IY
	CALL	C0DC6			; FM function
	POP	IY
	RET

;	  Subroutine FM function
;	     Inputs  ________________________
;	     Outputs ________________________


C0DC6:	CALL	C074B			; quit if channel disabled
	LD	A,C
	CP	25
	RET	NC
	LD	HL,I0DDD
J0DD0:	ADD	A,A
	CALL	C01C2			; get table entry
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	CALL	C01C1			; start routine
C0DDB:	AND	A
	RET

I0DDD:	DEFW	C0E0F			; 0, AM/VIB/EG/KSR/MULTI first operator
	DEFW	C0E20			; 1, KSL first operator
	DEFW	C0E42			; 2, ATTACK/DECAY RATE first operator
	DEFW	C0E52			; 3, SUSTAIN LEVEL/RELEASE RATE first operator
	DEFW	C0E62			; 4, set volume selector first operator
	DEFW	C0E72			; 5, set TOTAL LEVEL add first operator
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0E17			; 8, AM/VIB/EG/KSR/MULTI second operator
	DEFW	C0E31			; 9, KSL second operator
	DEFW	C0E4A			; 10, ATTACK/DECAY RATE second operator
	DEFW	C0E5A			; 11, SUSTAIN LEVEL/RELEASE RATE second operator
	DEFW	C0E6A			; 12, set volume selector second operator
	DEFW	C0E7A			; 13, set TOTAL LEVEL add second operator
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0E83			; 16, base word BLOCK/F-NUMBER
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0DDB
	DEFW	C0E8B			; 22, FEEDBACK/CONNECTION/AM/VIB depth
	DEFW	C0DDB
	DEFW	C0DDB

C0E0F:	LD	A,E
	LD	(IX+0),A
	LD	C,20H
	JR	J0E1D			; write register if channel enabled (EI)

C0E17:	LD	A,E
	LD	(IX+8),A
	LD	C,23H
J0E1D:	JP	C0775			; write register if channel enabled (EI)

C0E20:	LD	A,E
	AND	0C0H
	LD	C,A
	LD	A,(IX+1)
	AND	3FH
	OR	C
	LD	(IX+1),A
	LD	C,40H
	JR	J0E1D			; write register if channel enabled (EI)

C0E31:	LD	A,E
	AND	0C0H
	LD	C,A
	LD	A,(IX+9)
	AND	3FH
	OR	C
	LD	(IX+9),A
	LD	C,43H
	JR	J0E1D			; write register if channel enabled (EI)

C0E42:	LD	A,E
	LD	(IX+2),A
	LD	C,60H
	JR	J0E1D			; write register if channel enabled (EI)

C0E4A:	LD	A,E
	LD	(IX+10),A
	LD	C,63H
	JR	J0E1D			; write register if channel enabled (EI)

C0E52:	LD	A,E
	LD	(IX+3),A
	LD	C,80H
	JR	J0E1D			; write register if channel enabled (EI)

C0E5A:	LD	A,E
	LD	(IX+11),A
	LD	C,83H
	JR	J0E1D			; write register if channel enabled (EI)

C0E62:	LD	A,E
	AND	0F0H
	LD	(IX+4),A
	JR	J0E80			; write TOTAL LEVEL both operators

C0E6A:	LD	A,E
	AND	0C0H
	LD	(IX+12),A
	JR	J0E80			; write TOTAL LEVEL both operators

C0E72:	LD	A,E
	AND	3FH
	LD	(IX+5),A
	JR	J0E80			; write TOTAL LEVEL both operators

C0E7A:	LD	A,E
	AND	3FH
	LD	(IX+13),A
J0E80:	JP	C0FAC			; write TOTAL LEVEL both operators

C0E83:	LD	(IX+16),E
	LD	(IX+17),D
	JR	C0EAB			; calculate and write BLOCK/F-NUMBER

C0E8B:	LD	A,E
	LD	(IX+22),A
	LD	C,0C0H
	CALL	C0775			; write FEEDBACK/CONNECTION register if channel enabled (EI)
	BIT	5,A			; b5 set ?
	JR	Z,C0EAB			; nope, calculate and write BLOCK/F-NUMBER and quit
	LD	C,A
	PUSH	IX
	POP	HL
	BIT	5,L
	LD	IY,I3280
	JR	Z,J0EA8
	LD	IY,I32C0
J0EA8:	CALL	C08D1			; set AM and VIB depth

;	  Subroutine calculate and write BLOCK/F-NUMBER
;	     Inputs  ________________________
;	     Outputs ________________________


C0EAB:	CALL	C0EC6			; calculate BLOCK/F-NUMBER

;	  Subroutine write KEY/BLOCK/F-NUMBER
;	     Inputs  ________________________
;	     Outputs ________________________


C0EAE:	BIT	2,(IX+27)		; channel enabled ?
	RET	NZ			; nope, quit
	LD	A,(IX+20)
	LD	C,0B0H
	DI
	CALL	C0EC1			; write channel register
	LD	A,(IX+31)
	LD	C,0A0H
					; write channel register

;	  Subroutine write channel register
;	     Inputs  C = base register
;	     Outputs ________________________


C0EC1:	PUSH	AF
	LD	A,C
	JP	J078D			; write channel register

;	  Subroutine calculate BLOCK/F-NUMBER
;	     Inputs  ________________________
;	     Outputs ________________________


C0EC6:	AND	A
	LD	C,(IX+27)
	BIT	2,C			; channel enabled ?
	RET	NZ			; nope, quit
	LD	L,(IX+16)
	LD	H,(IX+17)
	BIT	4,(IX+22)		; b4 set ?
	JR	NZ,J0EF4		; yep, do not use add1,add2 and pitch/transpose
	LD	E,(IX+24)
	LD	D,(IX+25)
	ADD	HL,DE
	LD	E,(IX+18)
	LD	D,(IX+19)
	ADD	HL,DE
	LD	DE,(D32A0)		; PITCH/TRANSPOSE 1st Y8950
	BIT	0,C
	JR	Z,J0EF3
	LD	DE,(D32E0)		; PITCH/TRANSPOSE 2nd Y8950
J0EF3:	ADD	HL,DE
J0EF4:	LD	DE,0529H
	ADD	HL,DE
	LD	A,H
	AND	A
	JP	P,J0F0D
	CP	0C4H
	JR	NC,J0F08
J0F01:	SUB	0CH
	JP	M,J0F01
	JR	J0F0D
J0F08:	ADD	A,0CH
	JP	M,J0F08
J0F0D:	LD	H,A
	LD	C,L
	LD	L,00H
	LD	DE,0F404H
	SUB	3CH
	JR	C,J0F1B
	LD	H,A
	LD	L,14H
J0F1B:	ADD	HL,DE
	JP	C,J0F1B
	SBC	HL,DE
	LD	B,L
	LD	A,H
	ADD	A,H
	ADD	A,H
	LD	HL,I0F88
	CALL	C01C2			; get table entry
	LD	A,B
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,0
	LD	B,L
	ADD	HL,HL
	JR	NC,J0F38
	ADD	HL,BC
J0F38:	ADD	HL,HL
	JR	NC,J0F3C
	ADD	HL,BC
J0F3C:	ADD	HL,HL
	JR	NC,J0F40
	ADD	HL,BC
J0F40:	ADD	HL,HL
	JR	NC,J0F44
	ADD	HL,BC
J0F44:	ADD	HL,HL
	JR	NC,J0F48
	ADD	HL,BC
J0F48:	ADD	HL,HL
	JR	NC,J0F4C
	ADD	HL,BC
J0F4C:	ADD	HL,HL
	JR	NC,J0F50
	ADD	HL,BC
J0F50:	ADD	HL,HL
	JR	NC,J0F54
	ADD	HL,BC
J0F54:	LD	L,H
	LD	H,B
	ADD	HL,DE
	SRL	H
	RR	L
	SRL	H
	RR	L
	JR	NC,J0F67
	INC	HL
	BIT	2,H
	JR	Z,J0F67
	DEC	HL
J0F67:	SUB	08H
	JR	NC,J0F73
J0F6B:	SRL	H
	RR	L
	ADD	A,04H
	JR	NZ,J0F6B
J0F73:	CP	20H
	JR	C,J0F79
	LD	A,1CH
J0F79:	OR	H
	LD	H,A
	LD	A,(IX+20)
	AND	20H			; leave KEY ON/OFF alone
	OR	H			; BLOCK/F-NUMBER
	LD	(IX+20),A
	LD	(IX+31),L		; F-NUMBER
	RET

I0F88:	DEFB	000H,008H,079H
	DEFB	079H,008H,081H
	DEFB	0FAH,008H,089H
	DEFB	083H,009H,091H
	DEFB	014H,00AH,099H
	DEFB	0ADH,00AH,0A3H
	DEFB	050H,00BH,0ACH
	DEFB	0FCH,00BH,0B6H
	DEFB	0B2H,00CH,0C2H
	DEFB	074H,00DH,0CDH
	DEFB	041H,00EH,0D9H
	DEFB	01AH,00FH,0E6H

;	  Subroutine write TOTAL LEVEL both operators
;	     Inputs  ________________________
;	     Outputs ________________________


C0FAC:	CALL	C074B
	LD	D,(IX+21)		; audio keyboard volume
	LD	E,(IX+23)		; channel volume (0-15)
	LD	A,E
	OR	(IX+4)			; volume selector 1st operator
	LD	HL,I1006
	CALL	C01C2			; get table entry
	LD	A,(HL)
	ADD	A,(IX+5)
	BIT	0,(IX+22)		; operators in parallel ?
	JR	Z,J0FCA			; nope,
	ADD	A,D
J0FCA:	CP	64
	JR	C,J0FD0
	LD	A,63
J0FD0:	LD	C,A
	LD	A,(IX+1)
	AND	0C0H			; keep KSL
	OR	C			; new TOTAL LEVEL
	LD	(IX+1),A
	LD	C,40H
	DI
	CALL	C0782			; write register
	LD	A,E
	OR	(IX+12)			; volume selector 2nd operator
	LD	HL,I1006
	CALL	C01C2			; get table entry
	LD	A,(HL)
	ADD	A,(IX+13)
	ADD	A,D
	CP	64
	JR	C,J0FF5
	LD	A,63
J0FF5:	LD	C,A
	LD	A,(IX+9)
	AND	0C0H			; keep KSL
	OR	C			; new TOTAL LEVEL
	LD	(IX+9),A
	LD	C,43H
	CALL	C0782			; write register
	AND	A
	RET

I1006:	DEFB	07H,07H,07H,07H,07H,07H,07H,07H
	DEFB	07H,07H,07H,07H,07H,07H,07H,07H

	DEFB	08H,08H,08H,08H,07H,07H,07H,07H
	DEFB	07H,07H,07H,07H,07H,06H,06H,06H

	DEFB	09H,09H,08H,08H,08H,08H,07H,07H
	DEFB	07H,07H,06H,06H,06H,06H,05H,05H

	DEFB	0AH,0AH,09H,09H,09H,08H,08H,07H
	DEFB	07H,07H,06H,06H,06H,05H,05H,04H

	DEFB	0BH,0BH,0AH,0AH,09H,09H,08H,08H
	DEFB	07H,07H,06H,06H,05H,05H,04H,04H

	DEFB	0CH,0BH,0BH,0AH,0AH,09H,08H,08H
	DEFB	07H,06H,06H,05H,05H,04H,03H,03H

	DEFB	0DH,0CH,0CH,0BH,0AH,09H,09H,08H
	DEFB	07H,06H,06H,05H,04H,03H,03H,02H

	DEFB	0EH,0DH,0CH,0BH,0BH,0AH,09H,08H
	DEFB	07H,06H,05H,04H,04H,03H,02H,01H

	DEFB	0FH,0EH,0DH,0CH,0BH,0AH,09H,08H
	DEFB	07H,06H,05H,04H,03H,02H,01H,00H


I1096:	DEFB	"Piano 1 "
	DEFB	00H,00H,0AH,00H,00H,00H,00H,00H
	DEFB	31H,0EH,0D9H,11H,30H,00H,00H,00H
	DEFB	11H,00H,0B2H,0F4H,70H,00H,00H,00H
	DEFB	"Piano 2 "
	DEFB	00H,0CH,08H,00H,00H,00H,00H,00H
	DEFB	30H,0CH,0D9H,10H,30H,00H,00H,00H
	DEFB	10H,00H,0B2H,0F3H,70H,00H,00H,00H
	DEFB	"Violin  "
	DEFB	00H,0CH,6EH,00H,00H,00H,00H,00H
	DEFB	61H,12H,0B4H,14H,10H,00H,00H,00H
	DEFB	61H,00H,56H,17H,80H,00H,00H,00H
	DEFB	"Flute   "
	DEFB	00H,0CH,0EH,00H,00H,00H,00H,00H
	DEFB	61H,20H,6CH,18H,40H,00H,00H,00H
	DEFB	31H,03H,43H,26H,80H,00H,00H,00H
	DEFB	"Clarinet"
	DEFB	00H,0CH,0EH,00H,00H,00H,00H,00H
	DEFB	0A2H,0A0H,88H,14H,40H,00H,00H,00H
	DEFB	30H,00H,54H,06H,80H,00H,00H,00H
	DEFB	"Oboe    "
	DEFB	00H,00H,0AH,00H,00H,00H,00H,00H
	DEFB	31H,20H,72H,0AH,40H,00H,00H,00H
	DEFB	34H,01H,56H,1CH,80H,00H,00H,00H
	DEFB	"Trumpet "
	DEFB	00H,00H,6EH,00H,00H,00H,00H,00H
	DEFB	31H,16H,51H,26H,40H,00H,00H,00H
	DEFB	71H,03H,52H,24H,60H,00H,00H,00H
	DEFB	"PipeOrgn"
	DEFB	00H,00H,0BH,00H,00H,00H,00H,00H
	DEFB	32H,48H,30H,74H,30H,00H,00H,00H
	DEFB	30H,08H,40H,04H,80H,00H,00H,00H
	DEFB	"Xylophon"
	DEFB	00H,00H,0AH,00H,00H,00H,00H,00H
	DEFB	17H,18H,88H,66H,80H,00H,00H,00H
	DEFB	52H,00H,0D9H,24H,80H,00H,00H,00H
	DEFB	"Organ   "
	DEFB	00H,00H,0EDH,00H,00H,00H,00H,00H
	DEFB	0E1H,0AH,0FCH,28H,70H,00H,00H,00H
	DEFB	63H,05H,0F8H,29H,70H,00H,00H,00H
	DEFB	"Guitar  "
	DEFB	00H,00H,0AH,00H,00H,00H,00H,00H
	DEFB	02H,15H,0A3H,75H,20H,00H,00H,00H
	DEFB	41H,00H,0A3H,05H,60H,00H,00H,00H
	DEFB	"Santool "
	DEFB	00H,0F9H,0CH,00H,00H,00H,00H,00H
	DEFB	19H,0CH,0C7H,11H,10H,00H,00H,00H
	DEFB	53H,03H,0F5H,03H,60H,00H,00H,00H
	DEFB	"Elecpian"
	DEFB	00H,0EDH,0EH,00H,00H,00H,00H,00H
	DEFB	23H,09H,0DDH,4AH,20H,00H,00H,00H
	DEFB	43H,00H,0BFH,05H,50H,00H,00H,00H
	DEFB	"Clavicod"
	DEFB	00H,0EDH,0CH,00H,00H,00H,00H,00H
	DEFB	03H,0BH,0A2H,0F4H,20H,00H,00H,00H
	DEFB	09H,08H,0B4H,0F5H,60H,00H,00H,00H
	DEFB	"Harpsicd"
	DEFB	00H,0CH,0DH,00H,00H,00H,00H,00H
	DEFB	01H,06H,0A3H,0F4H,40H,00H,00H,00H
	DEFB	00H,19H,0E2H,0F4H,00H,00H,00H,00H
	DEFB	"Harpscd2"
	DEFB	00H,00H,0CH,00H,00H,00H,00H,00H
	DEFB	01H,0CH,0A0H,01H,20H,00H,00H,00H
	DEFB	01H,08H,0B4H,0F6H,80H,00H,00H,00H
	DEFB	"Vibraphn"
	DEFB	00H,00H,0ECH,00H,00H,00H,00H,00H
	DEFB	0F9H,24H,95H,0E5H,80H,00H,00H,00H
	DEFB	0F1H,00H,0D1H,0F2H,70H,00H,00H,00H
	DEFB	"Koto    "
	DEFB	00H,00H,0CH,00H,00H,00H,00H,00H
	DEFB	13H,09H,0F8H,33H,30H,00H,00H,00H
	DEFB	11H,00H,0B2H,83H,80H,00H,00H,00H
	DEFB	"Taiko   "
	DEFB	00H,0F4H,0EH,00H,00H,00H,00H,00H
	DEFB	01H,09H,0AAH,44H,20H,00H,00H,00H
	DEFB	10H,00H,0C6H,24H,80H,00H,00H,00H
	DEFB	"Engine  "
	DEFB	00H,0E8H,6EH,00H,00H,00H,00H,00H
	DEFB	0E0H,0D9H,11H,04H,40H,00H,00H,00H
	DEFB	0F4H,80H,0F0H,08H,50H,00H,00H,00H
	DEFB	"UFO     "
	DEFB	00H,0CH,0EEH,00H,00H,00H,00H,00H
	DEFB	0FFH,49H,50H,05H,60H,00H,00H,00H
	DEFB	70H,00H,1FH,01H,40H,00H,00H,00H
	DEFB	"SynBell "
	DEFB	00H,00H,0EH,00H,00H,00H,00H,00H
	DEFB	13H,0EH,0F8H,21H,30H,00H,00H,00H
	DEFB	11H,00H,0F2H,0F4H,80H,00H,00H,00H
	DEFB	"Chime   "
	DEFB	00H,00H,0EAH,00H,00H,00H,00H,00H
	DEFB	0A6H,0AH,0BBH,11H,20H,00H,00H,00H
	DEFB	42H,0BH,0F9H,02H,60H,00H,00H,00H
	DEFB	"SynBass "
	DEFB	0F8H,0F3H,0CH,00H,00H,00H,00H,00H
	DEFB	40H,89H,0C7H,14H,40H,00H,00H,00H
	DEFB	31H,00H,0F9H,04H,80H,00H,00H,00H
	DEFB	"Synthsiz"
	DEFB	00H,0E8H,6CH,00H,00H,00H,00H,00H
	DEFB	42H,0BH,94H,33H,00H,00H,00H,00H
	DEFB	44H,05H,0B0H,0F6H,50H,00H,00H,00H
	DEFB	"SynPercu"
	DEFB	00H,0F4H,0EH,00H,00H,00H,00H,00H
	DEFB	01H,09H,0BAH,25H,60H,00H,00H,00H
	DEFB	03H,00H,0D9H,06H,80H,00H,00H,00H
	DEFB	"SynRhyth"
	DEFB	00H,0CH,0FH,00H,00H,00H,00H,00H
	DEFB	41H,05H,0C7H,36H,40H,00H,00H,00H
	DEFB	01H,00H,0DBH,05H,00H,00H,00H,00H
	DEFB	"HarmDrum"
	DEFB	00H,0E1H,0EH,00H,00H,00H,00H,00H
	DEFB	02H,09H,0CBH,39H,60H,00H,00H,00H
	DEFB	03H,00H,0FFH,06H,80H,00H,00H,00H
	DEFB	"Cowbell "
	DEFB	00H,0F4H,0AH,00H,00H,00H,00H,00H
	DEFB	18H,09H,0F8H,26H,20H,00H,00H,00H
	DEFB	11H,00H,0F5H,26H,60H,00H,00H,00H
	DEFB	"ClseHiht"
	DEFB	00H,18H,0EH,00H,00H,00H,00H,00H
	DEFB	0BH,09H,0F0H,01H,80H,00H,00H,00H
	DEFB	04H,00H,0F5H,27H,80H,00H,00H,00H
	DEFB	"SnareDrm"
	DEFB	00H,00H,6EH,00H,00H,00H,00H,00H
	DEFB	40H,07H,0D0H,01H,80H,00H,00H,00H
	DEFB	40H,00H,0D6H,27H,80H,00H,00H,00H
	DEFB	"BassDrum"
	DEFB	00H,0F4H,0CH,00H,00H,00H,00H,00H
	DEFB	00H,07H,0CBH,36H,40H,00H,00H,00H
	DEFB	01H,00H,0E3H,25H,80H,00H,00H,00H

	DEFB	"bassdrum"
	DEFB	00H,39H,18H,00H,00H,00H,00H,00H
	DEFB	20H,11H,89H,0FFH,00H,00H,00H,00H
	DEFB	20H,00H,0F5H,0FFH,00H,00H,00H,00H
	DEFB	"hh,sd   "
	DEFB	00H,00H,1FH,00H,00H,00H,00H,00H
	DEFB	20H,00H,0E7H,0FFH,00H,00H,00H,00H
	DEFB	20H,00H,0E6H,0FFH,00H,00H,00H,00H
	DEFB	"tom,cy  "
	DEFB	00H,46H,1FH,00H,00H,00H,00H,00H
	DEFB	20H,00H,0E5H,0FFH,00H,00H,00H,00H
	DEFB	20H,00H,0F5H,0FFH,00H,00H,00H,00H
	DEFB	"csm     "
	DEFB	00H,00H,81H,00H,00H,00H,00H,00H
	DEFB	21H,3FH,0FFH,0AH,00H,00H,00H,00H
	DEFB	21H,3FH,0FFH,0AH,00H,00H,00H,00H

I1516:	DEFB	"Piano 3 "
	DEFB	00H,00H,08H,00H,00H,00H,00H,00H
	DEFB	11H,09H,0FAH,20H,30H,00H,00H,00H
	DEFB	11H,00H,0B2H,0F4H,70H,00H,00H,00H
	DEFB	"Elecpia2"
	DEFB	00H,00H,00H,00H,00H,00H,00H,00H
	DEFB	11H,11H,0C0H,01H,10H,00H,00H,00H
	DEFB	11H,00H,0B2H,0F4H,80H,00H,00H,00H
	DEFB	"Santool2"
	DEFB	00H,0EDH,0EH,00H,00H,00H,00H,00H
	DEFB	19H,13H,0E7H,21H,80H,00H,00H,00H
	DEFB	53H,03H,95H,03H,60H,00H,00H,00H
	DEFB	"Brass   "
	DEFB	00H,00H,6EH,00H,00H,00H,00H,00H
	DEFB	30H,16H,42H,26H,40H,00H,00H,00H
	DEFB	70H,00H,62H,24H,60H,00H,00H,00H
	DEFB	"Flute 2 "
	DEFB	00H,0CH,0EH,00H,00H,00H,00H,00H
	DEFB	62H,24H,64H,12H,40H,00H,00H,00H
	DEFB	71H,03H,43H,26H,80H,00H,00H,00H
	DEFB	"Clavicd2"
	DEFB	00H,0CH,0AH,00H,00H,00H,00H,00H
	DEFB	21H,05H,90H,02H,50H,00H,00H,00H
	DEFB	03H,03H,0D4H,0F5H,60H,00H,00H,00H
	DEFB	"Clavicd3"
	DEFB	00H,0CH,0AH,00H,00H,00H,00H,00H
	DEFB	01H,06H,90H,03H,40H,00H,00H,00H
	DEFB	03H,03H,0A4H,0F5H,60H,00H,00H,00H
	DEFB	"Koto 2  "
	DEFB	00H,0EDH,0AH,00H,00H,00H,00H,00H
	DEFB	43H,0CH,0B5H,84H,50H,00H,00H,00H
	DEFB	53H,81H,0E9H,04H,60H,00H,00H,00H
	DEFB	"PipeOrg2"
	DEFB	00H,00H,0DH,00H,00H,00H,00H,00H
	DEFB	32H,0DH,40H,04H,30H,00H,00H,00H
	DEFB	30H,08H,30H,03H,80H,00H,00H,00H
	DEFB	"PohdsPLA"
	DEFB	00H,0EDH,0CH,00H,00H,00H,00H,00H
	DEFB	73H,56H,99H,14H,60H,00H,00H,00H
	DEFB	33H,00H,0F5H,15H,80H,00H,00H,00H
	DEFB	"RohdsPRA"
	DEFB	00H,0EDH,0AH,00H,00H,00H,00H,00H
	DEFB	73H,13H,0F9H,33H,60H,00H,00H,00H
	DEFB	13H,00H,0F5H,03H,50H,00H,00H,00H
	DEFB	"Orch L  "
	DEFB	00H,0CH,0EH,00H,00H,00H,00H,00H
	DEFB	61H,11H,76H,23H,40H,00H,00H,00H
	DEFB	21H,00H,54H,06H,70H,00H,00H,00H
	DEFB	"Orch R  "
	DEFB	00H,00H,0FH,00H,00H,00H,00H,00H
	DEFB	62H,11H,74H,25H,60H,00H,00H,00H
	DEFB	70H,03H,4BH,15H,70H,00H,00H,00H
	DEFB	"SynViol "
	DEFB	00H,0CH,0AH,00H,00H,00H,00H,00H
	DEFB	61H,08H,76H,12H,40H,00H,00H,00H
	DEFB	0A1H,02H,54H,07H,80H,00H,00H,00H
	DEFB	"SynOrgan"
	DEFB	00H,0F4H,0AH,00H,00H,00H,00H,00H
	DEFB	61H,08H,75H,14H,40H,00H,00H,00H
	DEFB	78H,08H,0F2H,03H,60H,00H,00H,00H
	DEFB	"SynBrass"
	DEFB	00H,0F4H,0FH,00H,00H,00H,00H,00H
	DEFB	31H,09H,0B6H,03H,40H,00H,00H,00H
	DEFB	71H,00H,0F9H,26H,60H,00H,00H,00H
	DEFB	"Tube    "
	DEFB	00H,0F4H,0AH,00H,00H,00H,00H,00H
	DEFB	61H,0DH,75H,18H,40H,00H,00H,00H
	DEFB	71H,00H,0F2H,03H,60H,00H,00H,00H
	DEFB	"Shamisen"
	DEFB	00H,0EDH,0CH,00H,00H,00H,00H,00H
	DEFB	03H,10H,0A7H,13H,50H,00H,00H,00H
	DEFB	0CH,03H,0FCH,15H,60H,00H,00H,00H
	DEFB	"Magical "
	DEFB	00H,0F4H,0FH,00H,00H,00H,00H,00H
	DEFB	13H,88H,30H,05H,60H,00H,00H,00H
	DEFB	32H,00H,85H,0AFH,40H,00H,00H,00H
	DEFB	"Huwawa  "
	DEFB	00H,00H,0AH,00H,00H,00H,00H,00H
	DEFB	0F1H,14H,23H,14H,20H,00H,00H,00H
	DEFB	31H,00H,40H,09H,80H,00H,00H,00H
	DEFB	"WnderFlt"
	DEFB	00H,00H,0EFH,00H,00H,00H,00H,00H
	DEFB	0F0H,0DH,5AH,06H,40H,00H,00H,00H
	DEFB	74H,40H,43H,0FCH,80H,00H,00H,00H
	DEFB	"Hardrock"
	DEFB	00H,00H,6CH,00H,00H,00H,00H,00H
	DEFB	20H,09H,0C1H,56H,20H,00H,00H,00H
	DEFB	71H,02H,0D5H,06H,60H,00H,00H,00H
	DEFB	"Machine "
	DEFB	00H,0F4H,0CH,00H,00H,00H,00H,00H
	DEFB	30H,00H,40H,04H,80H,00H,00H,00H
	DEFB	32H,00H,40H,74H,30H,00H,00H,00H
	DEFB	"MachineV"
	DEFB	00H,0F4H,06H,00H,00H,00H,00H,00H
	DEFB	30H,00H,40H,04H,80H,00H,00H,00H
	DEFB	32H,00H,40H,74H,30H,00H,00H,00H
	DEFB	"Comic   "
	DEFB	00H,0F4H,0FH,00H,00H,00H,00H,00H
	DEFB	01H,09H,78H,7FH,40H,00H,00H,00H
	DEFB	08H,00H,0F8H,0F9H,00H,00H,00H,00H
	DEFB	"SE_Comic"
	DEFB	00H,0E8H,6AH,00H,00H,00H,00H,00H
	DEFB	0C8H,09H,76H,11H,40H,00H,00H,00H
	DEFB	0C0H,00H,0F7H,0F9H,00H,00H,00H,00H
	DEFB	"SE_Laser"
	DEFB	00H,30H,6EH,00H,00H,00H,00H,00H
	DEFB	49H,09H,0B4H,0FFH,20H,00H,00H,00H
	DEFB	40H,00H,0F9H,05H,60H,00H,00H,00H
	DEFB	"SE_Noise"
	DEFB	00H,24H,0ACH,00H,00H,00H,00H,00H
	DEFB	0CDH,09H,0A2H,00H,80H,00H,00H,00H
	DEFB	42H,00H,0F0H,01H,80H,00H,00H,00H
	DEFB	"SE_Star "
	DEFB	00H,00H,6EH,00H,00H,00H,00H,00H
	DEFB	51H,10H,13H,42H,40H,00H,00H,00H
	DEFB	42H,00H,10H,01H,50H,00H,00H,00H
	DEFB	"SE_Star2"
	DEFB	00H,24H,6EH,00H,00H,00H,00H,00H
	DEFB	51H,10H,13H,42H,40H,00H,00H,00H
	DEFB	42H,00H,10H,01H,50H,00H,00H,00H
	DEFB	"Engine 2"
	DEFB	00H,0E8H,0CH,00H,00H,00H,00H,00H
	DEFB	30H,0FH,23H,26H,40H,00H,00H,00H
	DEFB	34H,07H,70H,02H,50H,00H,00H,00H
	DEFB	"Silence "
	DEFB	00H,00H,00H,00H,00H,00H,00H,00H
	DEFB	00H,0FFH,00H,0FFH,00H,00H,00H,00H
	DEFB	00H,0FFH,00H,0FFH,00H,00H,00H,00H

;	  Subroutine get first channel parameters
;	     Inputs  ________________________
;	     Outputs ________________________


C1916:	LD	HL,1
	LD	IX,I3000
	RET

;	  Subroutine keyboard channel ?
;	     Inputs  ________________________
;	     Outputs ________________________


C191E:	LD	A,(D3403+0)
	AND	L
	RET	NZ
	LD	A,(D3403+1)
	AND	H
	RET

;	  Subroutine get next channel parameters
;	     Inputs  ________________________
;	     Outputs ________________________


C1928:	LD	BC,64
	ADD	IX,BC
	JR	J1935

;	  Subroutine get next channel parameters with channel counter
;	     Inputs  ________________________
;	     Outputs ________________________


C192F:	INC	C
;	  Subroutine get next channel parameters
;	     Inputs  ________________________
;	     Outputs ________________________

C1930:	LD	DE,64
	ADD	IX,DE
J1935:	ADD	HL,HL
	LD	A,H
	CP	HIGH 0200H
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C193A:	CALL	C1916			; get first channel parameters
J193D:	CALL	C191E			; keyboard channel ?
	JR	Z,J194B			; nope, next
	PUSH	IX
	PUSH	HL
	CALL	C0B08			; initialize channel for audio keyboard both Y8950
	POP	HL
	POP	IX
J194B:	CALL	C1930			; get next channel parameters
	JR	C,J193D			; next channel
	LD	C,0
	CALL	C1C23			; audio keyboard FM play ?
	LD	DE,0
	CALL	C1C12			; audio keyboard FM play ?
	XOR	A
	RET

C195D:	CALL	C1916			; get first channel parameters
	LD	BC,0			; channel counter
J1963:	CALL	C191E			; keyboard channel ?
	JR	Z,J1979			; nope, next
	PUSH	IX
	PUSH	HL
	PUSH	BC
	LD	HL,I3407
	ADD	HL,BC
	LD	(HL),0
	CALL	C0C1F			; both Y8950: operators sustain level 0, key off
	POP	BC
	POP	HL
	POP	IX
J1979:	CALL	C192F			; get next channel parameters with channel counter
	JR	C,J1963
	RET

;	  Subroutine key off on all audio keyboard channels
;	     Inputs  ________________________
;	     Outputs ________________________


C197F:	CALL	C1916			; get first channel parameters
	LD	BC,0
J1985:	CALL	C191E			; keyboard channel ?
	JR	Z,J199B			; nope, next
	PUSH	IX
	PUSH	HL
	PUSH	BC
	LD	HL,I3407
	ADD	HL,BC
	LD	(HL),0
	CALL	C0C04			; both Y8950: key off
	POP	BC
	POP	HL
	POP	IX
J199B:	CALL	C192F			; get next channel parameters with channel counter
	JR	C,J1985
	RET

;	  Subroutine audio keyboard key on/key off
;	     Inputs  D = keynumber, E = velocity
;	     Outputs ________________________


C19A1:	LD	HL,(D3403)
	LD	A,L
	OR	H			; any keyboard channels ?
	RET	Z			; nope, quit
	LD	HL,1			; channel 0
	LD	BC,I3407
J19AD:	LD	A,(D3403+0)
	AND	L			; keyboard channel ?
	JR	NZ,J19B9		; yep,
	LD	A,(D3403+1)
	AND	H			; keyboard channel ?
	JR	Z,J19C3			; nope, next
J19B9:	LD	A,(BC)
	AND	A			; entry in use ?
	JP	P,J19C3			; nope, next
	XOR	D
	AND	7FH			; entry in use by this key ?
	JR	Z,J1A25			; yep, reserve entry+key on OR release entry+key off
J19C3:	INC	BC
	ADD	HL,HL
	LD	A,H
	CP	HIGH 0200H
	JR	C,J19AD			; next channel

	LD	HL,(D3405)		; first channel to check
	LD	BC,(D348C)		; first keyentry to use
J19D1:	LD	A,(D3403+0)
	AND	L			; keyboard channel ?
	JR	NZ,J19DD		; yep,
	LD	A,(D3403+1)
	AND	H			; keyboard channel ?
	JR	Z,J19E1			; nope,
J19DD:	LD	A,(BC)
	RLA				; entry in use ?
	JR	NC,J1A0F		; nope, update channel to use next and reserve entry+key on OR release entry+key off
J19E1:	INC	BC
	ADD	HL,HL
	LD	A,H
	CP	HIGH 0200H		; last channel ?
	JR	C,J19EE
	LD	BC,I3407
	LD	HL,1			; yep, start with channel 0
J19EE:	LD	A,(D3405)
	CP	L			; all channels checked ?
	JR	NZ,J19D1		; nope, next

J19F4:	LD	A,(D3403+0)
	AND	L			; keyboard channel ?
	JR	NZ,J1A0F		; yep,
	LD	A,(D3403+1)
	AND	H			; keyboard channel ?
	JR	NZ,J1A0F		; yep, update channel to use next and reserve entry+key on OR release entry+key off
	INC	BC
	ADD	HL,HL
	LD	A,H
	CP	HIGH 0200H		; last channel ?
	JR	C,J19F4			; nope, next
	LD	BC,I3407
	LD	HL,1			; start with channel 0
	JR	J19F4			; next

J1A0F:	PUSH	BC
	INC	BC
	ADD	HL,HL
	LD	A,H
	CP	HIGH 0200H		; last channel ?
	JR	C,J1A1D			; nope
	LD	BC,I3407
	LD	HL,1			; yep, channel 0
J1A1D:	LD	(D3405),HL
	LD	(D348C),BC
	POP	BC
J1A25:	LD	H,B
	LD	L,C
	LD	(HL),D			; reserve/free entry
	LD	BC,I3407
	XOR	A
	SBC	HL,BC
	SRL	L
	RRA
	SRL	L
	RRA
	LD	B,L
	LD	C,A			; channel*64
	LD	IX,I3000
	ADD	IX,BC			; channel pointer
	LD	C,E			; velocity
	LD	A,D
	AND	A			; key released ?
	JP	P,C0C04			; yep, both Y8950: key off
	CALL	C1A48			; convert audio keyboard key to key value
	JP	C0B7D			; key on both Y8950

;	  Subroutine convert audio keyboard key to key value
;	     Inputs  ________________________
;	     Outputs ________________________


C1A48:	LD	A,D
	SUB	0BCH
	LD	H,0CH
	JR	C,J1A53
J1A4F:	SUB	H
	JP	NC,J1A4F
J1A53:	ADD	A,H
	JP	NC,J1A53
	LD	HL,(D3479)
	ADD	A,L
	LD	L,A
	LD	E,(HL)
	BIT	7,E
	RET	Z
	DEC	D
	RET

;	  Subroutine TEMPER
;	     Inputs  ________________________
;	     Outputs ________________________


C1A62:	LD	A,C
	CP	22
	CCF
	RET	C
	CP	10
	JR	C,J1A6F
	ADD	A,6EH
	JR	J1A74

J1A6F:	ADD	A,A
	ADD	A,A
	LD	H,A
	ADD	A,A
	ADD	A,H
J1A74:	LD	HL,I1B1F
	CALL	C01C2			; get table entry
	LD	DE,9
	ADD	HL,DE
	LD	C,(HL)
	SBC	HL,DE
	LD	DE,I347B
	LD	(D3479),DE
	LD	B,12
J1A8A:	LD	A,(HL)
	SUB	C
	LD	(DE),A
	INC	HL
	INC	DE
	DJNZ	J1A8A
	AND	A
	RET

;	  Subroutine PITCH
;	     Inputs  ________________________
;	     Outputs ________________________


C1A93:	CALL	C1B0B
	RET	C
	PUSH	BC
	LD	(D3490),DE		; pitch value 2nd Y8950
	LD	IY,I32C0
	LD	HL,(D3494)		; transpose value 2nd Y8950
	CALL	C1AB6
	POP	DE
	CALL	C1B0B
	RET	C
	LD	(D348E),DE		; pitch value 1st Y8950
	LD	IY,I3280
	LD	HL,(D3492)		; transpose value 1st Y8950


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C1AB6:	ADD	HL,DE
	EX	DE,HL
	JP	C08E3			; set pitch/transpose all channels

;	  Subroutine TRANSPOSE
;	     Inputs  ________________________
;	     Outputs ________________________


C1ABB:	CALL	C1AE0
	RET	C
	PUSH	BC
	LD	(D3494),DE		; tranpose value 2nd Y8950
	LD	IY,I32C0
	LD	HL,(D3490)		; pitch value 2nd Y8950
	CALL	C1AB6
	POP	DE
	CALL	C1AE0
	RET	C
	LD	(D3492),DE		; transpose value 1st Y8950
	LD	IY,I3280
	LD	HL,(D348E)		; pitch value 1st Y8950
	JR	C1AB6


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C1AE0:	LD	A,D
	AND	A
	PUSH	AF
	CALL	M,C1B03
	LD	A,D
	LD	H,E
	LD	L,00H
	LD	DE,640FH
	ADD	HL,HL
	RLA
	CP	D
	JR	C,J1AF5
	POP	AF
	SCF
	RET

J1AF5:	ADD	HL,HL
	RLA
	CP	D
	JR	C,J1AFC
	SUB	D
	INC	L
J1AFC:	DEC	E
	JP	NZ,J1AF5
	EX	DE,HL
	POP	AF
	RET	P


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C1B03:	XOR	A
	LD	H,A
	LD	L,A
	SBC	HL,DE
	EX	DE,HL
	AND	A
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C1B0B:	LD	HL,0FE34H
	ADD	HL,DE
	RET	C
	LD	HL,0FE66H
	ADD	HL,DE
	CCF
	RET	C
	ADD	HL,HL
	LD	DE,I1BAE
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	RET

I1B1F:	DEFB	0F1H,014H,0FBH,0E2H,005H,0ECH,00FH,0F6H,019H,000H,0E7H,00AH
	DEFB	01AH,0DDH,009H,035H,0F7H,023H,0E6H,012H,0D4H,000H,02CH,0EEH
	DEFB	01EH,005H,00AH,00FH,005H,019H,000H,014H,00AH,000H,014H,00AH
	DEFB	01EH,005H,00AH,00FH,005H,019H,000H,014H,00AH,000H,014H,0FBH
	DEFB	000H,0F6H,00AH,000H,0F6H,00AH,000H,005H,0ECH,000H,005H,0FBH
	DEFB	01AH,001H,009H,00BH,0F7H,015H,001H,012H,006H,000H,010H,0FCH
	DEFB	01AH,001H,009H,00BH,005H,015H,001H,012H,006H,000H,010H,00AH
	DEFB	00FH,000H,005H,00AH,0FBH,014H,0FBH,00AH,005H,000H,00FH,0F6H
	DEFB	01AH,0F8H,009H,027H,0F7H,023H,0F3H,012H,0FDH,000H,02CH,0EEH
	DEFB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H

	DEFB	029H,0DCH,033H,052H,005H,024H,0D7H,02EH
	DEFB	0E1H,000H,056H,00AH,029H,0DCH,033H,052H
	DEFB	005H,024H,0D7H,02EH,0E1H,000H,056H

I1BAE:	DEFW	0FEC7H
	DEFW	0FED2H
	DEFW	0FEDDH
	DEFW	0FEE7H
	DEFW	0FEF2H
	DEFW	0FEFDH
	DEFW	0FF07H
	DEFW	0FF12H
	DEFW	0FF1DH
	DEFW	0FF27H
	DEFW	0FF32H
	DEFW	0FF3CH
	DEFW	0FF47H
	DEFW	0FF51H
	DEFW	0FF5CH
	DEFW	0FF66H
	DEFW	0FF71H
	DEFW	0FF7BH
	DEFW	0FF85H
	DEFW	0FF90H
	DEFW	0FF9AH
	DEFW	0FFA4H
	DEFW	0FFAFH
	DEFW	0FFB9H
	DEFW	0FFC3H
	DEFW	0FFCDH
	DEFW	0FFD8H
	DEFW	0FFE2H
	DEFW	0FFECH
	DEFW	0FFF6H
	DEFW	00000H
	DEFW	0000AH
	DEFW	00014H
	DEFW	0001EH
	DEFW	00028H
	DEFW	00032H
	DEFW	0003CH
	DEFW	00046H
	DEFW	00050H
	DEFW	0005AH
	DEFW	00064H
	DEFW	0006DH
	DEFW	00077H
	DEFW	00081H
	DEFW	0008BH
	DEFW	00095H
	DEFW	0009EH
	DEFW	000A8H
	DEFW	000B2H
	DEFW	000BBH

;	  Subroutine audio keyboard FM play ?
;	     Inputs  ________________________
;	     Outputs ________________________


C1C12:	LD	A,D
	RLC	E
	RLA
	LD	H,0
	JR	NC,J1C1C
	LD	H,0FFH
J1C1C:	LD	L,A
	LD	(D3410),HL
	JP	J1C2C

;	  Subroutine audio keyboard FM play ?
;	     Inputs  ________________________
;	     Outputs ________________________


C1C23:	LD	A,C
	AND	0FH
	LD	(D3412),A
	JP	J1C2C

J1C2C:	LD	DE,(D3410)
	LD	HL,0
	LD	A,(D3412)
	LD	B,4
J1C38:	RRA
	JR	NC,J1C3C
	ADD	HL,DE
J1C3C:	SLA	E
	RL	D
	DJNZ	J1C38
	LD	(D3413),HL
	EX	DE,HL
	CALL	C1916			; get first channel parameters
J1C49:	CALL	C191E			; keyboard channel ?
	JR	Z,J1C77			; nope, next
	PUSH	IX
	PUSH	HL
	PUSH	DE
	LD	HL,(D3415)
	ADD	HL,DE
	EX	DE,HL
	LD	C,18			; set add1 word BLOCK/F-NUMBER
	CALL	C0C85			; FM function for audio keyboard
	POP	DE
	POP	HL
	POP	IX
	PUSH	IX
	PUSH	HL
	PUSH	DE
	LD	BC,32
	ADD	IX,BC
	LD	HL,(D3417)
	ADD	HL,DE
	EX	DE,HL
	LD	C,18			; set add1 word BLOCK/F-NUMBER
	CALL	C0C85			; FM function for audio keyboard
	POP	DE
	POP	HL
	POP	IX
J1C77:	CALL	C1928			; get next channel parameters
	JR	C,J1C49			; next channel
	RET

;	  Subroutine audio keyboard FM play parameters
;	     Inputs  ________________________
;	     Outputs ________________________


C1C7D:	LD	A,C
	CP	18
	JR	Z,J1CB1
	CP	21
	JR	Z,J1C88			; set audio keyboard volume
	AND	A
	RET

J1C88:	PUSH	IY
	CALL	C1916			; get first channel parameters
	BIT	0,(IY+36)		; use 1st Y8950 ?
	JR	Z,J1C97			; yep,
	LD	IX,I3000+32		; use channels 2nd Y8950
J1C97:	PUSH	DE
	CALL	C191E			; keyboard channel ?
	JR	Z,J1CA8			; nope, next
	PUSH	IX
	PUSH	HL
	PUSH	BC
	CALL	C0C85			; FM function for audio keyboard
	POP	BC
	POP	HL
	POP	IX
J1CA8:	CALL	C1930			; get next channel parameters
	POP	DE
	JR	C,J1C97
	POP	IY
	RET

;	  Subroutine set add1 word part A all audio keyboard channels
;	     Inputs  ________________________
;	     Outputs ________________________


J1CB1:	PUSH	IY
	BIT	0,(IY+36)		; use 1st Y8950 ?
	JR	NZ,J1CC3		; nope,
	LD	(D3415),DE
	LD	IX,I3000
	JR	J1CCB

J1CC3:	LD	(D3417),DE
	LD	IX,I3000+32
J1CCB:	LD	HL,(D3413)
	ADD	HL,DE
	EX	DE,HL
	LD	HL,1
J1CD3:	CALL	C191E			; keyboard channel ?
	JR	Z,J1CE5			; nope, next
	PUSH	IX
	PUSH	HL
	PUSH	DE
	LD	C,18			; set add1 word BLOCK/F-NUMBER
	CALL	C0C85			; FM function for audio keyboard
	POP	DE
	POP	HL
	POP	IX
J1CE5:	CALL	C1928			; get next channel parameters
	JR	C,J1CD3
	POP	IY
	RET

;	  Subroutine set predefined instrument audio keyboard channels
;	     Inputs  ________________________
;	     Outputs ________________________


C1CED:	PUSH	IY
	CALL	C1916			; get first channel parameters
	BIT	0,(IY+36)		; use 1st Y8950 ?
	JR	Z,J1CFC			; yep,
	LD	IX,I3000+32
J1CFC:	CALL	C191E			; keyboard channel ?
	JR	Z,J1D0C			; nope, next
	PUSH	IX
	PUSH	HL
	PUSH	BC
	CALL	C0CFC			; set predefined instrument
	POP	BC
	POP	HL
	POP	IX
J1D0C:	CALL	C1930			; get next channel parameters
	JR	C,J1CFC
	POP	IY
	RET

;	  Subroutine FM function on all audio keyboard channels
;	     Inputs  C = function
;	     Outputs ________________________


C1D14:	PUSH	IY
	CALL	C1916			; get first channel parameters
	BIT	0,(IY+36)		; use 1st Y8950 ?
	JR	Z,J1D23			; yep,
	LD	IX,I3000+32
J1D23:	PUSH	DE
	CALL	C191E			; keyboard channel ?
	JR	Z,J1D34			; nope, next
	PUSH	IX
	PUSH	HL
	PUSH	BC
	CALL	C0DC6			; FM function
	POP	BC
	POP	HL
	POP	IX
J1D34:	CALL	C1930			; get next channel parameters
	POP	DE
	JR	C,J1D23
	POP	IY
	RET

;	  Subroutine set custom made instrument audio keyboard channels
;	     Inputs  ________________________
;	     Outputs ________________________


C1D3D:	PUSH	IY
	CALL	C1916			; get first channel parameters
	BIT	0,(IY+36)		; use 1st Y8950 ?
	JR	Z,J1D4C			; yep,
	LD	IX,I3000+32
J1D4C:	CALL	C191E			; keyboard channel ?
	JR	Z,J1D5C			; nope, next
	PUSH	IX
	PUSH	HL
	PUSH	BC
	CALL	C0D16			; set custom made instrument
	POP	BC
	POP	HL
	POP	IX
J1D5C:	CALL	C1930			; get next channel parameters
	JR	C,J1D4C
	POP	IY
	RET

;	  Subroutine audio keyboard
;	     Inputs  ________________________
;	     Outputs ________________________


C1D64:	LD	A,E
	CP	5
	CCF
	RET	C
	ADD	A,A
	LD	E,A
	LD	D,00H
	LD	HL,I1D76
	ADD	HL,DE
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	JP	(HL)

I1D76:	DEFW	C1D80			; 0, set recording mode
	DEFW	C1D90			; 1, stop recording/replaying
	DEFW	C1DD3			; 2, continue recording
	DEFW	C1DE3			; 3, recording
	DEFW	C1E35			; 4, replaying

;	  Subroutine set audio keyboard recording mode
;	     Inputs  ________________________
;	     Outputs ________________________


C1D80:	LD	A,C
	CP	4
	CCF
	RET	C
	DI
	LD	A,(D3496)
	AND	0FCH
	OR	C
	LD	(D3496),A
	RET

C1D90:	LD	A,(D3496)
	BIT	2,A			; recording ?
	LD	DE,D349D
	JR	Z,J1D9D			; nope, get pointer replay buffer
	LD	DE,D3497		; put pointer record buffer
J1D9D:	PUSH	DE
	CALL	C1DA7			; stop audio keyboard replay/recording
	POP	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	OR	A
	RET

;	  Subroutine stop audio keyboard replay/recording
;	     Inputs  ________________________
;	     Outputs ________________________


C1DA7:	DI
	LD	HL,D3496
	LD	A,(HL)
	LD	(D34A5),A		; save audio keyboard state
	BIT	2,A			; recording ?
	JR	Z,J1DCA			; nope,
	RES	2,(HL)			; stop recording
	PUSH	HL
	LD	HL,(D349B)		; end recording buffer
	LD	(D34A6),HL		; save end recording buffer
	LD	HL,(D3497)		; put pointer recording buffer
	LD	(D349B),HL		; end recording buffer
	LD	A,(D34A4)
	LD	(HL),A			; time code
	INC	HL
	LD	(HL),7EH		; key code (= end marker)
	POP	HL
J1DCA:	BIT	3,(HL)			; replaying ?
	RES	3,(HL)			; replaying stopped
	CALL	NZ,C197F		; yep, key off on all audio keyboard channels
	AND	A
	RET

;	  Subroutine continue audio keyboard recording
;	     Inputs  ________________________
;	     Outputs ________________________


C1DD3:	LD	A,(D34A5)
	LD	(D3496),A		; restore audio keyboard state
	BIT	2,A			; recording ?
	RET	Z			; nope, quit
	LD	HL,(D34A6)		; saved end of recording buffer
	LD	(D349B),HL		; end of recording buffer
	RET

;	  Subroutine (append) audio keyboard recording
;	     Inputs  B = append mode (0 = new, <>0 = append)
;	     Outputs ________________________


C1DE3:	LD	A,B
	OR	A
	PUSH	BC
	PUSH	IX
	POP	BC			; BC = start recording buffer
	PUSH	IY
	POP	DE			; DE = end recording buffer
	CALL	NZ,C1E1A		; search end audio keyboard recording
	CALL	NC,C1DF4		; end found OR new recording, set recording buffer
	POP	BC
	RET

;	  Subroutine set recording buffer
;	     Inputs  ________________________
;	     Outputs ________________________


C1DF4:	LD	H,B
	LD	L,C
	LD	A,D
	OR	E
	JR	Z,J1E2C
	DEC	DE
	SBC	HL,DE
	CCF
	RET	C
	INC	DE
	DI
	LD	(D3497),BC		; put pointer recording buffer
	LD	(D3499),BC		; start recording buffer
	LD	(D349B),DE		; end recording buffer
	XOR	A
	LD	(D34A4),A		; clear audio keyboard recording timer
	LD	A,(D3496)
	SET	2,A
	LD	(D3496),A		; start recording
	RET

;	  Subroutine search end audio keyboard recording
;	     Inputs  BC = start of recording, DE = end of recording
;	     Outputs ________________________


C1E1A:	LD	H,B
	LD	L,C
	LD	A,7EH
J1E1E:	INC	HL
	BIT	7,(HL)
	JR	Z,J1E2E
	INC	HL
J1E24:	INC	HL
	PUSH	HL
	AND	A
	SBC	HL,DE
	POP	HL
	JR	C,J1E1E
J1E2C:	SCF
	RET

J1E2E:	CP	(HL)
	JR	NZ,J1E24
	DEC	HL
	LD	B,H
	LD	C,L
	RET

;	  Subroutine play mk
;	     Inputs  ________________________
;	     Outputs ________________________


C1E35:	LD	A,B
	OR	A
	PUSH	BC
	PUSH	IX
	POP	BC
	PUSH	IY
	POP	DE
	CALL	NZ,C1E46		; yep, use recording buffer for replay
	CALL	C1E4F			; set replay buffer
	POP	BC
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C1E46:	LD	BC,(D3499)		; start of recording buffer
	LD	DE,(D349B)		; end of recording buffer
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C1E4F:	DI
	LD	(D349D),BC		; get pointer replay buffer
	LD	(D349F),BC		; start replay buffer
	LD	(D34A1),DE		; end replay buffer
	LD	A,(BC)
	LD	(D34A3),A		; initialize audio keyboard replay timer
	LD	HL,D3496
	SET	3,(HL)			; start replaying
	RET

C1E66:	LD	A,(D3437)
	RRA				; audio keyboard fm play was enabled ?
	JR	NC,J1E71		; nope,
	PUSH	BC
	CALL	C197F			; key off on all audio keyboard channels
	POP	BC
J1E71:	LD	A,C
	AND	0FH
	LD	(D3436),A		; audio keyboard velocity
	LD	HL,D3437
	LD	(HL),B			; audio keyboard fm play enable flag
	LD	HL,I341B
	LD	DE,I341B+1
	LD	BC,27-1
	XOR	A
	LD	(HL),A
	LDIR
	RET

;	  Subroutine scan AUDIO keyboard
;	     Inputs  ________________________
;	     Outputs ________________________


C1E89:	LD	DE,I341B
	LD	IY,I3280
	CALL	C1F12			; scan keyboard 1st Y8950
	LD	A,(D3391)
	RRA				; 2nd Y8950 found ?
	JR	C,J1EA0			; nope, skip
	LD	IY,I32C0
	CALL	C1F12			; scan keyboard 2nd Y8950
J1EA0:	LD	IX,I341B
	LD	D,84			; keynumber
	LD	E,(IX+27)		; velocity
	LD	B,9
J1EAB:	LD	A,(IX+0)
	OR	(IX+9)			; combine 1st and 2nd scan
	LD	L,(IX+18)		; previous state
	LD	(IX+18),A		; new state
	XOR	L
	JR	Z,J1EC9			; no state change, skip
	PUSH	IX
	LD	C,A
	AND	L			; any key in this row released ?
	CALL	NZ,C1ED4		; yep, call handler for each released key
	XOR	C			; key key in this row pressed ?
	SET	7,D
	CALL	NZ,C1ED4		; yep, call handler for each released key
	POP	IX
J1EC9:	INC	IX
	LD	A,D
	AND	7FH			; reset b7
	SUB	6
	LD	D,A
	DJNZ	J1EAB			; next
	RET

;	  Subroutine call handler for each key which state has changed
;	     Inputs  D = base keynumber for row, E = velocity, A = changed state
;	     Outputs ________________________


C1ED4:	PUSH	AF
	PUSH	BC
	PUSH	DE
	RLA
	RLA				; b6 ?
	CALL	C,C1EFA
	DEC	D
	RLA				; b5 ?
	CALL	C,C1EFA
	DEC	D
	RLA				; b4 ?
	CALL	C,C1EFA
	DEC	D
	RLA
	RLA				; b2 ?
	CALL	C,C1EFA
	DEC	D
	RLA				; b1 ?
	CALL	C,C1EFA
	DEC	D
	RLA				; b0 ?
	CALL	C,C1EFA
	POP	DE
	POP	BC
	POP	AF
	RET

;	  Subroutine audio keyboard key pressed/released
;	     Inputs  D = keynumber, E = velocity
;	     Outputs ________________________


C1EFA:	PUSH	AF
	LD	A,(D3437)
	RRA				; audio keyboard enabled ?
	JR	NC,J1F06		; nope,
	PUSH	DE
	CALL	C19A1			; audio keyboard key on/key off
	POP	DE
J1F06:	PUSH	DE
	LD	HL,(D3370)
	LD	A,L
	OR	H
	CALL	NZ,C01C1		; start routine
	POP	DE
	POP	AF
	RET

;	  Subroutine scan AUDIO keyboard
;	     Inputs  ________________________
;	     Outputs ________________________


C1F12:	LD	B,80H			; row 7
J1F14:	LD	A,B
	LD	C,6
	CALL	C0758			; write Y8950 KEYBOARD OUT register
	JR	J1F1C			; ?? some kind of wait ??

J1F1C:	DEC	C
	CALL	C07B9			; read Y8950 KEYBOARD IN register
	CPL
	LD	H,A
	AND	77H			; discharge b7 and b3
	LD	(DE),A
	INC	DE
	RR	B
	JP	NZ,J1F14		; next row
	LD	A,H
	RRCA
	AND	40H
	LD	(DE),A			; b7 row 0
	INC	DE
	RET

;	  Subroutine initialize source and destination for operation
;	     Inputs  IX = pointer to source, IY = pointer to destination
;	     Outputs ________________________


C1F32:	PUSH	BC
	PUSH	IY
	JR	J1F3A

;	  Subroutine initialize source and destination with same operation
;	     Inputs  IX = pointer to source
;	     Outputs ________________________


C1F37:	PUSH	BC
	PUSH	IX
J1F3A:	PUSH	IX
	POP	HL
	LD	DE,D3438
	LD	BC,16
	PUSH	BC
	LDIR
	POP	BC
	POP	HL
	LDIR
	POP	BC
	RET

;	  Subroutine PCM VOL
;	     Inputs  ________________________
;	     Outputs ________________________


C1F4C:	LD	A,C
	AND	3FH
	LD	(IY+18),A

;	  Subroutine set AD output level
;	     Inputs  ________________________
;	     Outputs ________________________


C1F52:	LD	A,(IY+52)
	AND	A			; in ?? mode ?
	LD	A,(IY+18)		; PCM VOL
	JR	Z,J1F67			; nope, use
	ADD	A,(IY+51)		; variable offset
	ADD	A,(IY+40)		; base offset
	CP	64
	JR	C,J1F67
	LD	A,63			; ADPCM output level 0
J1F67:	LD	HL,I1F85
	CALL	C01C2			; get table entry
	LD	A,(HL)
	LD	C,18
	RST	18H			; write Y8950 register (EI)
	RET

;	  Subroutine set PCM sample volume
;	     Inputs  ________________________
;	     Outputs ________________________


C1F72:	LD	A,C
	AND	07H
	LD	(IY+23),A

;	  Subroutine write DAC-DATA
;	     Inputs  ________________________
;	     Outputs ________________________


C1F78:	XOR	A
	LD	C,21
	RST	18H			; write Y8950 DAC-DATA register (EI)
	INC	C
	RST	18H			; write Y8950 DAC-DATA register (EI)
	LD	A,(IY+23)
	INC	C
	RST	18H			; write Y8950 DAC-DATA register (EI)
	AND	A
	RET

I1F85:	DEFB	0FFH,0EBH,0D7H,0C5H,0B5H,0A6H,098H,08CH
	DEFB	080H,075H,06CH,063H,05BH,053H,04CH,046H
	DEFB	040H,03BH,036H,031H,02DH,029H,026H,023H
	DEFB	020H,01DH,01BH,019H,017H,015H,013H,011H
	DEFB	010H,00FH,00DH,00CH,00BH,00AH,00AH,009H
	DEFB	008H,007H,007H,006H,006H,005H,005H,004H
	DEFB	004H,004H,003H,003H,003H,003H,002H,002H
	DEFB	002H,002H,002H,002H,001H,001H,001H,000H

;	  Subroutine enable/disable DAC output
;	     Inputs  C(b2)=0 disable DAC output, C(b2)=1,C(b0)=enable/disable
;	     Outputs ________________________


C1FC5:	BIT	2,C
	JR	NZ,J1FCF
	LD	C,0
	JR	J1FCF

;	  Subroutine enable DAC output
;	     Inputs  ________________________
;	     Outputs ________________________


C1FCD:	LD	C,1
J1FCF:	LD	A,C
	AND	01H
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	C,A			; in b3
	LD	A,(IY+25)
	AND	07H			; leave b2-b0
	OR	C
	LD	(IY+25),A
	XOR	08H
	LD	C,19H
	RST	18H			; write Y8950 register (EI)
	RET

;	  Subroutine source ready for transfer ?
;	     Inputs  ________________________
;	     Outputs ________________________


C1FE5:	BIT	1,(IY+36)		; Y8950 found ?
	SCF
	RET	NZ			; nope, quit with error
	CALL	C07CE			; read Y8950 status (EI)
	RRA				; PCM.BSY ?
	RET	C			; yep, quit
	LD	A,(D3438+0)		; source memory type

;	  Subroutine ready for transfer ?
;	     Inputs  ________________________
;	     Outputs ________________________


C1FF3:	CP	2			; sample RAM/ROM 1st Y8950 ?
	JR	NC,J1FFB
	IN	A,(0C0H)		; read 1st Y8950 status
	RRA				; PCM.BSY in Cx
	RET

J1FFB:	CP	4			; RAM ?
	RET	Z			; yep, quit (always ready)
	JR	NC,J200A
	LD	A,(D32E4)
	BIT	1,A			; 2nd Y8950 found ?
	RET	NZ			; nope, quit
	IN	A,(0C2H)		; read status
	RRA				; PCM.BSY in Cx
	RET

J200A:	CP	5			; VRAM ?
	SCF
	RET	NZ			; nope, quit
	DI
	CALL	C3318
	EI
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2014:	CALL	C1FC5			; enable/disable DAC output
	CALL	C1F52			; set ADPCM output level
	CALL	C2025			; setup sampling rate for recording
	JR	J2052			; setup sampling rate for playing


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C201F:	CALL	C1FC5			; enable/disable DAC output
	CALL	C1F78			; write DAC-DATA for DA conversion

;	  Subroutine setup sampling rate for recording
;	     Inputs  ________________________
;	     Outputs ________________________


C2025:	LD	BC,40601
	LD	HL,54
	LD	DE,(D3438+6)		; sample frequency
	CALL	C2066
	DEC	HL
	DEC	HL
	EX	DE,HL
	LD	HL,0FF1FH
	ADD	HL,DE
	JR	C,J203E
	LD	DE,I00E1
J203E:	LD	HL,0F801H
	ADD	HL,DE
	JR	NC,J2047
	LD	DE,07FFH
J2047:	LD	A,E
	LD	C,13			; PRESCALE LSB
	RST	18H			; write Y8950 register (EI)
	LD	A,D
	INC	C			; PRESCALE MSB
	RST	18H			; write Y8950 register (EI)
	RET

;	  Subroutine setup sampling rate for playing
;	     Inputs  ________________________
;	     Outputs ________________________


C204F:	EX	DE,HL
	JR	J2055

;	  Subroutine setup sampling rate for playing
;	     Inputs  ________________________
;	     Outputs ________________________


J2052:	LD	HL,(D3438+6)		; sample frequency
J2055:	LD	BC,0
	LD	DE,49716
	CALL	C2066
	LD	A,L
	LD	C,16			; DELTA-N LSB
	RST	18H			; write Y8950 register (EI)
	LD	A,H
	INC	C			; DELTA-N MSB
	RST	18H			; write Y8950 register (EI)
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2066:	XOR	A
	SUB	E
	LD	E,A
	LD	A,00H
	SBC	A,D
	LD	D,A
	LD	A,B
	LD	B,16
	SLA	C
	RLA
J2073:	ADC	HL,HL
	JR	C,J2085
	ADD	HL,DE
	JR	C,J207C
	SBC	HL,DE
J207C:	RL	C
	RLA
	DJNZ	J2073
	EX	DE,HL
	LD	H,A
	LD	L,C
	RET

J2085:	ADD	HL,DE
	SCF
	JR	J207C

;	  Subroutine start source operation
;	     Inputs  ________________________
;	     Outputs ________________________


C2089:	PUSH	IX
	LD	IX,D3438
	XOR	A			; read operation
	JR	J209A

;	  Subroutine start destination operation
;	     Inputs  ________________________
;	     Outputs ________________________


C2092:	PUSH	IX
	LD	IX,D3448
	LD	A,8			; write operation
J209A:	PUSH	IY
	OR	(IX+0)
	ADD	A,A
	AND	1EH
	LD	C,A
	LD	B,0
	LD	HL,I20EF
	ADD	HL,BC
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(D3466),DE
	LD	HL,I210F
	ADD	HL,BC
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(D346A),DE
	LD	HL,I20CF
	ADD	HL,BC
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(D348A),DE
	EX	DE,HL
	CALL	C01C1			; start routine
	POP	IY
	POP	IX
C20CE:	RET

I20CF:	DEFW	C214C			; 0, start sample RAM read 1st Y8950
	DEFW	C213D			; 1, start sample ROM read 1st Y8950
	DEFW	C2146			; 2, start sample RAM read 2nd Y8950
	DEFW	C2137			; 3, start sample ROM read 2nd Y8950
	DEFW	C21D3			; 4, start RAM read
	DEFW	C21DD			; 5, start VRAM read
	DEFW	C20CE
	DEFW	C20CE

	DEFW	C217A			; 8, start sample RAM write 1st Y8950
	DEFW	C216B			; 9, start sample ROM write 1st Y8950
	DEFW	C2174			; 10, start sample RAM write 2nd Y8950
	DEFW	C2165			; 11, start sample ROM write 2nd Y8950
	DEFW	C21D3			; 12, start RAM write
	DEFW	C21E1			; 13, start VRAM write
	DEFW	C20CE
	DEFW	C20CE

I20EF:	DEFW	C2203			; sample RAM read 1st Y8950
	DEFW	C2203			; sample ROM read 1st Y8950
	DEFW	C220A			; sample RAM read 2nd Y8950
	DEFW	C220A			; sample ROM read 2nd Y8950
	DEFW	C2211			; RAM read
	DEFW	C34B1			; VRAM read
	DEFW	C20CE
	DEFW	C20CE

	DEFW	C221A			; sample RAM write 1st Y8950
	DEFW	C221A			; sample ROM write 1st Y8950
	DEFW	C2223			; sample RAM write 2nd Y8950
	DEFW	C2223			; sample ROM write 2nd Y8950
	DEFW	C222C			; RAM write
	DEFW	C34AE			; VRAM write
	DEFW	C20CE
	DEFW	C20CE

I210F:	DEFW	C2235
	DEFW	C2235
	DEFW	C223D
	DEFW	C223D
	DEFW	C20CE
	DEFW	C2256			; finish VRAM write
	DEFW	C20CE
	DEFW	C20CE

	DEFW	C2235
	DEFW	C2235
	DEFW	C223D
	DEFW	C223D
	DEFW	C20CE
	DEFW	C2256			; finish VRAM read
	DEFW	C20CE
	DEFW	C20CE


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C212F:	LD	HL,(D3466)
	JP	(HL)

;	  Subroutine finish operation
;	     Inputs  ________________________
;	     Outputs ________________________


C2133:	LD	HL,(D346A)
	JP	(HL)

C2137:	LD	IY,I32C0
	JR	J2141

C213D:	LD	IY,I3280
J2141:	CALL	C2191			; setup for sample ROM memory
	JR	J2153

C2146:	LD	IY,I32C0
	JR	J2150

C214C:	LD	IY,I3280
J2150:	CALL	C21AD			; setup for sample RAM memory
J2153:	LD	A,20H			; MEMORY DATA
	LD	(IY+7),A
	LD	C,7
	RST	20H			; write Y8950 register
	LD	C,0FH
	CALL	C07B9			; read Y8950 register (dummy read)
	CALL	C07B9			; read Y8950 register (dummy read)
	JR	J2189

C2165:	LD	IY,I32C0
	JR	J216F

C216B:	LD	IY,I3280
J216F:	CALL	C2191			; setup for sample ROM memory
	JR	J2181

C2174:	LD	IY,I32C0
	JR	J217E

C217A:	LD	IY,I3280
J217E:	CALL	C21AD			; setup for sample RAM memory
J2181:	LD	A,60H			; REC+MEMORY DATA
	LD	(IY+7),A
	LD	C,07H
	RST	20H			; write Y8950 register
J2189:	CALL	C07D1			; read Y8950 status
	BIT	3,A
	JR	Z,J2189
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2191:	LD	A,(IY+8)
	AND	40H
	OR	01H			; ROM
	LD	(IY+8),A
	LD	C,08H
	RST	20H			; write Y8950 register
	LD	L,(IX+2)
	LD	H,(IX+3)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	OR	0E0H
	LD	H,A
	JR	J21C4


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C21AD:	LD	A,(IY+8)
	AND	40H
	LD	(IY+8),A
	LD	C,08H
	RST	20H			; write Y8950 register
	LD	L,(IX+2)
	LD	H,(IX+3)
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
J21C4:	LD	A,L
	INC	C
	RST	20H			; write START ADDRESS LSB Y8950 register
	LD	A,H
	INC	C
	RST	20H			; write START ADDRESS MSB Y8950 register
	LD	A,0FFH
	INC	C
	RST	20H			; write STOP ADDRESS LSB Y8950 register
	INC	C
	RST	20H			; write STOP ADDRESS MSB Y8950 register
	JP	C24D7			; enable EOS and BUF.RDY

C21D3:	LD	L,(IX+2)
	LD	H,(IX+3)
	LD	(D3468),HL
	RET

C21DD:	LD	C,00H
	JR	J21E3

C21E1:	LD	C,40H
J21E3:	LD	L,(IX+2)
	LD	H,(IX+3)
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	AND	07H
	CALL	C34A8			; write VDP cmd
	LD	A,8EH
	CALL	C34A8			; write VDP cmd
	XOR	A
	CALL	C34A8			; write VDP cmd
	LD	A,(IX+2)
	AND	3FH
	OR	C
	JP	C34A8			; write VDP cmd

;	  Subroutine read ADPCM data 1st Y8950
;	     Inputs  ________________________
;	     Outputs ________________________


C2203:	LD	A,15
	OUT	(0C0H),A
	IN	A,(0C1H)		; read register
	RET

;	  Subroutine read ADPCM data 2nd Y8950
;	     Inputs  ________________________
;	     Outputs ________________________


C220A:	LD	A,15
	OUT	(0C2H),A
	IN	A,(0C3H)		; read register
	RET

C2211:	LD	HL,(D3468)
	LD	A,(HL)
	INC	HL
	LD	(D3468),HL
	RET

;	  Subroutine write ADPCM data 1st Y8950
;	     Inputs  ________________________
;	     Outputs ________________________


C221A:	LD	H,A
	LD	A,15
	OUT	(0C0H),A
	LD	A,H
	OUT	(0C1H),A		; write register
	RET

;	  Subroutine write ADPCM data 2nd Y8950
;	     Inputs  ________________________
;	     Outputs ________________________


C2223:	LD	H,A
	LD	A,15
	OUT	(0C2H),A
	LD	A,H
	OUT	(0C3H),A		; write register
	RET

C222C:	LD	HL,(D3468)
	LD	(HL),A
	INC	HL
	LD	(D3468),HL
	RET

C2235:	PUSH	IY
	LD	IY,I3280
	JR	J2243

C223D:	PUSH	IY
	LD	IY,I32C0
J2243:	LD	A,(IY+7)
	OR	01H			; RESET bit
	LD	C,07H
	RST	20H			; write Y8950 register
	XOR	A
	LD	(IY+7),A
	RST	20H			; write Y8950 register
	CALL	C24DB			; disable EOS and BUF.RDY
	POP	IY
	RET

C2256:	XOR	A
	CALL	C34A8			; write VDP cmd
	LD	A,8EH
	JP	C34A8			; write VDP cmd

;	  Subroutine transfer from source to temp buffer
;	     Inputs  ________________________
;	     Outputs ________________________


C225F:	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	DE,I3500
	CALL	C2271			; transfer from source to RAM
	POP	HL
	POP	BC
	POP	DE
	RET

;	  Subroutine transfer from source to RAM
;	     Inputs  IX = source info block, DE = RAM address
;	     Outputs ________________________


C226C:	PUSH	DE
	CALL	C1F32			; initialize source and destination for operation
	POP	DE

;	  Subroutine transfer from source to RAM
;	     Inputs  DE = destination
;	     Outputs ________________________


C2271:	LD	A,(D3438+0)
	CP	4			; source RAM ?
	JR	NZ,J2283		; nope,
	DI
	LD	HL,(D3438+2)		; source start
	LD	BC,256
	LDIR
	JR	J229D			; new source start, decrease blocks

J2283:	CALL	C1FF3			; ready for transfer ?
	RET	C			; not ready, quit
	DI
	PUSH	DE
	CALL	C2089			; start source operation
	POP	DE
	LD	B,0
J228F:	CALL	C212F			; read from source operation
	LD	(DE),A
	INC	DE
	DJNZ	J228F
	CALL	C2133			; finish operation
	LD	HL,(D3438+2)
	INC	HL
J229D:	LD	(D3438+2),HL
	LD	HL,(D3438+4)
	DEC	HL
	LD	(D3438+4),HL
	EI
	AND	A
	RET

;	  Subroutine transfer from temp2 buffer to destination
;	     Inputs  ________________________
;	     Outputs ________________________


C22AA:	PUSH	DE
	LD	DE,I3600
	JR	J22B4

;	  Subroutine transfer from temp buffer to destination
;	     Inputs  ________________________
;	     Outputs ________________________


C22B0:	PUSH	DE
	LD	DE,I3500
J22B4:	PUSH	BC
	PUSH	HL
	CALL	C22C2			; transfer from RAM to destination
	POP	HL
	POP	BC
	POP	DE
	RET

;	  Subroutine transfer from RAM to destination
;	     Inputs  DE = RAM address, IY = destination info block
;	     Outputs ________________________


C22BD:	PUSH	DE
	CALL	C1F32			; initialize source and destination for operation
	POP	DE

;	  Subroutine transfer from RAM to destination
;	     Inputs  ________________________
;	     Outputs ________________________


C22C2:	LD	A,(D3448+0)
	CP	4			; RAM ?
	JR	NZ,J22D7		; nope,
	DI
	EX	DE,HL
	LD	DE,(D3448+2)
	LD	BC,256
	LDIR
	EX	DE,HL
	JR	J22F1

J22D7:	CALL	C1FF3			; ready for transfer ?
	RET	C			; not ready, quit
	DI
	PUSH	DE
	CALL	C2092			; start destination operation
	POP	DE
	LD	B,0
J22E3:	LD	A,(DE)
	INC	DE
	CALL	C212F			; write operation
	DJNZ	J22E3
	CALL	C2133			; finish operation
	LD	HL,(D3448+2)
	INC	HL
J22F1:	LD	(D3448+2),HL
	LD	HL,(D3448+4)
	INC	HL
	LD	(D3448+4),HL
	EI
	AND	A
	RET

;	  Subroutine get size of sample RAM
;	     Inputs  ________________________
;	     Outputs ________________________


C22FE:	XOR	A
	BIT	1,(IY+36)		; Y8950 found ?
	RET	NZ			; nope, quit
	LD	HL,I239A+1		; sample RAM 1st Y8950
	BIT	0,(IY+36)		; use 1st Y8950 ?
	JR	Z,J230E			; yep,
	DEC	HL			; sample RAM 2nd Y8950
J230E:	PUSH	HL
	LD	DE,D3438
	LD	BC,16
	PUSH	BC
	LDIR				; fill source
	POP	BC
	POP	HL
	LDIR				; fill destination
	LD	B,8
	LD	C,0
J2320:	CALL	C236B			; read sample RAM
	PUSH	AF
	INC	C
	DJNZ	J2320
	LD	B,8
	LD	C,0
J232B:	XOR	A
	CALL	C237F			; write 0 byte to sample RAM
	CALL	C236B			; read sample RAM
	AND	A			; still a 0 byte ?
	JR	NZ,J2342		; nope, no RAM
	CPL
	CALL	C237F			; write 0FFH byte to sample RAM
	CALL	C236B			; read sample RAM
	INC	A			; still a 0FFH byte ?
	JR	NZ,J2342		; nope, no RAM
	INC	C
	DJNZ	J232B
J2342:	LD	A,C
	AND	A			; no sample RAM ?
	JR	Z,J235B			; yep,
	LD	B,C			; number of blocks
	DEC	C			; last block
	PUSH	BC
J2349:	LD	A,C
	CALL	C237F			; write block byte to sample RAM
	DEC	C
	DJNZ	J2349			; next block
	POP	BC
J2351:	CALL	C236B			; read sample RAM
	CP	C			; has the correct blocknumber ?
	JR	Z,J235A			; yep,
	DEC	C
	DJNZ	J2351			; next block
J235A:	INC	C			; 0 blocks
J235B:	LD	B,C
	LD	C,7
J235E:	POP	AF
	CALL	C237F			; write sample RAM
	LD	A,C
	AND	A
	JR	Z,J2369
	DEC	C
	JR	NC,J235E		; next block
J2369:	LD	A,B
	RET

;	  Subroutine read sample ram
;	     Inputs  ________________________
;	     Outputs ________________________


C236B:	PUSH	BC
	CALL	C2393
	LD	(D3438+2),HL		; source start block
	CALL	C2089			; start source operation
	CALL	C212F			; read operation
	PUSH	AF
	CALL	C2133			; finish operation
	POP	AF
	POP	BC
	RET

;	  Subroutine write sample ram
;	     Inputs  ________________________
;	     Outputs ________________________


C237F:	PUSH	BC
	PUSH	AF
	CALL	C2393
	LD	(D3448+2),HL		; destination start block
	CALL	C2092			; start destination operation
	POP	AF
	CALL	C212F			; write operation
	CALL	C2133			; finish operation
	POP	BC
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2393:	LD	H,C
	XOR	A
	SRL	H
	RRA
	LD	L,A
	RET

I239A:	DEFB	2
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

;	  Subroutine function 11, play ADPCM sample from sample memory
;	     Inputs  ________________________
;	     Outputs ________________________


C23AB:	LD	A,(D3489)
	AND	A			; repeat flag set ?
	LD	A,20H			; MEMORY DATA
	JR	Z,J23B9			; nope, single play

;	  Subroutine function 42, play repeat ADPCM sample from sample memory
;	     Inputs  ________________________
;	     Outputs ________________________


C23B3:	LD	A,30H			; MEMORY DATA+REPEAT
	JR	J23B9

;	  Subroutine function 12, record ADPCM sample to sample memory
;	     Inputs  ________________________
;	     Outputs ________________________


C23B7:	LD	A,68H			; REC+MEMORY DATA+SP-OFF
J23B9:	PUSH	AF
	CALL	C1F37			; initialize source and destination with same operation
	LD	A,(D3438+0)
	CP	4			; memory RAM or VRAM ?
	JR	NC,J242C		; yep, quit with error
	CP	2
	BIT	0,(IY+36)
	JR	NC,J23D0		; sample memory of 2nd Y8950
	JR	NZ,J242C		; sample memory of 1st Y8950 but sampler of 2nd Y8950, quit with error
	JR	J23D2			; go

J23D0:	JR	Z,J242C			; sample memory of 2nd Y8950 but sampler of 1st Y8950, quit with error
J23D2:	CALL	C1FE5			; sample memory ready for transfer ?
	JR	C,J242C			; nope, quit with error
	CALL	C2014
	CALL	C2431			; setup for sample memory
	JR	C,J242C
	PUSH	IX
	POP	HL
	LD	(IY+37),L
	LD	(IY+38),H		; save pointer to orginal info block
	DI
	POP	AF
	PUSH	AF
	CP	68H			; record sample ?
	JR	NZ,J23FC		; nope,
	CALL	C2BEB			; sync mic
	JR	NC,J23F9		; ok, continue
	POP	HL
	LD	A,3
	EI
	RET

J23F9:	CALL	C24DB			; disable EOS and BUF.RDY
J23FC:	POP	AF
	PUSH	AF
	LD	(IY+7),A
	LD	C,7
	RST	20H			; write Y8950 register
	LD	A,(IY+8)
	INC	C
	RST	20H			; write Y8950 register
	LD	A,(IY+4)
	AND	63H			; do not mask EOS
	OR	08H			; mask BUF.RDY
	LD	B,A
	POP	AF
	CP	30H			; play sample and repeat ?
	LD	A,B
	JR	NZ,J2419
	OR	18H			; yep, mask EOS and BUF.RDY
J2419:	LD	(IY+4),A
	LD	C,4
	RST	20H			; write Y8950 register
	SET	7,(IY+7)		; START
	LD	A,(IY+7)
	LD	C,7
	RST	20H			; write Y8950 register
	AND	A
	EI
	RET

J242C:	POP	AF
	LD	A,1
	SCF
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2431:	LD	HL,(D3438+2)
	LD	DE,(D3438+4)
	LD	A,E
	OR	D
	SCF
	RET	Z
	LD	A,(D3438+0)
	RRA				; sample ROM ?
	JR	C,J2467			; yep,
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,L
	LD	C,9
	RST	20H			; write Y8950 register
	LD	A,H
	INC	C
	RST	20H			; write Y8950 register
	EX	DE,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	DEC	HL
	LD	A,L
	INC	C
	RST	20H			; write Y8950 register
	LD	A,H
	INC	C
	RST	20H			; write Y8950 register
	LD	A,(IY+8)
	AND	40H			; RAM
	LD	(IY+8),A
	RET
;	-----------------
J2467:	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,L
	LD	C,9
	RST	20H			; write Y8950 register
	LD	A,H
	AND	1FH
	INC	C
	RST	20H			; write Y8950 register
	EX	DE,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	DEC	HL
	LD	A,L
	INC	C
	RST	20H			; write Y8950 register
	LD	A,H
	AND	1FH
	INC	C
	RST	20H			; write Y8950 register
	LD	A,(IY+8)
	AND	40H
	OR	01H			; ROM
	LD	(IY+8),A
	RET

;	  Subroutine abort sampling
;	     Inputs  ________________________
;	     Outputs ________________________


C248C:	DI
	BIT	1,(IY+36)		; Y8950 found ?
	JR	NZ,J24CA		; nope, quit
	LD	A,(IY+7)
	AND	0C0H
	CP	0C0H			; START+REC set ?
	JR	Z,J24A3			; yep,
	LD	A,(IY+8)
	AND	0CH
	CP	08H			; SAMPLE set+DA/AD reset ?
J24A3:	PUSH	AF
	LD	A,(IY+8)
	AND	40H
	LD	(IY+8),A
	LD	C,08H
	RST	20H			; write Y8950 register
	LD	A,(IY+7)
	OR	01H			; set RESET bit
	DEC	C
	RST	20H			; write Y8950 register
	AND	0BFH			; clear REC bit
	RST	20H			; write Y8950 register
	CALL	C24DB			; disable EOS and BUF.RDY
	POP	AF
	CALL	Z,C24CD			; was sampling, wait
	XOR	A
	LD	(IY+7),A
	LD	C,7
	RST	20H			; write Y8950 register
	CALL	C1FCD			; enable DAC output
J24CA:	AND	A
	EI
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C24CD:	LD	L,64H
	LD	B,0
J24D1:	DJNZ	J24D1
	DEC	L
	JR	NZ,J24D1
	RET

;	  Subroutine do not mask EOS and BUF.RDY
;	     Inputs  ________________________
;	     Outputs ________________________


C24D7:	LD	C,00H
	JR	J24DD

;	  Subroutine mask EOS and BUF.RDY
;	     Inputs  ________________________
;	     Outputs ________________________


C24DB:	LD	C,18H			; 
J24DD:	LD	A,(IY+4)
	AND	63H
	OR	C
	LD	(IY+4),A
	LD	C,4
	RST	20H			; write Y8950 register
	LD	(IY+52),0		; not in ?? mode
	LD	(IY+50),LOW 03F00H
	LD	(IY+51),HIGH 03F00H	; variable volume offset -> volume 0
	RET

;	  Subroutine EOS interrupt 1st Y8950 handler
;	     Inputs  ________________________
;	     Outputs ________________________


I24F6:	PUSH	IX
	PUSH	IY
	LD	HL,(D3372)
	LD	IY,I3280
	JR	J250E

;	  Subroutine EOS interrupt 2nd Y8950 handler
;	     Inputs  ________________________
;	     Outputs ________________________


I2503:	PUSH	IX
	PUSH	IY
	LD	HL,(D3374)
	LD	IY,I32C0
J250E:	PUSH	HL
	CALL	C248C			; abort sampling
	LD	L,(IY+37)
	LD	H,(IY+38)
	PUSH	HL
	POP	IX			; pointer to orginal info block (sample memory) of sample
	POP	HL
	LD	A,L
	OR	H
	CALL	NZ,C01C1		; start routine
	POP	IY
	POP	IX
	RET

;	  Subroutine function 8, play ADPCM sample
;	     Inputs  ________________________
;	     Outputs ________________________


C2526:	CALL	C2603
	LD	A,1 
	RET	C
	CALL	C2014
	DI
	CALL	C24D7			; enable EOS and BUF.RDY
	CALL	C2089			; start source operation
	LD	(IY+7),80H		; START
	CALL	C260F
	CALL	C212F			; read operation
	LD	B,C
	LD	C,15
	RST	20H			; write Y8950 register
	LD	C,B
	LD	B,255
J2547:	CALL	C212F			; read operation
	LD	H,A
J254B:	IN	A,(C)
	AND	08H
	JP	Z,J254B
	LD	A,15
	OUT	(C),A
	INC	C
	OUT	(C),H
	DEC	C
	LD	A,4
	OUT	(C),A
	LD	A,80H
	INC	C
	OUT	(C),A			; reset IRQ
	DEC	C
	DJNZ	J2547
	CALL	C2C3A			; check if CTRL-STOP pressed
	JR	Z,J257E
	DEC	DE
	LD	A,D
	OR	E
	JR	NZ,J2547
	CALL	C2585
	JR	C,J2547


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2575:	CALL	C2133			; finish operation
	CALL	C248C			; abort sampling
	AND	A
	EI
	RET

J257E:	CALL	C2575
	SCF
	LD	A,3
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2585:	LD	A,(D3489)
	AND	A
	RET	Z
	PUSH	BC
	PUSH	IY
	PUSH	IX
	LD	IX,D3438
	LD	HL,(D348A)
	CALL	C01C1			; start routine
	POP	IX
	POP	IY
	LD	DE,(D3438+4)
	POP	BC
	SCF
	RET

;	  Subroutine function 9, record ADPCM sample
;	     Inputs  ________________________
;	     Outputs ________________________


C25A4:	CALL	C2603
	LD	A,1
	RET	C
	CALL	C2014
	DI
	CALL	C24D7			; enable EOS and BUF.RDY
	CALL	C2092			; start destination operation
	CALL	C2BEB
	JP	C,J257E
	LD	(IY+7),0C8H		; START+REC+SP-OFF
	CALL	C260F
	LD	B,C
	LD	C,15
	CALL	C07B9			; read Y8950 register
J25C7:	CALL	C07D1			; read Y8950 status
	AND	08H
	JR	Z,J25C7
	LD	A,80H			; reset IRQ
	LD	C,4
	RST	20H			; write Y8950 register
	LD	C,B
	LD	B,0
J25D6:	IN	A,(C)
	AND	08H
	JP	Z,J25D6
	LD	A,15
	OUT	(C),A
	INC	C
	IN	H,(C)
	DEC	C
	LD	A,04H
	OUT	(C),A
	LD	A,80H			; reset IRQ
	INC	C
	OUT	(C),A
	DEC	C
	LD	A,H
	CALL	C212F
	DJNZ	J25D6
	CALL	C2C3A			; check if CTRL-STOP pressed
	JP	Z,J257E
	DEC	DE
	LD	A,D
	OR	E
	JR	NZ,J25D6
	JP	C2575


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2603:	CALL	C1F37			; initialize source and destination with same operation
	LD	A,(D3438+0)
	CP	4			; sample RAM/ROM ?
	RET	C			; yep, quit
	JP	C1FE5			; source ready for transfer ?


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C260F:	LD	A,(IY+8)
	AND	40H
	LD	(IY+8),A
	LD	C,08H
	RST	20H			; write Y8950 register
	LD	A,(IY+7)
	DEC	C
	JP	J26F6

;	  Subroutine function 5, play PCM sample
;	     Inputs  ________________________
;	     Outputs ________________________


C2621:	CALL	C26DA
	LD	A,1
	RET	C
	CALL	C201F
	DI
	CALL	C24D7			; enable EOS and BUF.RDY
	CALL	C2089			; start source operation
	LD	DE,000CH		; 7 nothing , 8 set SAMPL+DA/AD
	CALL	C26E0
	LD	B,0
J2639:	CALL	C212F			; read operation
	LD	H,A
	LD	A,4
	OUT	(C),A
J2641:	IN	A,(C)
	AND	10H
	JP	Z,J2641
	LD	A,80H
	INC	C
	OUT	(C),A			; reset IRQ
	DEC	C
	LD	A,15H
	OUT	(C),A
	INC	C
	OUT	(C),H			; DAC DATA
	DEC	C
	DJNZ	J2639
	CALL	C2C3A			; check if CTRL-STOP pressed
	JR	Z,J268D			; yep,
	DEC	DE
	LD	A,D
	OR	E			; blocks left ?
	JR	NZ,J2639		; yep, again
	LD	A,(IX+0)
	CP	4			; source RAM or VRAM ?
	JR	NC,J2682		; yep,
	PUSH	BC
	CALL	C2133			; finish operation
	CALL	C2585
	JR	NC,J2689
	LD	A,(IY+8)
	AND	40H
	OR	0CH			; SAMPL+DA/AD
	LD	(IY+8),A
	LD	C,8
	RST	20H			; write Y8950 register
	POP	BC
	JR	J2639

J2682:	CALL	C2585
	JR	C,J2639
	JR	J268A

J2689:	POP	BC
J268A:	JP	C2575
;	-----------------
J268D:	JP	J257E

;	  Subroutine function 6, record PCM sample
;	     Inputs  ________________________
;	     Outputs ________________________


C2690:	CALL	C26DA
	LD	A,1
	RET	C
	CALL	C201F
	DI
	CALL	C24D7			; enable EOS and BUF.RDY
	CALL	C2092			; start destination operation
	CALL	C2BEB
	JP	C,J268D
	LD	DE,0808H		; 7 set SP-OFF, 8 set SAMPL
	CALL	C26E0
	LD	B,0			; 256 bytes
J26AE:	LD	A,4
	OUT	(C),A
J26B2:	IN	A,(C)
	AND	10H			; BUF.RDY ?
	JP	Z,J26B2			; nope, wait
	LD	A,80H
	INC	C
	OUT	(C),A			; reset IRQ
	DEC	C
	LD	A,1AH
	OUT	(C),A
	INC	C
	IN	A,(C)			; read PCM-DATA
	DEC	C
	CALL	C212F			; write operation
	DJNZ	J26AE
	CALL	C2C3A			; check if CTRL-STOP pressed
	JP	Z,J268D
	DEC	DE
	LD	A,D
	OR	E
	JR	NZ,J26AE
	JP	C2575


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C26DA:	CALL	C1F37			; initialize source and destination with same operation
	JP	C1FE5			; source ready for transfer ?


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C26E0:	LD	A,(IY+7)
	AND	60H
	OR	D
	LD	(IY+7),A
	LD	C,7
	RST	20H			; write Y8950 register
	LD	A,(IY+8)
	AND	40H
	OR	E
	LD	(IY+8),A
	INC	C
J26F6:	RST	20H			; write Y8950 register
	LD	DE,(D3438+4)

;	  Subroutine get Y8950 i/o adres
;	     Inputs  ________________________
;	     Outputs ________________________


C26FB:	LD	C,0C0H
	BIT	0,(IY+36)		; use 1st Y8950 ?
	RET	Z			; yep, I/O adres 0C0H
	LD	C,0C2H			; nope, I/O adres 0C2H
	RET

;	  Subroutine function 0, transfer sample data
;	     Inputs  ________________________
;	     Outputs ________________________


C2705:	CALL	C1F32			; initialize source and destination for operation
	LD	A,4
	CP	(IX+0)			; source RAM ?
	JR	NZ,J272E		; nope,
	CP	(IY+0)			; destination RAM ?
	JR	NZ,J2744		; nope
	LD	HL,(D3438+2)
	LD	DE,(D3448+2)
	LD	BC,(D3438+4)
	LD	(D3448+4),BC
	LD	B,C
	LD	C,0
	LDIR				; copy RAM to RAM
	LD	(D3438+4),BC
	JR	J277E

J272E:	CP	(IY+0)			; destination RAM ?
	JR	Z,J2760			; yep,
J2733:	CALL	C225F			; transfer from source to temp buffer
	CALL	NC,C22B0		; no error, transfer from temp buffer to destination
	JR	C,J277E			; error, quit
	LD	HL,(D3438+4)
	LD	A,L
	OR	H			; blocks left ?
	JR	NZ,J2733		; yep, again
	JR	J277E			; quit

J2744:	LD	DE,(D3438+2)
	INC	D
	LD	(D3438+2),DE		; update source start
	DEC	D
	CALL	C22C2			; transfer from RAM to destination
	JR	C,J277E
	LD	HL,(D3438+4)
	DEC	HL
	LD	(D3438+4),HL		; decrease blocks
	LD	A,L
	OR	H			; blocks left ?
	JR	NZ,J2744		; yep, again
	JR	J277E			; quit

J2760:	LD	DE,(D3448+2)		; destination start
	CALL	C2271			; transfer from source to RAM
	JR	C,J277E			; error, quit
	LD	HL,(D3448+2)
	INC	H
	LD	(D3448+2),HL		; update destination start
	LD	HL,(D3448+4)
	INC	HL
	LD	(D3448+4),HL		; increase blocks
	LD	HL,(D3438+4)
	LD	A,L
	OR	H			; blocks left ?
	JR	NZ,J2760		; yep, again
J277E:	LD	HL,(D3448+4)
	LD	(IX+4),L
	LD	(IX+5),H		; update source start
	RET

;	  Subroutine function 1,
;	     Inputs  ________________________
;	     Outputs ________________________


C2788:	CALL	C27EF
J278B:	CALL	C225F			; transfer from source to temp buffer
	JR	C,J27A1			; transfer error, stop
	LD	HL,I3500
J2793:	LD	A,(HL)
	CALL	C287D			; convert ADPCM byte to PCM bytes
	INC	L
	JR	NZ,J2793		; next byte
	LD	HL,(D3438+4)
	LD	A,L
	OR	H			; blocks left ?
	JR	NZ,J278B		; yep, again
J27A1:	LD	HL,(D3438+2)
	LD	(IX+2),L
	LD	(IX+3),H


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C27AA:	LD	HL,(D3462)
	LD	(IX+8),L
	LD	(IX+9),H
	LD	HL,(D3464)
	LD	(IX+10),L
	LD	(IX+11),H
	RET

;	  Subroutine function 2, convert ADPCM sample data to PCM sample data
;	     Inputs  ________________________
;	     Outputs ________________________


C27BD:	CALL	C27EF
J27C0:	CALL	C225F			; transfer from source to temp buffer
	JR	C,J27DC			; error,
	LD	DE,I3500		; temp buffer = ADPCM buffer
	LD	HL,I3600		; temp2 buffer = PCM buffer
	CALL	C27E1			; convert ADPCM buffer to PCM buffer and transfer to destination
	JR	C,J27DC			; transfer error, stop
	CALL	C27E1			; convert ADPCM buffer to PCM buffer and transfer to destination
	JR	C,J27DC			; transfer error, stop
	LD	HL,(D3438+4)
	LD	A,L
	OR	H			; blocks left ?
	JR	NZ,J27C0		; yep, again
J27DC:	CALL	C27AA
	JR	J2842

;	  Subroutine convert ADPCM buffer to PCM buffer and transfer to destination
;	     Inputs  ________________________
;	     Outputs ________________________


C27E1:	LD	A,(DE)
	INC	E
	CALL	C287D			; convert ADPCM byte to PCM bytes
	LD	(HL),B
	INC	L
	LD	(HL),C
	INC	L
	JR	NZ,C27E1
	JP	C22AA			; transfer from temp2 buffer to destination


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C27EF:	CALL	C1F32			; initialize source and destination for operation
	LD	DE,8000H
	LD	HL,007FH
	BIT	0,C
	JR	Z,J2875
	LD	DE,(D3438+8)
	LD	HL,(D3438+10)
	LD	(D3462),DE
	LD	(D3464),HL
	RET

;	  Subroutine function 3, convert PCM sample data to ADPCM sample data
;	     Inputs  ________________________
;	     Outputs ________________________


C280B:	CALL	C2861			; initialize ?? sample, source and destination for operation
J280E:	CALL	C225F			; transfer from source to temp buffer
	JR	C,J2830			; transfer error, stop
	LD	HL,I3500
	LD	DE,I3600
	CALL	C2855			; convert PCM to ADPCM
	CALL	C225F			; transfer from source to temp buffer
	JR	C,J2830			; transfer error, stop
	CALL	C2855			; convert PCM to ADPCM
	CALL	C22AA			; transfer from temp2 buffer to destination
	JR	C,J2830			; transfer error, stop
	LD	HL,(D3438+4)
	LD	A,L
	OR	H			; blocks left ?
	JR	NZ,J280E		; yep, again
J2830:	LD	HL,(D3462)
	LD	(IY+8),L
	LD	(IY+9),H
	LD	HL,(D3464)
	LD	(IY+10),L
	LD	(IY+11),H
J2842:	LD	HL,(D3448+4)
	LD	(IY+4),L
	LD	(IY+5),H
	LD	HL,(D3438+6)		; sample frequency
	LD	(IY+6),L
	LD	(IY+7),H
	RET

;	  Subroutine convert PCM to ADPCM
;	     Inputs  ________________________
;	     Outputs ________________________


C2855:	LD	B,(HL)
	INC	L
	LD	C,(HL)
	CALL	C2890			; convert 2 PCM bytes to 1 ADPCM byte
	LD	(DE),A
	INC	E
	INC	L
	JR	NZ,C2855
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2861:	CALL	C1F32			; initialize source and destination for operation
	LD	DE,8000H
	LD	HL,007FH
	BIT	0,C
	JR	Z,J2875
	LD	DE,(D3448+8)
	LD	HL,(D3448+10)
J2875:	LD	(D3462),DE
	LD	(D3464),HL
	RET

;	  Subroutine convert 1 ADPCM byte to 2 PCM bytes
;	     Inputs  ________________________
;	     Outputs ________________________


C287D:	PUSH	DE
	PUSH	HL
	PUSH	AF
	RRA
	RRA
	RRA
	RRA				; high nibble
	CALL	C28DF			; convert ADPCM nibble to PCM byte
	LD	B,A
	POP	AF			; low nibble
	CALL	C28DF			; convert ADPCM nibble to PCM byte
	LD	C,A
	POP	HL
	POP	DE
	RET

;	  Subroutine convert 2 PCM bytes to 1 ADPCM byte
;	     Inputs  ________________________
;	     Outputs ________________________


C2890:	PUSH	DE
	PUSH	HL
	LD	A,B
	CALL	C28AB			; convert PCM byte to ADPCM nibble
	LD	B,A
	CALL	C28DF			; convert ADPCM nibble to PCM byte
	LD	A,C
	CALL	C28AB			; convert PCM byte to ADPCM nibble
	LD	C,A
	CALL	C28DF			; convert ADPCM nibble to PCM byte
	LD	A,B
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	OR	C
	POP	HL
	POP	DE
	RET

;	  Subroutine convert PCM byte to ADPCM nibble
;	     Inputs  ________________________
;	     Outputs ________________________


C28AB:	XOR	80H
	LD	H,A
	XOR	A
	LD	L,A
	LD	DE,(D3462)
	SBC	HL,DE
	JR	NC,J28BE
	EX	DE,HL
	LD	HL,1
	SBC	HL,DE
J28BE:	RLA
	LD	DE,(D3464)
	SBC	HL,DE
	JR	NC,J28C8
	ADD	HL,DE
J28C8:	RLA
	SRL	D
	RR	E
	AND	A
	SBC	HL,DE
	JR	NC,J28D3
	ADD	HL,DE
J28D3:	RLA
	SRL	D
	RR	E
	AND	A
	SBC	HL,DE
	RLA
	XOR	07H
	RET

;	  Subroutine convert ADPCM nibble to PCM byte
;	     Inputs  ________________________
;	     Outputs ________________________


C28DF:	PUSH	BC
	AND	0FH
	LD	C,A
	LD	DE,(D3464)
	LD	H,D
	LD	L,E
	LD	B,3
J28EB:	SRL	H
	RR	L
	RRA
	JR	NC,J28F3
	ADD	HL,DE
J28F3:	DJNZ	J28EB
	LD	DE,(D3462)
	RRA
	JR	C,J2904
	ADD	HL,DE
	JR	NC,J290D
	LD	HL,-1
	JR	J290D

J2904:	EX	DE,HL
	AND	A
	SBC	HL,DE
	JR	NC,J290D
	LD	HL,0
J290D:	LD	(D3462),HL
	RES	3,C
	LD	HL,I2957
	ADD	HL,BC
	LD	A,(HL)
	LD	H,B
	LD	L,B
	LD	DE,(D3464)
	LD	B,8
J291F:	SRL	H
	RR	L
	RRA
	JR	NC,J2927
	ADD	HL,DE
J2927:	DJNZ	J291F
	JR	C,J2943
	RLA
	ADC	HL,HL
	JR	C,J2943
	EX	DE,HL
	LD	HL,0A000H
	ADD	HL,DE
	JR	C,J2943
	LD	HL,0FF81H
	ADD	HL,DE
	EX	DE,HL
	JR	C,J2946
	LD	HL,007FH
	JR	J2946

J2943:	LD	HL,6000H
J2946:	LD	(D3464),HL
	LD	HL,(D3462)
	LD	DE,128
	ADD	HL,DE
	JR	NC,J2953
	DEC	H
J2953:	LD	A,H
	XOR	E
	POP	BC
	RET

I2957:	DEFB	039H
	DEFB	039H
	DEFB	039H
	DEFB	039H
	DEFB	04DH
	DEFB	066H
	DEFB	080H
	DEFB	099H

;	  Subroutine function 13
;	     Inputs  DE = pointer to ?, C = , IY = control register pointer
;	     Outputs ________________________


C295F:	BIT	1,(IY+36)		; Y8950 found ?
	JR	NZ,J29A2		; nope, quit with error
	LD	(IY+39),C
	EX	DE,HL
	LD	DE,I3600
	LD	BC,256
	LDIR				; clear temp2 buffer
	LD	BC,16-1
	LD	HL,D3448
	LD	DE,D3448+1
	LD	(HL),0
	LDIR				; clear destination info block
	BIT	0,(IY+36)		; use 1st Y8950 ?
	JR	Z,J2989			; yep,
	LD	A,2
	LD	(D3448+0),A		; destination sample RAM/ROM 2nd Y8950
J2989:	CALL	C248C			; abort sampling
	LD	C,1
	CALL	C29A4
	LD	C,2
	CALL	C29A4
	LD	C,4
	CALL	C29A4
	LD	C,8
	CALL	C29A4
	XOR	A
	RET

J29A2:	SCF
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C29A4:	LD	HL,8000H
	LD	(D3462),HL
	LD	HL,007FH
	LD	(D3464),HL
	LD	B,8
	LD	DE,I3600
	LD	HL,I3500
J29B8:	CALL	C29CF
	PUSH	BC
	LD	B,A
	CALL	C29CF
	LD	C,A
	CALL	C2890			; convert 2 PCM bytes to 1 ADPCM byte
	POP	BC
	LD	(HL),A
	INC	L
	JR	NZ,J29B8
	CALL	C22B0			; transfer from temp buffer to destination
	DJNZ	J29B8
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C29CF:	LD	A,E
	ADD	A,C
	LD	E,A
	LD	A,(DE)
	RET

;	  Subroutine function 15
;	     Inputs  ________________________
;	     Outputs ________________________


C29D4:	BIT	1,(IY+36)		; Y8950 found ?
	JP	NZ,J2A5B		; nope, quit with error
	BIT	7,D
	JP	Z,J2BBE			; decrease volume with stop #2 state
	PUSH	DE
	CALL	C248C			; abort sampling
	LD	C,(IY+39)
	LD	HL,16000
	LD	(D3438+6),HL		; sample frequency 16000
	CALL	C1FC5			; enable/disable DAC output
	POP	AF
	AND	7FH
	CP	2BH
	JR	NC,J29FC
	CP	24H
	JP	NC,J2A5D
J29FC:	CP	5BH
	JR	C,J2A04
	SUB	0CH
	JR	J29FC

J2A04:	CP	2BH
	JR	NC,J2A0C
	ADD	A,0CH
	JR	J2A04

J2A0C:	SUB	2BH
	LD	HL,I2A65
	LD	DE,4
J2A14:	CP	0CH
	JR	C,J2A1D
	ADD	HL,DE
	SUB	0CH
	JR	J2A14

J2A1D:	PUSH	AF
	LD	A,(HL)
	INC	HL
	LD	C,9			; START ADDRESS LSB
	RST	18H			; write Y8950 register (EI)
	LD	A,(HL)
	INC	HL
	INC	C			; START ADDRESS MSB
	RST	18H			; write Y8950 register (EI)
	LD	A,(HL)
	INC	HL
	INC	C			; STOP ADDRESS LSB
	RST	18H			; write Y8950 register (EI)
	LD	A,(HL)
	INC	C			; STOP ADDRESS MSB
	RST	18H			; write Y8950 register (EI)
	POP	AF
	ADD	A,A
	LD	E,A
	LD	D,0
	LD	HL,I2A75
	ADD	HL,DE
	LD	A,(HL)
	INC	HL
	LD	C,16			; DELTA-N LSB
	RST	18H			; write Y8950 register (EI)
	LD	A,(HL)
	INC	C			; DELTA-N MSB
	RST	18H			; write Y8950 register (EI)
	CALL	C2B5F
	DI
	LD	A,(IY+8)
	AND	40H			; reset CSM, MUSIC output, RAM
	LD	(IY+8),A
	LD	C,8
	RST	20H			; write Y8950 register
	LD	A,30H			; MEMORY DATA+REPEAT
	DEC	C
	RST	20H			; write Y8950 register
	SET	7,A			; START
	LD	(IY+7),A
	RST	20H			; write Y8950 register
	EI
	XOR	A
	RET

J2A5B:	SCF
	RET

J2A5D:	SUB	18H
	LD	HL,I2A65
	JP	J2A1D


I2A65:	DEFW	0000H,01FFH
	DEFW	0200H,03FFH
	DEFW	0400H,05FFH
	DEFW	0600H,07FFH

I2A75:	DEFW	08073H
	DEFW	08816H
	DEFW	0902EH
	DEFW	098C1H
	DEFW	0A1D6H
	DEFW	0AB75H
	DEFW	0B5A8H
	DEFW	0C075H
	DEFW	0CBE6H
	DEFW	0D806H
	DEFW	0E4DFH
	DEFW	0F27BH
	DEFW	055BBH
	DEFW	05AD4H
	DEFW	0603AH
	DEFW	065F3H
	DEFW	06C03H
	DEFW	0726FH
	DEFW	0793DH

;	  Subroutine function 14
;	     Inputs  ________________________
;	     Outputs ________________________


C2A9B:	LD	A,(DE)
	INC	DE
	LD	C,A			; TIMER-1 counter
	PUSH	BC
	LD	A,(DE)
	INC	DE
	LD	(IY+40),A		; base offset
	CALL	C2AE9
	LD	(IY+41),C
	LD	(IY+42),B
	CALL	C2AE9
	LD	(IY+43),C
	LD	(IY+44),B
	LD	A,(DE)
	INC	DE
	LD	(IY+45),A
	CALL	C2AE9
	LD	(IY+46),C
	LD	(IY+47),B
	CALL	C2AE9
	LD	(IY+48),C
	LD	(IY+49),B
	POP	BC
	CALL	C07FF			; set TIMER-1 counter
	LD	HL,I2B39
	LD	(I3340+1),HL		; TIMER-1 interrupt handler
	LD	A,(I3280+4)
	RLCA
	RLCA
	RLCA				; T1 and T2 mask
	XOR	03H			; if a timer is masked, then timer is switched off
	AND	03H			; all mask bits off
	OR	01H			; start T1
	LD	C,A
	CALL	C07E0			; start T1,T2 and set masks
	XOR	A
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2AE9:	LD	A,(DE)
	INC	DE
	ADD	A,A
	AND	3EH
	LD	HL,I2AF9
	LD	C,A
	LD	B,00H
	ADD	HL,BC
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	RET

I2AF9:	DEFW	00000H
	DEFW	00001H
	DEFW	00002H
	DEFW	00003H
	DEFW	00004H
	DEFW	00006H
	DEFW	00008H
	DEFW	0000CH
	DEFW	00010H
	DEFW	00018H
	DEFW	00020H
	DEFW	00030H
	DEFW	00040H
	DEFW	00060H
	DEFW	00080H
	DEFW	000C0H
	DEFW	00100H
	DEFW	00180H
	DEFW	00200H
	DEFW	00300H
	DEFW	00400H
	DEFW	00500H
	DEFW	00600H
	DEFW	00700H
	DEFW	00800H
	DEFW	00A00H
	DEFW	00C00H
	DEFW	01000H
	DEFW	01800H
	DEFW	02000H
	DEFW	03000H
	DEFW	03FFFH

;	  Subroutine TIMER-1 interrupt handler
;	     Inputs  ________________________
;	     Outputs ________________________


I2B39:	PUSH	IY
	LD	IY,I3280
	CALL	C2B4C
	LD	IY,I32C0
	CALL	C2B4C
	POP	IY
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2B4C:	LD	A,(IY+52)
	AND	A			; in ?? mode ?
	RET	Z			; nope, quit
	CP	1
	JR	Z,J2B6B			; increase volume state
	CP	2
	JR	Z,J2B87			; decrease volume state
	CP	3
	JR	Z,J2BAB
	JR	J2BC2


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2B5F:	LD	(IY+52),1		; increase volume state
	LD	(IY+50),LOW 03F00H
	LD	(IY+51),HIGH 03F00H	; variable volume offset -> volume 0

J2B6B:	LD	L,(IY+50)
	LD	H,(IY+51)		; variable volume offset
	LD	E,(IY+41)
	LD	D,(IY+42)
	XOR	A
	SBC	HL,DE			; decrease (increases volume)
	JR	Z,J2B7E			; zero, use zero
	JR	NC,J2BD3		; >0, set output level and quit
J2B7E:	LD	HL,0			; use 0
	LD	(IY+52),2		; decrease volume state
	JR	J2BD3			; set output level and quit

J2B87:	LD	L,(IY+50)
	LD	H,(IY+51)
	LD	E,(IY+43)
	LD	D,(IY+44)
	ADD	HL,DE			; increase (decrease volume)
	BIT	6,H			; >63 ?
	JR	Z,J2B9A
	LD	H,3FH			; use 63
J2B9A:	LD	A,H
	CP	(IY+45)			; lower level reached ?
	JR	C,J2BD3			; nope, set output level and quit
	LD	(IY+52),3		; decrease volume with stop #1 state
	LD	H,(IY+45)
	LD	L,0
	JR	J2BD3			; set output level and quit

J2BAB:	LD	L,(IY+50)
	LD	H,(IY+51)
	LD	E,(IY+46)
	LD	D,(IY+47)
	ADD	HL,DE			; increase (decrease volume)
	BIT	6,H			; >63 ?
	JR	NZ,J2BDC		; yep, stop
	JR	J2BD3			; set output level and quit

J2BBE:	LD	(IY+52),4		; decrease volume with stop #2 state
J2BC2:	LD	L,(IY+50)
	LD	H,(IY+51)
	LD	E,(IY+48)
	LD	D,(IY+49)
	ADD	HL,DE			; increase (decrease volume)
	BIT	6,H			; >63 ?
	JR	NZ,J2BDC		; yep, stop
J2BD3:	LD	(IY+50),L
	LD	(IY+51),H
	JP	C1F52			; set ADPCM output level

J2BDC:	LD	(IY+52),0		; stop ?? mode
	LD	(IY+50),LOW 03FFFH
	LD	(IY+51),HIGH 03FFFH	; variable volume offset -> volume 0
	JP	C248C			; abort sampling


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2BEB:	LD	A,(D3488)
	AND	A			; mic sync flag set ?
	RET	Z			; nope, quit
	LD	C,7
	LD	A,08H			; speaker off
	RST	20H			; write Y8950 register
	INC	C			; start AD conversion
	RST	20H			; write Y8950 register
	CALL	C24D7			; enable EOS and BUF.RDY
	CALL	C26FB			; get Y8950 I/O adres
	CALL	C2C11
	PUSH	AF
	LD	C,8
	XOR	A
	RST	20H			; write Y8950 register
	POP	AF
	RET	NC
	DEC	C
	LD	A,(IY+7)
	RST	20H			; write Y8950 register
	CALL	C24DB			; disable EOS and BUF.RDY
	SCF
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2C11:	LD	DE,1080H		; EOS flag
	LD	B,1AH
J2C16:	LD	A,4
	OUT	(C),A			; select Y8950 register 4
J2C1A:	IN	A,(C)
	AND	D
	JP	Z,J2C1A			; wait for flag set
	INC	C
	OUT	(C),E
	DEC	C
	OUT	(C),B
	INC	C
	IN	A,(C)
	DEC	C
	XOR	E
	CP	90H
	RET	NC
	CP	70H
	CCF
	RET	NC
	CALL	C2C3A			; check if CTRL-STOP pressed
	JP	NZ,J2C16
	SCF
	RET

;	  Subroutine check if CTRL-STOP pressed
;	     Inputs  ________________________
;	     Outputs ________________________


C2C3A:	IN	A,(0AAH)
	AND	0F0H
	OR	7
	OUT	(0AAH),A
	IN	A,(0A9H)
	AND	10H
	RET	NZ
	IN	A,(0AAH)
	AND	0F0H
	OR	6
	OUT	(0AAH),A
	IN	A,(0A9H)
	AND	02H
	RET	NZ
	LD	A,(OLDKEY+7)
	AND	0EFH
	LD	(OLDKEY+7),A
	LD	A,(BASROM)
	OR	A
	RET

;	  Subroutine function 25, speech synthesis
;	     Inputs  ________________________
;	     Outputs ________________________


C2C61:	SCF
	BIT	1,(IY+36)		; Y8950 found ?
	RET	NZ			; nope, quit with error
	LD	A,B
	AND	3FH
	LD	(D346C),A		; volume
	LD	(D346F),DE		; buffer
	CALL	C1FC5			; enable/disable DAC output
	DI
	XOR	A
	LD	C,0BDH
	RST	20H			; write Y8950 register
	LD	(D346E),A
	LD	A,80H
	LD	(D346D),A
	CALL	C2CEE
	JR	C,J2CC6			; , quit
	CALL	C2D89			; write F-number and block
	LD	A,78H
	LD	C,4
	RST	20H			; write Y8950 register
	LD	A,80H			; IRQ reset
	RST	20H			; write Y8950 register
	LD	A,(IY+8)
	AND	40H
	OR	80H			; set CSM
	LD	C,8 
	RST	20H			; write Y8950 register
	LD	A,1BH			; mask EOS, mask BUF.RDY, start TIMER-2, start TIMER-1
	LD	C,4
	RST	20H			; write Y8950 register
J2CA0:	CALL	C07D1			; read Y8950 status
	BIT	5,A			; TIMER-2 interrupt ?
	JR	Z,J2CA0			; nope, wait
	LD	A,80H			; reset IRQ
	LD	C,4
	RST	20H			; write Y8950 register
	CALL	C2CEE
	JR	C,J2CC6			; end, quit
J2CB1:	CALL	C07D1			; read Y8950 status
	BIT	5,A			; TIMER-2 interrupt ?
	JR	NZ,J2CA0		; yep,
	BIT	6,A			; TIMER-1 interrupt ?
	JR	Z,J2CB1			; nope, wait
	LD	A,80H			; reset IRQ
	LD	C,4
	RST	20H			; write Y8950 register
	CALL	C2D89			; write F-number and block
	JR	J2CA0			; again

J2CC6:	LD	A,(IY+34)
	LD	C,0BDH
	RST	20H			; write Y8950 register
	LD	A,(IY+8)
	LD	C,8
	RST	20H			; write Y8950 register
	LD	A,(IY+2)
	LD	C,2
	RST	20H			; write Y8950 TIMER-1 register
	LD	A,(IY+3)
	LD	C,3
	RST	20H			; write Y8950 TIMER-2 register
	LD	A,(IY+4)
	LD	C,4
	RST	20H			; write Y8950 register
	LD	A,80H			; reset IRQ
	LD	C,4
	RST	18H			; write Y8950 register (EI)
	CALL	C1FCD			; enable DAC output
	AND	A
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2CEE:	LD	HL,(D346F)
	LD	A,(D346D)
	RLA
	JR	NC,J2D06
	LD	A,(D346E)
	RLA
	RET	C
	LD	A,(HL)
	INC	HL
	LD	(D346E),A
	LD	A,(HL)
	INC	HL
	LD	C,3
	RST	20H			; write Y8950 TIMER-2 register
J2D06:	LD	A,(HL)
	INC	HL
	LD	(D346D),A
	LD	A,(HL)
	INC	HL
	LD	C,2
	RST	20H			; write Y8950 TIMER-1 register
	LD	A,(D346C)
	LD	B,A
	LD	C,40H
	CALL	C2D45			; KSL=0, set TOTAL LEVEL 1st operator chan 0
	CALL	C2D45			; KSL=0, set TOTAL LEVEL 1st operator chan 1
	CALL	C2D45			; KSL=0, set TOTAL LEVEL 1st operator chan 2
	LD	C,48H
	CALL	C2D45			; KSL=0, set TOTAL LEVEL 1st operator chan 3
	CALL	C2D51
	LD	(D3471+0),DE
	CALL	C2D51
	LD	(D3471+2),DE
	CALL	C2D51
	LD	(D3471+4),DE
	CALL	C2D51
	LD	(D3471+6),DE
	LD	(D346F),HL
	AND	A
	RET

;	  Subroutine write TOTAL LEVEL, KSL=0
;	     Inputs  ________________________
;	     Outputs ________________________


C2D45:	LD	A,(HL)
	INC	HL
	ADD	A,B
	CP	40H
	JR	C,J2D4E
	LD	A,3FH
J2D4E:	RST	20H			; write Y8950 register
	INC	C
	RET


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2D51:	LD	A,(HL)
	INC	HL
	PUSH	HL
	LD	D,A
	AND	0FH
	ADD	A,A
	LD	HL,I2D69
	CALL	C01C2			; get table entry
	LD	E,(HL)
	INC	HL
	LD	A,D
	RRA
	RRA
	AND	1CH
	OR	(HL)
	LD	D,A
	POP	HL
	RET

I2D69:	DEFB	06DH,001H
	DEFB	083H,001H
	DEFB	09AH,001H
	DEFB	000H,000H
	DEFB	0B2H,001H
	DEFB	0CCH,001H
	DEFB	0E7H,001H
	DEFB	000H,000H
	DEFB	004H,002H
	DEFB	023H,002H
	DEFB	044H,002H
	DEFB	000H,000H
	DEFB	066H,002H
	DEFB	08BH,002H
	DEFB	0B1H,002H
	DEFB	000H,000H

;	  Subroutine write F-number and block
;	     Inputs  ________________________
;	     Outputs ________________________


C2D89:	LD	HL,D3471
	LD	D,0B0H
	LD	E,0A0H
	CALL	C2D99			; write Y8950 register A0H and B0H
	CALL	C2D99			; write Y8950 register A1H and B1H
	CALL	C2D99			; write Y8950 register A2H and B2H
					; write Y8950 register A3H and B4H

;	  Subroutine write Y8950 registers
;	     Inputs  E = register1, D = register2, HL = table
;	     Outputs ________________________


C2D99:	LD	A,(HL)
	LD	C,E
	RST	20H			; write Y8950 register
	INC	HL
	LD	A,(HL)
	LD	C,D
	RST	20H			; write Y8950 register
	INC	HL
	INC	E
	INC	D
	RET

	DEFS	02F70H-$,0

;	  Subroutine service PSG playvoice
;	     Inputs  ________________________
;	     Outputs ________________________


C2F70:	LD	A,(D7B23)
	LD	B,A
	LD	A,(D7B31)
	SUB	B
	LD	B,A
	CALL	C4010			; get from voicequeue serviced
	RET	Z
	CP	0FFH
	JR	Z,J2FDC
	LD	D,A
	AND	0E0H
	RLCA
	RLCA
	RLCA
	LD	C,A
	LD	A,D
	AND	1FH
	LD	(HL),A
	CALL	C4010			; get from voicequeue serviced
	DEC	HL
	LD	(HL),A
	INC	C
J2F92:	DEC	C
	RET	Z
	CALL	C4010			; get from voicequeue serviced
	LD	D,A
	AND	0C0H
	JR	NZ,J2FAD
	CALL	C4010			; get from voicequeue serviced
	LD	E,A
	LD	A,B
	RLCA
	CALL	C2FF4
	INC	A
	LD	E,D
	CALL	C2FF4
	DEC	C
	JR	J2F92

J2FAD:	LD	H,A
	AND	80H
	JR	Z,J2FC1
	LD	E,D
	LD	A,B
	ADD	A,8
	CALL	C2FF4
	LD	A,E
	AND	10H
	LD	A,13
	CALL	NZ,C2FF4
J2FC1:	LD	A,H
	AND	40H
	JR	Z,J2F92
	CALL	C4010			; get from voicequeue serviced
	LD	D,A
	CALL	C4010			; get from voicequeue serviced
	LD	E,A
	LD	A,11
	CALL	C2FF4
	INC	A
	LD	E,D
	CALL	C2FF4
	DEC	C
	DEC	C
	JR	J2F92

J2FDC:	LD	A,B
	ADD	A,8
	LD	E,00H
	CALL	C2FF4
	INC	B
	DI
	LD	HL,MUSICF
	XOR	A
	SCF
J2FEB:	RLA
	DJNZ	J2FEB
	AND	(HL)
	XOR	(HL)
	LD	(HL),A
	JP	J4013			; clear playvoice bit voicequeue serviced


;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________


C2FF4:	DI
	OUT	(0A0H),A
	PUSH	AF
	LD	A,E
	OUT	(0A1H),A
	POP	AF
	RET

	DEFS	04000H-$,0

	END
