;  
;   AUDIO10 -> Source re-created by Z80DIS 2.2
;      Z80DIS was written by Kenneth Gielow
;                            Palo Alto, CA
;
	.Z80
	ASEG
	ORG	4000H
;
M0006	EQU	0006H	; -C-LI
RDSLT	EQU	000CH	; -C--I
WRSLT	EQU	0014H	; -C---
CALSLT	EQU	001CH	; JC--I
ENASLT	EQU	0024H	; JC---
M002B	EQU	002BH	; ----I
KEYINT	EQU	0038H	; -C--I
GICINI	EQU	0090H	; -C--I
M2F8A	EQU	2F8AH	; -C---
M406F	EQU	406FH
M4666	EQU	4666H
M4C64	EQU	4C64H
M4E9B	EQU	4E9BH
M517A	EQU	517AH
M521C	EQU	521CH
M542F	EQU	542FH
M5EA4	EQU	5EA4H
M67D0	EQU	67D0H
M6A0E	EQU	6A0EH
M73E5	EQU	73E5H

C$0090	EQU	0090H
C$0099	EQU	0099H	; ----I
C$009C	EQU	009CH	; -C---
C$00AB	EQU	00ABH	; -C--I
C$00AE	EQU	00AEH	; ----I
C$00B1	EQU	00B1H	; -C---
C$00B4	EQU	00B4H	; -C--I
J$0312	EQU	0312H	; J----
J$2F70	EQU	2F70H	; J----

I.3000	EQU	3000H	; channel
I.3280	EQU	3280H	; control registers 1st Y8950
I.32C0	EQU	32C0H	; control registers 2nd Y8950
D.3496	EQU	3496H	; ---LI
D.3497	EQU	3497H	; --SL-
D$349B	EQU	349BH	; --S--
D.349D	EQU	349DH	; --SL-
D$34A1	EQU	34A1H	; --S--
D.34A3	EQU	34A3H	; --S-I
I.34A4	EQU	34A4H	; ----I
I$3E89	EQU	3E89H	; general interrupt routine

D$72A3	EQU	72A3H	; ?? 1st Y8950
D$72E3	EQU	72E3H	; ?? 2nd Y8950
D$7300	EQU	7300H	; general interrupt handler
D$7308	EQU	7308H	; should VDP interrupts handled routine
D$7340	EQU	7340H	; TIMER-1 block
D$7344	EQU	7344H	; TIMER-2 block
D$7370	EQU	7370H	; AST MK
D$7372	EQU	7372H	; AST ADPCM 1st Y8950
D$7374	EQU	7374H	; AST ADPCM 2nd Y8950
D$7380	EQU	7380H	; pointer to predefined instrument definitions (00-31)
D.7382	EQU	7382H	; pointer to programable instrument definitions (32-63)
D$7384	EQU	7384H	; pointer to predefined instrument definitions (32-63)
D.7391	EQU	7391H	; 2nd Y8950 available
D$7488	EQU	7488H
D$7489	EQU	7489H
D.7496	EQU	7496H
I.7500	EQU	7500H
I$7510	EQU	7510H
C.7B00	EQU	7B00H
C$7B05	EQU	7B05H
D$7B0A	EQU	7B0AH
D$7B0C	EQU	7B0CH
D.7B0E	EQU	7B0EH	; slotid MSX-AUDIO
D.7B0F	EQU	7B0FH
D.7B10	EQU	7B10H
D.7B11	EQU	7B11H
D.7B12	EQU	7B12H
D.7B13	EQU	7B13H	; audio basic initialized
D.7B14	EQU	7B14H
D.7B15	EQU	7B15H
I.7B16	EQU	7B16H	; number of channels per FM-AUDIO playvoice
D.7B1F	EQU	7B1FH	; audio mode (0-7)
D.7B20	EQU	7B20H
D.7B22	EQU	7B22H
D.7B23	EQU	7B23H
D.7B24	EQU	7B24H
D.7B25	EQU	7B25H
D.7B26	EQU	7B26H
D.7B28	EQU	7B28H
D.7B29	EQU	7B29H
I.7B2A	EQU	7B2AH
D.7B2F	EQU	7B2FH
D.7B30	EQU	7B30H
D.7B31	EQU	7B31H
D.7B32	EQU	7B32H
I$7B34	EQU	7B34H
I$7B70	EQU	7B70H
I.7CF0	EQU	7CF0H
D.7E76	EQU	7E76H
D$7E78	EQU	7E78H
D$7E7A	EQU	7E7AH
J.7E7C	EQU	7E7CH
D.7E82	EQU	7E82H
D.7E84	EQU	7E84H
D.7E86	EQU	7E86H
D.7E87	EQU	7E87H
D.7E88	EQU	7E88H
I$7E89	EQU	7E89H	; general interrupt routine
D.7EAA	EQU	7EAAH
D.7EAC	EQU	7EACH
D.7EAE	EQU	7EAEH
D.7EBA	EQU	7EBAH
D.7EBC	EQU	7EBCH
I$7ECA	EQU	7ECAH
D$7ED0	EQU	7ED0H
D.7EDA	EQU	7EDAH
D$7EDB	EQU	7EDBH
D$7EDC	EQU	7EDCH
D.7EDD	EQU	7EDDH
D.7EDE	EQU	7EDEH
D.7EDF	EQU	7EDFH
D.7EE0	EQU	7EE0H
D$7EE1	EQU	7EE1H
I$7EE2	EQU	7EE2H
D.7EE3	EQU	7EE3H
D.7EE4	EQU	7EE4H
D.7EE8	EQU	7EE8H
D$7EEA	EQU	7EEAH
D.7EEE	EQU	7EEEH	; VRAM mask
D.7EF0	EQU	7EF0H
D$7EF1	EQU	7EF1H
I.7F13	EQU	7F13H
D.7F93	EQU	7F93H
D.7F94	EQU	7F94H
D.7F95	EQU	7F95H
D.7F97	EQU	7F97H
D.7F98	EQU	7F98H
J.7F9A	EQU	7F9AH
I.7FC4	EQU	7FC4H
I$7FC6	EQU	7FC6H
D.7FFE	EQU	7FFEH
I$7FFF	EQU	7FFFH

J$750B	EQU	750BH	; SYNTHE

I.8000	EQU	8000H	; ----I

C.F37D	EQU	0F37DH	; JC---
CLPRM1	EQU	0F398H	; -C---
QUEUES	EQU	0F3F3H	; ---L-
BUF	EQU	0F55EH	; J-SLI
VALTYP	EQU	0F663H	; ---LI
SUBFLG	EQU	0F6A5H	; --S--
STREND	EQU	0F6C6H	; --SL-
DAC	EQU	0F7F6H	; ----I
NULBUF	EQU	0F862H	; --SL-
FILNAM	EQU	0F866H	; ----I
MCLTAB	EQU	0F956H	; --SL-
MODE	EQU	0FAFCH	; ---L-
HOKVLD	EQU	0FB20H	; ----I
PRSCNT	EQU	0FB35H	; --SLI
SAVSP	EQU	0FB36H	; --SL-
VOICEN	EQU	0FB38H	; --SL-
SAVVOL	EQU	0FB39H	; --SL-
MCLLEN	EQU	0FB3BH	; --SLI
MCLPTR	EQU	0FB3CH	; --SL-
MUSICF	EQU	0FB3FH	; --SL-
PLYCNT	EQU	0FB40H	; --S-I
VCBA	EQU	0FB41H	; --S-I
VCBB	EQU	0FB66H	; --S--
VCBC	EQU	0FB8BH	; --S--
BASROM	EQU	0FBB1H	; ---L-
INTFLG	EQU	0FC9BH	; --SL-
EXPTBL	EQU	0FCC1H	; ---LI
SLTTBL	EQU	0FCC5H	; ----I
PROCNM	EQU	0FD89H	; ----I

H.KEYI	EQU	0FD9AH	; ----I
H.PHYD	EQU	0FFA7H	; ---L-
H.ERRO	EQU	0FFB1H	; J---I
H.PLAY	EQU	0FFC5H	; ----I
EXTBIO	EQU	0FFCAH	; ----I
D.FFFF	EQU	0FFFFH	; --S-I


KEYWRD	MACRO	X,Y
G	ASET	0
Q	ASET	0
	IRPC	D,<X>
	IF	G EQ 0
G	ASET	1
	ELSE
	IF	Q NE 0
	IF	Q EQ " "
	DEFB	0FFH
	ELSE
	DEFB	Q
	ENDIF
	ENDIF
Q	ASET	"&D"
	ENDIF
	ENDM
	DEFB	Q+128
	DEFW	Y
	ENDM



;
D.4000:	DEFB	"AB"
D$4002:	DEFW	C$403E
	DEFW	C$40EC
	DEFW	0
	DEFW	0

	DEFS	6,0

?.4010:	JP	C.6B64			; get from voicequeue serviced
?.4013:	JP	J$69EA			; clear playvoice bit voicequeue serviced

;	  Subroutine helper routine CALSLT
;	     Inputs  ________________________
;	     Outputs ________________________

?.4016:	LD	(D.FFFF),A
	LD	A,C
	OUT	(0A8H),A
	LD	A,L
	AND	03H	; 3 
	EX	(SP),HL
	LD	(HL),E
	PUSH	HL
	PUSH	BC
	EXX	
	EX	AF,AF'
	CALL	CLPRM1
	EX	AF,AF'
	EXX	
	POP	BC
	POP	HL
	POP	DE
	LD	A,I
	PUSH	AF
	DI	
	LD	A,D
	OUT	(0A8H),A
	LD	A,B
	LD	(D.FFFF),A
	LD	A,C
	OUT	(0A8H),A
	JP	J$0312

;	  Subroutine cartridge INIT
;	     Inputs  ________________________
;	     Outputs ________________________

C$403E:	XOR	A
	LD	(D.7FFE),A		; select segment 0
	CALL	C$5CD8			; check number of Y8950's
	PUSH	DE			; save number of Y8950's
	LD	B,1
	CALL	C.4E23			; get slotid of page 1 (my slot)
	LD	(D.7B0E),A
	CALL	C$4DEC			; get slotmasks of my slot
	LD	HL,C.7B00
	LD	(HL),0C9H
	LD	D,H
	LD	E,L
	INC	DE
	LD	BC,10-1
	LDIR				; looks like 2 ´hooks´ are intialized
	LD	HL,(M0006)
	LD	(D$7B0C),HL
	CALL	C.4D83			; MSX-AUDIO in page 0
	CALL	C$0090			; ?
	LD	HL,(D$7384)		; pointer to predefined instrument definitions (32-63)
	LD	DE,(D.7382)		; pointer to programable instrument definitions (32-63)
	LD	BC,32*32
	LDIR				; initialize instrument definitions (32-63)
	CALL	C.4D8F			; restore page 0
	POP	DE			; number of Y8950's
	XOR	A
	LD	(D.7B13),A		; AUDIO-BASIC not initialized
	DI	
	LD	A,19H
	OUT	(0C0H),A
	EX	(SP),HL
	EX	(SP),HL
	IN	A,(0C1H)		; read Y8950 I/O-DATA
	AND	04H			; b2 set ?
	JR	NZ,J.4092		; yep, start synthesizer software
	LD	A,E
	AND	01H			; Y8950 on I/O adres 0C0H ?
	RET	Z			; nope, quit
	JP	J$5C13			; initialize EXTBIO and quit

J.4092:	DI	
	LD	HL,I$40A1
	LD	DE,BUF
	LD	BC,C$40AF-I$40A1
	LDIR	
	JP	BUF

I$40A1:	LD	A,1
	LD	(D.7FFE),A		; select segment 1
	EX	(SP),HL
	EX	(SP),HL
	JP	Z,J$750B		; invoked by CALL SYNTHE,
	LD	HL,(D$4002)
	JP	(HL)

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$40AF:	DI	
	LD	HL,D.7B13
	BIT	0,(HL)			; AUDIO-BASIC already initialized ?
	RET	NZ			; nope, quit
	SET	0,(HL)			; flag AUDIO-BASIC initialized
	LD	HL,H.KEYI
	LD	DE,J.7F9A
	PUSH	HL
	CALL	C.40DC
	LD	HL,I$40E2
	POP	DE
	CALL	C.40DC
	LD	A,(D.7B0E)		; slotid MSX-AUDIO
	LD	(H.KEYI+1),A
	LD	HL,I$40E7
	LD	DE,H.PLAY
	CALL	C.40DC
	LD	(H.PLAY+1),A
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.40DC:	LD	BC,5
	LDIR	
	RET	

I$40E2:	RST	30H
	DEFB	0
	DEFW	C$4D5E
	RET	

I$40E7:	RST	30H
	DEFB	0
	DEFW	C$5F8E
	RET	

;	  Subroutine cartridge STATEMENT handler
;	     Inputs  ________________________
;	     Outputs ________________________

C$40EC:	EI	
	PUSH	HL
	LD	HL,PROCNM
	CALL	C$4267
	POP	HL
	RET	C
	PUSH	HL
	LD	HL,C$4308
	OR	A
	SBC	HL,DE
	POP	HL
	JR	Z,J.4111
	PUSH	HL
	LD	HL,C$42EA
	OR	A
	SBC	HL,DE
	POP	HL
	JR	Z,J.4111
	LD	A,(D.7B13)
	AND	01H			; AUDIO-BASIC initialized ?
	SCF	
	RET	Z			; nope, quit and flag "call statement not recognized"
J.4111:	CALL	C$411C
	CALL	C$411A
	EI	
	OR	A
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$411A:	PUSH	DE
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$411C:	PUSH	HL
	PUSH	DE
	LD	HL,-768
	ADD	HL,SP
	JP	NC,J.6EB4
	LD	DE,(STREND)
	OR	A
	SBC	HL,DE
	JP	C,J.6EB4
	POP	DE
	POP	HL
	RET	
;
;	-----------------
I$4132:	DEFB	I.ST_A-I$4148		; A
	DEFB	I.ST_B-I$4148		; B
	DEFB	I.ST_C-I$4148		; C
	DEFB	I.ST__-I$4148		; D
	DEFB	I.ST__-I$4148		; E
	DEFB	I.ST__-I$4148		; F
	DEFB	I.ST__-I$4148		; G
	DEFB	I.ST__-I$4148		; H
	DEFB	I.ST_I-I$4148		; I
	DEFB	I.ST__-I$4148		; J
	DEFB	I.ST_K-I$4148		; K
	DEFB	I.ST_L-I$4148		; L
	DEFB	I.ST_M-I$4148		; M
	DEFB	I.ST__-I$4148		; N
	DEFB	I.ST__-I$4148		; O
	DEFB	I.ST_P-I$4148		; P
	DEFB	I.ST__-I$4148		; Q
	DEFB	I.ST_R-I$4148		; R
	DEFB	I.ST_S-I$4148		; S
	DEFB	I.ST_T-I$4148		; T
	DEFB	I.ST__-I$4148		; U
	DEFB	I.ST_V-I$4148		; V

I$4148:
I.ST_A:	KEYWRD	<AUDIO>,C$4308
	KEYWRD	<AUDREG>,C$48BA
	KEYWRD	<APPEND MK>,C$4981
	KEYWRD	<APEEK>,C$4A2A
	KEYWRD	<APOKE>,C$4A16
I.ST__:	DEFB	0FFH
I.ST_B:	KEYWRD	<BGM>,C$43FB
	DEFB	0FFH
I.ST_C:	KEYWRD	<CONT MK>,C$48B2
	KEYWRD	<COPY PCM>,C$45AB
	KEYWRD	<CONVP>,C$4603
	KEYWRD	<CONVA>,C$45F1
	DEFB	0FFH
I.ST_I:	KEYWRD	<INMK>,C$4AA4
	DEFB	0FFH
I.ST_K:	KEYWRD	<KEY ON>,C$4408
	KEYWRD	<KEY OFF>,C$442D
	DEFB	0FFH
I.ST_L:	KEYWRD	<LOAD PCM>,C$57F1
	DEFB	0FFH
I.ST_M:	KEYWRD	<MK VOICE>,C$5ED7
	KEYWRD	<MK VEL>,C$4462
	KEYWRD	<MK VOL>,C$447F
	KEYWRD	<MK TEMPO>,C$44DF
	KEYWRD	<MK STAT>,C$4A0E
	KEYWRD	<MK PCM>,C$452E
	DEFB	0FFH
I.ST_R:	KEYWRD	<REC MK>,C$499A
	KEYWRD	<RECMOD>,C$456C
	KEYWRD	<REC PCM>,C$514C
	DEFB	0FFH
I.ST_S:	KEYWRD	<STOPM>,C$4879
	KEYWRD	<SET PCM>,C$5021
	KEYWRD	<SAVE PCM>,C$57EE
	KEYWRD	<SYNTHE>,C$42EA
	DEFB	0FFH
I.ST_T:	KEYWRD	<TRANSPOSE>,C$4A82
	KEYWRD	<TEMPER>,C$4A92
	DEFB	0FFH
I.ST_V:	KEYWRD	<VOICE>,C$5D42
	KEYWRD	<VOICE COPY>,C$5DE1
	DEFB	0FFH
I.ST_P:	KEYWRD	<PLAY>,C$5F36
	KEYWRD	<PLAY PCM>,C$5157
	KEYWRD	<PCM FREQ>,C$4581
	KEYWRD	<PCM VOL>,C$44A8
	KEYWRD	<PLAY MK>,C$49A6
	KEYWRD	<PITCH>,C$4A7F
	DEFB	0FFH 

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4267:	LD	A,(HL)
	SUB	41H	; "A"
	RET	C
	CP	16H
	CCF	
	RET	C
	INC	HL
	PUSH	HL
	LD	HL,I$4132
	CALL	C.457C
	LD	A,(HL)
	LD	HL,I$4148
	CALL	C.457C
	EX	DE,HL
	POP	HL
J$4280:	PUSH	HL
	LD	A,(DE)
	INC	A
	JR	Z,J$4290
	CALL	C.4293
	POP	HL
	JR	NZ,J$4280
	EX	DE,HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	RET	
;
;	-----------------
J$4290:	SCF	
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4293:	LD	A,(DE)
	LD	B,A
	AND	7FH
	CP	(HL)
	INC	DE
	INC	HL
	JR	NZ,J$42A4
;
	LD	A,B
	OR	A
	JP	P,C.4293
;
	LD	A,(HL)
	OR	A
	RET	Z
;
J$42A4:	INC	B
	JR	NZ,J$42B1
;
	DEC	HL
J$42A8:	LD	A,(HL)
	CP	20H	; " "
	INC	HL
	JR	Z,J$42A8
;
	DEC	HL
	JR	C.4293
;
;	-----------------
J$42B1:	DEC	DE
J.42B2:	LD	A,(DE)
	INC	DE
	INC	A
	JR	Z,J.42B2
;
	DEC	A
	JP	P,J.42B2
;
	INC	DE
	INC	DE
	RET	

;	  Subroutine check for "(" and evaluate byte operand
;	     Inputs  ________________________
;	     Outputs ________________________

C.42BE:	CALL	C.4FB9			; check for "("
	JP	C.6EFE			; evaluate byte operand 

;	  Subroutine check for end of statement
;	     Inputs  ________________________
;	     Outputs ________________________

C.42C4:	CALL	C.4A0A			; end of statement ?
	JP	NZ,J.6EA8
	RET	

;	  Subroutine evaluate parenthesized byte operand
;	     Inputs  ________________________
;	     Outputs ________________________

C.42CB:	PUSH	BC
	CALL	C.42BE			; check for "(" and evaluate byte operand
	JR	J$42E4

;	  Subroutine evaluate parenthesized adres operand (unused code)
;	     Inputs  ________________________
;	     Outputs ________________________

?.42D1:	PUSH	BC
	CALL	C.4FB9			; check for "("
	JR	J$42E1

;	  Subroutine evaluate two parenthesized adres operands (unused code)
;	     Inputs  ________________________
;	     Outputs ________________________

?.42D7:	CALL	C.4FB9			; check for "("
	CALL	C.6EF8			; evaluate adres operand
	PUSH	DE
	CALL	C.4FB4			; check for ","
J$42E1:	CALL	C.6EF8			; evaluate adres operand
J$42E4:	CALL	C.4FBE			; check for ")"
	POP	BC
	LD	A,E
	RET	

;	  Subroutine CALL SYNTHE
;	     Inputs  ________________________
;	     Outputs ________________________

C$42EA:	CALL	C.42C4			; check for end of statement
	CALL	C.42F3			; try to start synthesizer software
	JP	C.6EAB			; AUDIO-BASIC initialized, illegal function call

;	  Subroutine try to start synthesizer software
;	     Inputs  ________________________
;	     Outputs ________________________

C.42F3:	LD	A,(D.7B13)
	AND	01H			; AUDIO-BASIC initialized ?
	JP	Z,J.4092		; nope, start synthesizer software
	RET	

I$42FC:	DEFB	3			; number of FM-AUDIO playvoices
	DEFB	1			; mode 1
	DEFB	3			; keyboard channels
	DEFB	1,1,1,0,0,0,0,0,0

;	  Subroutine CALL AUDIO
;	     Inputs  ________________________
;	     Outputs ________________________

C$4308:	PUSH	HL
	LD	HL,I$42FC
	LD	DE,BUF
	LD	BC,12
	LDIR				; set defaults
	POP	HL
	CALL	C.4A0A			; end of statement ?
	JR	Z,J$4386		; yep, use defaults
	PUSH	HL
	LD	HL,BUF+0
	LD	DE,BUF+1
	LD	BC,12-1
	LD	(HL),00H
	LDIR				; no defaults
	POP	HL
	CALL	C.4FB9			; check for "("
	CP	","			; mode parameter not specified ?
	JR	Z,J$4340		; yep, use 0
	CALL	C.6EFE			; evaluate byte operand 
	CP	8			; 0-7 ?
	JP	NC,C.6EAB		; nope, illegal function call
	LD	(BUF+1),A
	LD	A,(HL)
	CP	")"			; end of statement ?
	JR	Z,J.4380		; yep,
J$4340:	CALL	C.4FB4			; check for ","
	CP	","			; keyboard parameter not specified ?
	JR	Z,J$4357		; yep, use 0
	CALL	C.6EFE			; evaluate byte operand 
	CP	10			; 0-9 ?
J.434C:	JP	NC,C.6EAB		; nope, illegal function call
	LD	(BUF+2),A
	LD	A,(HL)
	CP	")"			; end of statement ?
	JR	Z,J.4380
J$4357:	LD	B,9			; 9 FM-AUDIO playvoices max
	PUSH	HL
	LD	HL,BUF+3
	EX	(SP),HL
	LD	C,0			; start with playvoice 0
J$4360:	CALL	C.4FB4			; check for ","
	PUSH	BC
	CALL	C.6EFE			; evaluate byte operand 
	POP	BC
	OR	A			; 0 channels ?
	JR	Z,J.434C		; yep, illegal function call
	CP	10			; more as 9 channels ?
	JR	NC,J.434C		; yep, illegal function call
	EX	(SP),HL
	LD	(HL),A
	INC	HL
	INC	C
	EX	(SP),HL
	LD	A,(HL)
	CP	")"			; end of statement ?
	JR	Z,J$437B		; yep,
	DJNZ	J$4360
J$437B:	LD	A,C
	LD	(BUF+0),A		; number of FM-AUDIO playvoices
	POP	BC
J.4380:	CALL	C.4FBE			; check for ")"
	JP	NZ,J.6EA8
J$4386:	PUSH	HL
	LD	HL,BUF+1
	LD	A,(HL)
	AND	01H
	LD	D,A
	ADD	A,A
	ADD	A,D			; drum mode uses 3 channels
	INC	HL
	ADD	A,(HL)			; channels use by keyboard
	INC	HL
	LD	D,A
	LD	A,(BUF+0)
	LD	B,A
	OR	A			; zero FM-AUDIO playvoices ?
	JR	Z,J$43A0		; yep, skip
	XOR	A
J$439C:	ADD	A,(HL)
	INC	HL
	DJNZ	J$439C			; add the number of channels per playvoice
J$43A0:	ADD	A,D
	CP	10			; total of channels 9 or less ?
	JR	NC,J.434C		; nope, illegal function call
	CALL	C.43AA
	POP	HL
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.43AA:	DI	
	LD	HL,BUF
	LD	A,(HL)
	LD	(D.7B15),A		; number of FM-AUDIO playvoices
	INC	HL
	PUSH	HL
	INC	HL
	INC	HL
	LD	DE,I.7B16
	LD	BC,9
	LDIR				; channels per FM-AUDIO playvoice
	POP	HL
	LD	B,(HL)			; mode
	INC	HL
	LD	A,(HL)			; number of keyboard channels
	LD	HL,0
	OR	A
J$43C6:	JR	Z,J$43D0
	SCF	
	RR	H
	RR	L
	DEC	A
	JR	J$43C6
J$43D0:	ADD	HL,HL
	RL	A
	LD	L,H
	LD	H,A			; HL = keyboard channel mask
	LD	A,B
	LD	(D.7B1F),A		; mode
	AND	01H			; drum mode ?
	JR	Z,J$43E9		; nope,
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L			; remove 3 channels from the keyboard channel mask
J$43E9:	EX	DE,HL
	PUSH	DE
	CALL	C$6BD8
	CALL	C.6C3C
	CALL	C$40AF			; hook H.KEYI/H.PLAY
	POP	DE			; keyboard channel mask
	CALL	C$4E89
	JP	C.6C9F

;	  Subroutine CALL BGM
;	     Inputs  ________________________
;	     Outputs ________________________

C$43FB:	CALL	C.42CB			; evaluate parenthesized byte operand
	CP	2			; 0-1 ?
	JP	NC,C.6EAB		; nope, illegal function call
J$4403:	DEC	A
	LD	(D.7B29),A
	RET	

;	  Subroutine CALL KEY ON
;	     Inputs  ________________________
;	     Outputs ________________________

C$4408:	CALL	C.42BE			; check for "(" and evaluate byte operand
	LD	A,E
	OR	A			; 0-127 ?
	JP	M,C.6EAB		; nope, illegal function call
	PUSH	DE
	LD	A,(HL)
	CP	")"
	LD	E,8
	JR	Z,J$4423
	CALL	C.4FB4			; check for ","
	CALL	C.6EFE			; evaluate byte operand 
	CP	16			; 0-15 ?
	JP	NC,C.6EAB		; nope, illegal function call
J$4423:	CALL	C.4FBE			; check for ")"
	POP	BC
	PUSH	HL
	LD	A,C
	OR	80H			; b7 set (key on)
	JR	J$4439

;	  Subroutine CALL KEY OFF
;	     Inputs  ________________________
;	     Outputs ________________________

C$442D:	CALL	C.42CB			; evaluate parenthesized byte operand
	OR	A			; 0-127 ?
	JP	M,C.6EAB		; nope, illegal function call
	AND	7FH
	PUSH	HL
	LD	E,8
J$4439:	LD	D,A
	LD	A,50
	CALL	C.4D6A			; AUDIO BIOS function
	POP	HL
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4441:	CALL	C.4FB9			; check for "("
	CALL	C.6EF8			; evaluate adres operand
	LD	A,(HL)
	CP	")"
	PUSH	DE
	JR	Z,J$4453
	CALL	C.4FB4			; check for ","
	CALL	C.6EF8			; evaluate adres operand
J$4453:	CALL	C.4FBE			; check for ")"
;
	POP	BC
	LD	A,E
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4459:	LD	A,D
	AND	A
	SCF	
	RET	NZ
;
	LD	A,E
	CP	40H	; "@"
	CCF	
	RET	

;	  Subroutine CALL MK VEL
;	     Inputs  ________________________
;	     Outputs ________________________

C$4462:	CALL	C.42CB			; evaluate parenthesized byte operand
	PUSH	HL
	CALL	C$446E
	JP	C,C.6EAB		; illegal function call
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$446E:	CP	10H	; 16 
	CCF	
	RET	C
;
	LD	C,A
	LD	B,01H	; 1 
	LD	A,03H	; 3 
	LD	HL,C$00AB
	CALL	C.4D6D			; start routine in MSX-AUDIO BIOS
;
	AND	A
	RET	

;	  Subroutine CALL MK VOL
;	     Inputs  ________________________
;	     Outputs ________________________

C$447F:	CALL	C.4441
	PUSH	HL
	CALL	C$448B
	JP	C,C.6EAB		; illegal function call
	POP	HL
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$448B:	PUSH	BC
	LD	IY,I.32C0
	CALL	C$4499
	POP	DE
	RET	C
	LD	IY,I.3280

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4499:	CALL	C.4459
	RET	C
	CPL	
	LD	E,A
	LD	C,15H
	LD	A,53
J.44A3:	CALL	C.4D6A			; AUDIO BIOS function
	AND	A
	RET	

;	  Subroutine CALL PCM VOL
;	     Inputs  ________________________
;	     Outputs ________________________

C$44A8:	CALL	C.4441
	PUSH	HL
	CALL	C.44B4
	JP	C,C.6EAB		; illegal function call
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.44B4:	PUSH	BC
	LD	IY,I.32C0
	CALL	C$44C2
	POP	DE
	RET	C
	LD	IY,I.3280

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$44C2:	CALL	C.4459
	RET	C
	PUSH	AF
	CPL	
	AND	3FH
	LD	C,A
	LD	A,7
	CALL	C.4D6A			; AUDIO BIOS function
	POP	AF
	AND	38H
	RRA	
	RRA	
	RRA	
	JR	NZ,J$44D9
	INC	A
J$44D9:	LD	C,A
	LD	A,4
	JP	J.44A3			; AUDIO BIOS function and quit

;	  Subroutine CALL MK TEMPO
;	     Inputs  ________________________
;	     Outputs ________________________


C$44DF:	CALL	C.4FB9			; check for "("
	LD	A,(HL)
	CP	","
	JR	Z,C.4502
	CALL	C.6EF8			; evaluate adres operand
	LD	A,(HL)
	CP	")"
	JR	Z,J$44F6
	PUSH	DE
	CALL	C.4502
	POP	DE
	JR	J$44F9

J$44F6:	CALL	C.4FBE			; check for ")"
J$44F9:	PUSH	HL
	CALL	C.4514
	POP	HL
	RET	NC
J$44FF:	JP	C.6EAB			; illegal function call
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4502:	CALL	C.4FB4			; check for ","
	CALL	C.6EFE			; evaluate byte operand 
	CALL	C.4FBE			; check for ")"
	LD	A,E
	CP	32
	JR	NC,J$44FF
	LD	(D.7EE3),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4514:	LD	HL,-361
	ADD	HL,DE
	RET	C
;
	LD	HL,-25
	ADD	HL,DE
	CCF	
	RET	C
;
	LD	HL,0186AH
	EX	DE,HL
	CALL	C.63B9
;
	XOR	A
	SUB	E
	LD	C,A
	LD	A,18
	JP	J.44A3

;	  Subroutine CALL MK PCM
;	     Inputs  ________________________
;	     Outputs ________________________

C$452E:	CALL	C.4FB9			; check for "("
	CP	0EBH			; OFF token ?
	LD	E,0FFH
	JR	Z,J$4540
	CALL	C.6EFE			; evaluate byte operand 
	INC	A
	JP	Z,C.6EAB		; illegal function call
	JR	J$4543

J$4540:	CALL	C.6EEC
J$4543:	CALL	C.4FBE			; check for ")"
	JP	NZ,J.6EA8
	LD	A,E
	CALL	C.4551
	JP	C,C.6EAB		; illegal function call
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4551:	CP	0FFH
	JR	Z,J$4564
	CP	10H
	CCF	
	RET	C
	PUSH	HL
	LD	(D.7EDE),A
	CALL	C.4B7C
	SET	4,(HL)
J$4562:	POP	HL
	RET	

J$4564:	PUSH	HL
	LD	HL,D.7496
	RES	4,(HL)
	JR	J$4562

;	  Subroutine CALL RECMOD
;	     Inputs  ________________________
;	     Outputs ________________________

C$456C:	CALL	C.42CB			; evaluate parenthesized byte operand
	CALL	C.4576
	JP	C,C.6EAB		; illegal function call
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4576:	LD	C,A
	LD	E,00H
	JP	C.49FF
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.457C:	ADD	A,L
	LD	L,A
	RET	NC
;
	INC	H
	RET	

;	  Subroutine CALL PCM FREQ
;	     Inputs  ________________________
;	     Outputs ________________________

C$4581:	CALL	C.4441
;
	PUSH	HL
	CALL	C.458D
;
	JP	C,C.6EAB		; illegal function call
;
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.458D:	PUSH	BC
	LD	IY,I.32C0
	CALL	C$459B
;
	POP	DE
	RET	C
;
	LD	IY,I.3280
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$459B:	LD	HL,03DCBH
	ADD	HL,DE
	RET	C
	LD	HL,0F8F8H
	ADD	HL,DE
	CCF	
	RET	C
	LD	A,2BH	; "+"
	JP	J.44A3

;	  Subroutine CALL COPY PCM
;	     Inputs  ________________________
;	     Outputs ________________________

C$45AB:	CALL	C.4618
	LD	A,(HL)
	CP	29H	; ")"
	JR	Z,J.45E8
	CALL	C.4FB4			; check for ","
	CP	2CH	; ","
	JR	Z,J$45C6
	CALL	C.6EF8			; evaluate adres operand
	LD	(BUF+2),DE
	LD	A,(HL)
	CP	29H	; ")"
	JR	Z,J.45E8
;
J$45C6:	CALL	C.4FB4			; check for ","
;
	CP	2CH	; ","
	JR	Z,J$45DE
;
	CALL	C.6EF8			; evaluate adres operand
;
	LD	A,D
	OR	E
	JP	Z,C.6EAB		; illegal function call
;
	LD	(BUF+4),DE
	LD	A,(HL)
	CP	29H	; ")"
	JR	Z,J.45E8
;
J$45DE:	CALL	C.4FB4			; check for ","
;
	CALL	C.6EF8			; evaluate adres operand
;
	LD	(BUF+6),DE
J.45E8:	CALL	C.4FBE			; check for ")"
;
	PUSH	HL
	CALL	C.463F
;
	JR	J.4613

;	  Subroutine CALL CONVA
;	     Inputs  ________________________
;	     Outputs ________________________

C$45F1:	CALL	C.4618
;
	LD	A,(BUF+8)
	OR	A
	JR	NZ,J.4615
;
	CALL	C.4FBE			; check for ")"
;
	PUSH	HL
	CALL	C.46E8
;
	JR	J.4613

;	  Subroutine CALL CONVP
;	     Inputs  ________________________
;	     Outputs ________________________

C$4603:	CALL	C.4618
;
	LD	A,(BUF+8)
	OR	A
	JR	NZ,J.4615
;
	CALL	C.4FBE			; check for ")"
;
	PUSH	HL
	CALL	C.4705
;
J.4613:	POP	HL
	RET	NC
;
J.4615:	JP	C.6EAB			; illegal function call
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4618:	LD	DE,BUF
	LD	B,09H	; 9 
	XOR	A
J$461E:	LD	(DE),A
	INC	DE
	DJNZ	J$461E
;
	CALL	C.4FB9			; check for "("
;
	CP	23H	; "#"
	JR	NZ,J$462F
;
	LD	(BUF+8),A
	CALL	C.6EEC
;
J$462F:	CALL	C.6EFE			; evaluate byte operand 
;
	LD	(BUF+0),A
	CALL	C.4FB4			; check for ","
;
	CALL	C.6EFE			; evaluate byte operand 
;
	LD	(BUF+1),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.463F:	LD	A,(BUF+8)
	OR	A
	JR	NZ,J$468D
;
	CALL	C$4813
;
	RET	C
;
J$4649:	EX	DE,HL
	LD	DE,(BUF+2)
	SCF	
	SBC	HL,DE
	RET	C
;
	INC	HL
	PUSH	HL
	LD	HL,BUF+16
	CALL	C.486A
;
	POP	HL
	LD	DE,(BUF+4)
	LD	A,D
	OR	E
	JR	Z,J$468A
;
	SBC	HL,DE
	RET	C
;
J.4666:	LD	(BUF+20),DE
	LD	DE,(BUF+6)
	LD	HL,(BUF+36)
	SCF	
	SBC	HL,DE
	RET	C
;
	INC	HL
	PUSH	HL
	LD	HL,BUF+32
	CALL	C.486A
;
	POP	HL
	LD	DE,(BUF+20)
	SBC	HL,DE
	LD	A,00H
	JP	NC,J.4719
;
	RET	
;
;	-----------------
J$468A:	EX	DE,HL
	JR	J.4666
;
;	-----------------
J$468D:	LD	A,(D.7E88)
	LD	B,A
	LD	A,(BUF+0)
	CP	B
	CCF	
	RET	C
;
	LD	HL,I$4FDD
	LD	DE,BUF+128
	LD	BC,E$4FDD-I$4FDD
	LDIR	
	DI	
	LD	(BUF+254),SP
	LD	SP,I.7FC4
	CALL	C.4FC3
;
	LD	HL,(BUF+0)
	LD	H,00H
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,16
	ADD	HL,BC
	LD	DE,BUF+16
	LD	BC,8
	CALL	BUF+128
;
	CALL	C.4FD5
;
	LD	SP,(BUF+254)
	LD	A,(BUF+16)
	OR	01H	; 1 
	LD	(BUF+16),A
	LD	A,(BUF+1)
	LD	HL,BUF+32
	CALL	C.4839
;
	RET	C
;
	LD	A,(HL)
	AND	05H	; 5 
	DEC	A
	LD	DE,(BUF+20)
	JP	NZ,J$4649
;
	SCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.46E8:	CALL	C.480B
;
	RET	C
;
	RLA	
	CCF	
	RET	C
;
	SRL	D
	RR	E
	JR	NC,J$46F9
;
	LD	A,D
	OR	E
	SCF	
	RET	Z
;
J$46F9:	PUSH	HL
	CALL	C.47AF
;
	POP	HL
	RET	C
;
	RES	7,(HL)
	LD	A,03H	; 3 
	JR	J.4719
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4705:	CALL	C.480B
;
	RET	C
;
	RLA	
	RET	C
;
	SLA	E
	RL	D
	PUSH	HL
	CALL	C.47AF
;
	POP	HL
	RET	C
;
	SET	7,(HL)
	LD	A,02H	; 2 
J.4719:	PUSH	AF
	CALL	C.521D
;
	JR	NZ,J$4721
;
	POP	AF
	RET	
;
;	-----------------
J$4721:	LD	A,33H
	LD	(D.7EDF),A
	CALL	C.4D83			; MSX-AUDIO in page 0
	LD	A,10
	LD	IY,I.3280
	RST	00H
	LD	A,10
	LD	IY,I.32C0
	RST	00H
	LD	A,(BUF+8)
	OR	A
	JR	NZ,J$4751
	POP	AF
	LD	IX,BUF+16
	LD	IY,BUF+32
	LD	C,00H
	RST	00H
J$4749:	CALL	C.4D8F			; restore page 0
	XOR	A
	LD	(D.7EDF),A
	RET	
;
;	-----------------
J$4751:	POP	AF
	LD	A,04H	; 4 
	LD	(BUF+48),A
	LD	HL,(NULBUF)
	LD	(BUF+50),HL
	LD	HL,(BUF+18)
	LD	H,L
	LD	L,00H
	LD	(BUF+18),HL
J$4766:	LD	HL,1
	LD	(BUF+52),HL
	DI	
	LD	(BUF+254),SP
	LD	SP,I.7FC4
	CALL	C.4FC3
;
	LD	HL,(BUF+18)
	LD	DE,(NULBUF)
	LD	BC,256
	CALL	BUF+128
;
	CALL	C.4FD5
;
	LD	SP,(BUF+254)
	EI	
	LD	IX,BUF+48
	LD	IY,BUF+32
	LD	A,0
	RST	00H
	LD	HL,BUF+19
	INC	(HL)
	LD	HL,(BUF+34)
	INC	HL
	LD	(BUF+34),HL
	LD	HL,(BUF+20)
	DEC	HL
	LD	(BUF+20),HL
	LD	A,H
	OR	L
	JR	NZ,J$4766
;
	JR	J$4749
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.47AF:	LD	A,(HL)
	AND	07H	; 7 
	LD	B,A
	AND	05H	; 5 
	JR	NZ,J$47EB
;
	LD	A,B
	LD	(BUF+1),A
	CALL	C.5428
;
	RET	C
;
	PUSH	HL
	INC	HL
	INC	HL
	LD	(HL),C
	INC	HL
	LD	(HL),B
	CALL	C.47FF
;
	LD	A,(BUF+16)
	LD	B,A
	LD	A,(BUF+1)
	CP	B
	JR	NZ,J$47DB
;
	LD	HL,(BUF+48)
	LD	DE,BUF+16
	CALL	C.47DF
;
J$47DB:	POP	HL
	LD	DE,BUF+32
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.47DF:	PUSH	DE
	LD	BC,8
	LDIR	
	POP	HL
	LD	A,(HL)
	AND	07H	; 7 
	LD	(HL),A
	RET	
;
;	-----------------
J$47EB:	PUSH	HL
	LD	HL,(BUF+36)
	SBC	HL,DE
	POP	HL
	RET	C
;
	INC	HL
	INC	HL
	INC	HL
	LD	A,B
	CP	04H	; 4 
	JR	NZ,C.47FF
;
	INC	HL
	INC	HL
	JR	J$4802
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.47FF:	CALL	C$4806
;
J$4802:	LD	DE,(BUF+22)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4806:	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.480B:	LD	DE,(BUF+0)
	LD	A,D
	CP	E
	SCF	
	RET	Z
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4813:	LD	A,(BUF+0)
	LD	HL,BUF+16
	CALL	C.4839
;
	RET	C
;
	PUSH	HL
	LD	A,(BUF+1)
	LD	HL,BUF+32
	CALL	C.4839
;
	POP	DE
	RET	C
;
	LD	A,(HL)
	AND	05H	; 5 
	DEC	A
	LD	A,(DE)
	LD	(BUF+48),DE
	LD	DE,(BUF+20)
	RET	NZ
;
	SCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4839:	CP	10H	; 16 
	CCF	
	RET	C
	PUSH	HL
	CALL	C.54F4
	POP	DE
	PUSH	HL
	CALL	C.47DF
	INC	HL
	INC	HL
	CP	04H	; 4 
	JR	NZ,J$4861
	PUSH	HL
	CALL	C.4935
;
	POP	HL
	LD	(HL),C
	INC	HL
	LD	(HL),B
	INC	HL
	INC	DE
	EX	DE,HL
	AND	A
	SBC	HL,BC
	EX	DE,HL
	LD	(HL),D
	INC	HL
	LD	(HL),00H
	POP	HL
	RET	
;
;	-----------------
J$4861:	INC	HL
	INC	HL
	LD	A,(HL)
	INC	HL
	OR	(HL)
	POP	HL
	RET	NZ
;
	SCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.486A:	LD	A,(HL)
	INC	HL
	INC	HL
	CP	04H	; 4 
	LD	A,E
	JR	Z,J$4875
;
	ADD	A,(HL)
	LD	(HL),A
	LD	A,D
J$4875:	INC	HL
	ADC	A,(HL)
	LD	(HL),A
	RET	

;	  Subroutine CALL STOPM
;	     Inputs  ________________________
;	     Outputs ________________________

C$4879:	CALL	C.4A0A			; end of statement ?
	JR	Z,C.488C
	CALL	C.4FB9			; check for "("
	CALL	C.488C
	PUSH	DE
	CALL	C.6ED8
	EX	(SP),HL
	JP	J.4A41
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.488C:	PUSH	HL
	CALL	C.6CDC
	CALL	C.4D83			; MSX-AUDIO in page 0
	LD	IY,I.3280
	LD	A,10
	RST	00H
	LD	IY,I.32C0
	LD	A,10
	RST	00H
	DI	
	LD	HL,D.7EDF
	LD	(HL),00H
	LD	A,57
	LD	E,01H	; 1 
	RST	00H
	CALL	C.4D8F			; restore page 0
	POP	HL
	OR	A
	RET	

;	  Subroutine CALL CONT MK
;	     Inputs  ________________________
;	     Outputs ________________________

C$48B2:	CALL	C.42C4			; check for end of statement
J$48B5:	LD	E,2
	JP	C.49FF

;	  Subroutine CALL AUDREG
;	     Inputs  ________________________
;	     Outputs ________________________

C$48BA:	CALL	C.4FB9			; check for "("
	CALL	C.6EFE			; evaluate byte operand 
	PUSH	DE
	CALL	C.4FB4			; check for ","
	CALL	C.6EFE			; evaluate byte operand 
	PUSH	DE
	LD	A,(HL)
	CP	29H	; ")"
	LD	E,00H
	JR	Z,J$48D5
	CALL	C.4FB4			; check for ","
	CALL	C.6EFE			; evaluate byte operand 
J$48D5:	CALL	C.4FBE			; check for ")"
	LD	A,E
	CP	02H	; 2 
	JP	NC,C.6EAB		; illegal function call
;
	LD	IY,I.3280
	AND	A
	JR	Z,J$48E9
;
	LD	IY,I.32C0
J$48E9:	POP	DE
	POP	BC
	LD	A,E
	PUSH	HL
	LD	HL,C$0099
	CALL	C.4D6D			; start routine in MSX-AUDIO BIOS
;
	POP	HL
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$48F5:	LD	C,08H
	CALL	C.4D83			; MSX-AUDIO in page 0
	LD	A,D
	OR	E			; no keyboard channels ?
	PUSH	AF
	LD	B,0
	JR	Z,J$4902		; yep,
	INC	B
J$4902:	PUSH	BC
	LD	HL,D.3496
	RES	7,(HL)
	LD	A,(D.7B1F)		; mode
	PUSH	AF
	AND	04H			; b4
	LD	C,A
	RRCA	
	OR	C
	RRCA	
	LD	C,A			; 0 for mode 0-3, 3 for mode 4-7
	POP	AF
	ADD	A,A
	ADD	A,A
	AND	04H			; drum mode
	OR	C
	LD	C,A
	LD	A,0
	CALL	C$00AB
	POP	BC			; B has keyboard mode
	LD	A,3
	CALL	C$00AB
	LD	A,2
	CALL	C$00AB
	POP	AF
	JR	Z,J$4932
	LD	HL,D.3496
	SET	7,(HL)
J$4932:	JP	C.4D8F			; restore page 0
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4935:	LD	A,01H	; 1 
	LD	(SUBFLG),A
	CALL	C.6ED8
;
	JP	NZ,C.6EAB		; illegal function call
;
	LD	(SUBFLG),A
	LD	A,(VALTYP)
	CP	3			; string ?
	JP	Z,C.6EAB		; yep, illegal function call
;
	EX	DE,HL
	ADD	HL,BC
	DEC	HL
	EX	DE,HL
	LD	A,(BC)
	SCF	
	RLA	
	ADD	A,C
	LD	C,A
	RET	NC
;
	INC	B
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4957:	CALL	C.4A0A			; end of statement ?
	RET	Z
	CALL	C.4FB9			; check for "("
	PUSH	HL
	CALL	C.6EF8			; evaluate adres operand
	LD	A,(HL)
	CP	29H	; ")"
	JR	Z,J$4976
	POP	AF
	PUSH	DE
	CALL	C.4FB4			; check for ","
	CALL	C.6EF8			; evaluate adres operand
	CALL	C.4FBE			; check for ")"
	POP	BC
	XOR	A
	INC	A
	RET	
;
;	-----------------
J$4976:	POP	HL
	CALL	C.4935
	CALL	C.4FBE			; check for ")"
	SCF	
	ADC	A,A
	RRA	
	RET	

;	  Subroutine CALL APPEND MK
;	     Inputs  ________________________
;	     Outputs ________________________

C$4981:	CALL	C.4957
;
	JR	Z,J.4997
;
	PUSH	BC
	POP	IX
	LD	B,0FFH
J$498B:	PUSH	DE
	POP	IY
	LD	C,00H
	JR	C,J$4993
;
	DEC	C
J$4993:	CALL	C.49D0
;
	RET	NC
;
J.4997:	JP	C.6EAB			; illegal function call

;	  Subroutine CALL REC MK
;	     Inputs  ________________________
;	     Outputs ________________________

C$499A:	CALL	C.4957
;
	JR	Z,J.4997
;
	PUSH	BC
	POP	IX
	LD	B,00H
	JR	J$498B

;	  Subroutine CALL PLAY MK
;	     Inputs  ________________________
;	     Outputs ________________________

C$49A6:	CALL	C.4957
	PUSH	BC
	POP	IX
	PUSH	DE
	POP	IY
	LD	B,0FFH
	JR	Z,J$49B4
	INC	B
J$49B4:	LD	C,0
	JR	C,J.49B9
	DEC	C
J.49B9:	LD	E,4
	CALL	C.49E8
	RET	C
	RET	NZ
J$49C0:	EI	
	CALL	C.6B8D			; CTRL-STOP pressed ?
	DI	
	JR	Z,J$49DC		; yep,
	LD	A,(D.7496)
	BIT	3,A
	JR	NZ,J$49C0
	OR	A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.49D0:	LD	E,03H	; 3 
	CALL	C.49E8
	RET	C
	RET	NZ
J$49D7:	EI	
	CALL	C.6B8D			; CTRL-STOP pressed ?
	DI	
J$49DC:	JP	Z,C.488C
	LD	A,(D.7496)
	BIT	2,A
	JR	NZ,J$49D7
;
	OR	A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.49E8:	LD	A,(D$7EE1)
	OR	A
	JR	NZ,J$49F0
;
	LD	C,0FFH
J$49F0:	LD	A,(D.7B29)
	OR	A
	JR	Z,J$49F8
;
	LD	C,00H
J$49F8:	CALL	C.49FF
;
	RET	C
;
	LD	A,C
	OR	A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.49FF:	LD	A,57
	PUSH	HL
	CALL	C.4B7C
	CALL	C.4D6A			; AUDIO BIOS function
	POP	HL
	RET	

;	  Subroutine end of statement ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A0A:	DEC	HL
	JP	C.6EEC

;	  Subroutine CALL MK STAT
;	     Inputs  ________________________
;	     Outputs ________________________

C$4A0E:	CALL	C.4FB9			; check for "("
	LD	DE,D.3496
	JR	J$4A33

;	  Subroutine CALL APOKE
;	     Inputs  ________________________
;	     Outputs ________________________

C$4A16:	CALL	C.4FB9			; check for "("
	CALL	C.6EF8			; evaluate adres operand
	PUSH	DE
	CALL	C.4FB4			; check for ","
	CALL	C.6EFE			; evaluate byte operand 
	CALL	C.4FBE			; check for ")"
	LD	A,E
	POP	DE
	LD	(DE),A
	RET	

;	  Subroutine CALL APEEK
;	     Inputs  ________________________
;	     Outputs ________________________

C$4A2A:	CALL	C.4FB9			; check for "("
;
	CALL	C.6EF8			; evaluate adres operand
;
	CALL	C.4FB4			; check for ","
;
J$4A33:	PUSH	DE
	CALL	C.6ED8
;
	EX	(SP),HL
	CALL	C.4D83			; MSX-AUDIO in page 0
;
	LD	L,(HL)
	LD	H,00H
	CALL	C.4D8F			; restore page 0
;
J.4A41:	CALL	C.4A49			; put in DAC and convert
	POP	HL
	CALL	C.4FBE			; check for ")"
;
	RET	

;	  Subroutine put in DAC and convert
;	     Inputs  ________________________
;	     Outputs ________________________

C.4A49:	LD	(DAC+2),HL
	LD	HL,VALTYP
	LD	A,(HL)
	CP	2
	JR	Z,J$4A75
	CP	4
	JR	Z,J$4A67
	CP	8
	JP	NZ,J$6EAE
	LD	(HL),2
	PUSH	DE
	CALL	C.6EDE			; convert DAC
	LD	C,8
	JR	J$4A6F

J$4A67:	LD	(HL),2
	PUSH	DE
	CALL	C.6EDE			; convert DAC
	LD	C,4
J$4A6F:	POP	DE
	LD	HL,DAC+0
	JR	J$4A7A

J$4A75:	LD	HL,DAC+2
	LD	C,2
J$4A7A:	LD	B,0
	LDIR	
	RET	

;	  Subroutine CALL PITCH
;	     Inputs  ________________________
;	     Outputs ________________________

C$4A7F:	LD	A,30
	DEFB	1

;	  Subroutine CALL TRANSPOSE
;	     Inputs  ________________________
;	     Outputs ________________________

C$4A82:	LD	A,31
	PUSH	AF
	CALL	C.4441
	POP	AF
J$4A89:	PUSH	HL
	CALL	C.4D6A			; AUDIO BIOS function
	POP	HL
	JP	C,C.6EAB		; illegal function call
	RET	

;	  Subroutine CALL TEMPER
;	     Inputs  ________________________
;	     Outputs ________________________

C$4A92:	CALL	C.42CB			; evaluate parenthesized byte operand
	LD	C,A
	LD	A,29
	JR	J$4A89

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4A9A:	PUSH	AF
	PUSH	HL
	LD	A,28
	CALL	C.4D6A			; AUDIO BIOS function
	POP	HL
	POP	AF
	RET	

;	  Subroutine CALL INMK
;	     Inputs  ________________________
;	     Outputs ________________________

C$4AA4:	EX	DE,HL
	CALL	C.4B7C
	LD	HL,0
	LD	(BUF+0),HL
	LD	(BUF+2),HL
	LD	(BUF+4),HL
	EX	DE,HL
	CALL	C.4A0A			; end of statement ?
	JR	NZ,J$4AC4		; nope, evaluate
	DI	
	LD	(D.7EF0),DE
	LD	(D$7EF1),DE
	RET	

J$4AC4:	CALL	C.4FB9			; check for "("
	CP	","
	JR	Z,J$4AD7
	CALL	C.6ED8
	LD	(BUF+0),DE
	LD	A,(HL)
	CP	")"
	JR	Z,J.4AF4
J$4AD7:	CALL	C.4FB4			; check for ","
	CP	","
	JR	Z,J$4AEA
	CALL	C.6ED8
	LD	(BUF+2),DE
	LD	A,(HL)
	CP	")"
	JR	Z,J.4AF4
J$4AEA:	CALL	C.4FB4			; check for ","
	CALL	C.6ED8
	LD	(BUF+4),DE
J.4AF4:	CALL	C.4FBE			; check for ")"
	EX	DE,HL
	CALL	C$4B59
	EX	DE,HL
	LD	E,13H	; 19 
	JP	C,J.6EB6
	LD	DE,(BUF+0)
	INC	D
	DEC	D
	JR	Z,J$4B10
	PUSH	AF
	AND	7FH
	CALL	C.4B32
	POP	AF
J$4B10:	LD	DE,(BUF+2)
	INC	D
	DEC	D
	JR	Z,J$4B20
	PUSH	AF
	RLCA	
	AND	01H	; 1 
	CALL	C.4B32
	POP	AF
J$4B20:	LD	DE,(BUF+4)
	INC	D
	DEC	D
	RET	Z
	AND	A
	JR	Z,C.4B32
	PUSH	HL
	CALL	C$4C73
	LD	H,B
	LD	L,C
	JR	J$4B36

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4B32:	PUSH	HL
	LD	L,A
	LD	H,00H
J$4B36:	CALL	C.4A49			; put in DAC and convert
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4B3B:	LD	HL,D.7EF0
	DI	
	LD	A,20H	; " "
	CP	(HL)
	JR	C,J.4B57
;
	INC	(HL)
	CP	(HL)
	JR	C,J.4B57
;
	INC	HL
	INC	HL
	INC	(HL)
	LD	A,(HL)
	CP	20H	; " "
	JR	C,J$4B52
;
	LD	(HL),00H
J$4B52:	CALL	C.457C
;
	LD	(HL),D
	AND	A
J.4B57:	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4B59:	LD	HL,D.7EF0
	DI	
	LD	A,(HL)
	AND	A
	JR	Z,J$4B68
;
	LD	A,20H	; " "
	CP	(HL)
	JR	NC,J$4B6A
;
	LD	(HL),00H
J$4B68:	EI	
	RET	
;
;	-----------------
J$4B6A:	DEC	(HL)
	INC	HL
	INC	(HL)
	LD	A,(HL)
	CP	20H	; " "
	JR	C,J$4B74
;
	LD	(HL),00H
J$4B74:	INC	HL
	CALL	C.457C
;
	LD	A,(HL)
	AND	A
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4B7C:	LD	HL,D.7496
	SET	7,(HL)
	RET	

;	  Subroutine AST MK
;	     Inputs  ________________________
;	     Outputs ________________________

I$4B82:	CALL	C$7B05
	CALL	C$4B3B
	LD	A,D
	LD	(D$7EDC),A
	LD	A,(D.3496)
	BIT	4,A
	PUSH	AF
	CALL	NZ,C.4BC1
	POP	AF
	BIT	2,A
	RET	Z
	BIT	0,A
	RET	Z

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4B9C:	LD	HL,I.34A4
	LD	A,(HL)
	LD	(HL),00H
	LD	HL,(D.3497)
	LD	(HL),A
	INC	HL
	LD	(HL),D
	INC	HL
	BIT	7,D
	JR	Z,J$4BAF
	LD	(HL),E
	INC	HL
J$4BAF:	LD	(D.3497),HL
	LD	BC,(D$349B)
	DEC	BC
	AND	A
	SBC	HL,BC
	RET	C
	LD	HL,D.3496
	RES	2,(HL)
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4BC1:	LD	A,(D.7EDD)
	BIT	7,D
	JR	Z,J$4C33
;
	LD	A,D
	LD	(D.7EDD),A
	LD	A,(D.7EDE)
J$4BCF:	PUSH	DE
	CALL	C.54F4
	POP	DE
	LD	A,(HL)
	OR	A
	RET	M
	AND	05H	; 5 
	JR	Z,J$4BDD
;
	DEC	A
	RET	NZ
;
J$4BDD:	PUSH	HL
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	INC	HL
	OR	(HL)
	POP	HL
	RET	Z
;
	LD	A,(HL)
	AND	02H	; 2 
	LD	A,(D.7EDF)
	JR	Z,J$4BF8
;
	LD	IY,I.32C0
	AND	10H	; 16 
	RET	NZ
;
	JR	J$4BFF
;
;	-----------------
J$4BF8:	LD	IY,I.3280
	AND	01H	; 1 
	RET	NZ
;
J$4BFF:	PUSH	HL
	CALL	C$4C72
;
	POP	HL
	LD	(D$7ED0),BC
	PUSH	DE
	LD	DE,I$7ECA
	PUSH	DE
	LD	BC,6
	LDIR	
	POP	IX
	LD	HL,D.7EE0
	LD	A,(IX)
	AND	07H	; 7 
	LD	(IX),A
	AND	02H	; 2 
	JR	Z,J$4C27
;
	SET	1,(HL)
	JR	J$4C29
;
;	-----------------
J$4C27:	SET	0,(HL)
J$4C29:	LD	A,10
	RST	00H
	LD	C,07H	; 7 
	LD	A,11
	RST	00H
	POP	DE
	RET	
;
;	-----------------
J$4C33:	AND	7FH
	SUB	D
	RET	NZ
;
	LD	(D.7EDD),A
J$4C3A:	PUSH	DE
	LD	A,(D.7EE0)
	PUSH	AF
	AND	01H	; 1 
	JR	Z,J$4C57
	LD	A,10
	LD	IY,I.3280
	RST	00H
	DI	
	LD	HL,D.7EDF
	LD	A,0F0H
	AND	(HL)
	LD	(HL),A
	LD	HL,D.7EE0
	RES	0,(HL)
J$4C57:	POP	AF
	AND	02H	; 2 
	JR	Z,J$4C70
;
	LD	A,10
	LD	IY,I.32C0
	RST	00H
;
	DI	
I$4C64:	LD	HL,D.7EDF
	LD	A,0FH	; 15 
	AND	(HL)
	LD	(HL),A
	LD	HL,D.7EE0
	RES	1,(HL)
J$4C70:	POP	DE
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4C72:	LD	A,D
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4C73:	ADD	A,A
	LD	HL,I$4CA0
	LD	BC,0818H
	CP	0A8H
	JR	C,J.4C8C
	SUB	0A8H
J$4C80:	SUB	C
	JP	NC,J$4C80
	ADD	A,C
	CALL	C.457C
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	RET	

J.4C8C:	DEC	B
	SUB	C
	JP	NC,J.4C8C
	ADD	A,C
	CALL	C.457C
	LD	C,(HL)
	INC	HL
	LD	A,(HL)
J$4C98:	AND	A
	RRA	
	RR	C
	DJNZ	J$4C98
	LD	B,A
	RET	

I$4CA0:	DEFW	06336H
	DEFW	0691DH
	DEFW	06F5DH
	DEFW	075FCH
	DEFW	07D00H
	DEFW	0846FH
	DEFW	08C4FH
	DEFW	094A7H
	DEFW	09D7DH
	DEFW	0A6DBH
	DEFW	0B0C7H
	DEFW	0BB4AH

;	  Subroutine TIMER-2 handler
;	     Inputs  ________________________
;	     Outputs ________________________

I$4CB8:	LD	A,(D.3496)
	BIT	2,A
	CALL	NZ,C$4CED
	PUSH	AF
	OR	A
	CALL	M,C$00B1
	POP	AF
	BIT	3,A
	CALL	NZ,C$4D01
	LD	HL,I$7EE2
	DEC	(HL)
	RET	NZ
	LD	(HL),1EH
	LD	A,(D.7EE3)
	AND	A
	RET	Z
	LD	C,A
	LD	A,21
	RST	00H
	RET	

;	  Subroutine AST ADPCM 2nd Y8950
;	     Inputs  ________________________
;	     Outputs ________________________

I$4CDC:	LD	A,0FH
	DEFB	021H

;	  Subroutine AST ADPCM 1st Y8950
;	     Inputs  ________________________
;	     Outputs ________________________

I$4CDF:	LD	A,0F0H
	LD	HL,D.7EDF
	DI	
	AND	(HL)
	LD	(HL),A
	XOR	A
	LD	(D.7EDD),A
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4CED:	DI	
	LD	HL,I.34A4
	INC	(HL)
	RET	NZ
;
	INC	(HL)
	LD	HL,(D.3497)
	LD	(HL),0FFH
	INC	HL
	LD	(HL),7FH
	INC	HL
	LD	(D.3497),HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4D01:	DI	
	LD	HL,D.34A3
	LD	A,(HL)
	AND	A
	JR	Z,J.4D0B
;
	DEC	(HL)
	RET	NZ
;
J.4D0B:	LD	HL,(D.349D)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	E,08H	; 8 
	BIT	7,D
	JR	Z,J$4D19
;
	LD	E,(HL)
	INC	HL
J$4D19:	LD	(D.349D),HL
	LD	A,D
	AND	A
	JR	Z,J.4D42
;
	CP	7FH
	JR	Z,J.4D42
;
	CP	7EH	; "~"
	JR	Z,J.4D52
;
	PUSH	HL
	LD	A,(D.3496)
	BIT	2,A
	JR	Z,J$4D37
;
	BIT	1,A
	PUSH	AF
	CALL	NZ,C$4B9C
;
	POP	AF
J$4D37:	BIT	4,A
	CALL	NZ,C.4BC1
	LD	A,50
	RST	00H
	DI	
	POP	HL
	AND	A
J.4D42:	LD	A,(HL)
	LD	BC,(D$34A1)
	SBC	HL,BC
	JR	NC,J.4D52
;
	AND	A
	JR	Z,J.4D0B
;
	LD	(D.34A3),A
	RET	
;
;	-----------------
J.4D52:	LD	HL,D.3496
	RES	3,(HL)
	BIT	2,(HL)
	RET	NZ
	LD	A,49
	RST	00H
	RET	

;	  Subroutine H.KEYI handler
;	     Inputs  ________________________
;	     Outputs ________________________

C$4D5E:	DI	
	PUSH	HL
	LD	HL,C$00B4
	CALL	C.4D6D			; start routine in MSX-AUDIO BIOS
	POP	HL
	JP	J.7F9A			; continue in old H.KEYI

;	  Subroutine start AUDIO BIOS function
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4D6A:	LD	HL,C$00AE

;	  Subroutine start routine in MSX-AUDIO BIOS
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D6D:	EX	AF,AF'
	EXX	
	CALL	C.4D9B			; select MSX-AUDIO in page 0
	DI	
	PUSH	BC			; save slotregisters
	EXX	
	EX	AF,AF'
	CALL	C$4D82
	EX	AF,AF'
	EXX	
	POP	BC			; saved slotregisters
	CALL	C.4DD0			; restore page 0
	EXX	
	EX	AF,AF'
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$4D82:	JP	(HL)

;	  Subroutine save current page 0 and select MSX-AUDIO in page 0
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D83:	EX	AF,AF'
	EXX	
	CALL	C.4D9B			; select MSX-AUDIO in page 0
	LD	(D.7F98),BC		; save orginal slotregisters
	EXX	
	EX	AF,AF'
	RET	

;	  Subroutine restore page 0
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D8F:	EX	AF,AF'
	EXX	
	LD	BC,(D.7F98)
	CALL	C.4DD0
	EXX	
	EX	AF,AF'
	RET	

;	  Subroutine select MSX-AUDIO in page 0
;	     Inputs  ________________________
;	     Outputs ________________________

C.4D9B:	LD	A,I
	PUSH	AF
	DI	
	IN	A,(0A8H)
	LD	B,A
	AND	0F0H
	LD	HL,(D.7F93)
	OR	L
	OUT	(0A8H),A		; select MSX-AUDIO primairy slot in page 0 and 1
	BIT	7,H			; is MSX-AUDIO in expanded slot ?
	JR	NZ,J.4DCC		; nope, done
	LD	E,A
	LD	D,H
	LD	HL,(D.7F95)
	LD	A,(HL)			; secundairy slotregister of primary slot MSX-AUDIO
	LD	C,A
	AND	0FH
	CP	D			; are page 0 and 1 already in correct secundairy slot ?
	JR	Z,J.4DCC		; yep, done
	LD	A,C
	AND	0F0H
	OR	D
	LD	(HL),A			; update SLTTBL with new secundairy slot register
	LD	D,A
	LD	A,(D.7F97)
	OUT	(0A8H),A		; select primary slot MSX-AUDIO in page 0,1 and 3
	LD	A,D
	LD	(D.FFFF),A		; write secundairy slot register
	LD	A,E
	OUT	(0A8H),A		; restore page 3
J.4DCC:	POP	AF
	RET	PO
	EI	
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4DD0:	LD	A,I
	DI	
	LD	A,(D.7F94)
	RLA	
	JR	C,J$4DE6
	LD	HL,(D.7F95)
	LD	(HL),C
	LD	A,(D.7F97)
	OUT	(0A8H),A
	LD	A,C
	LD	(D.FFFF),A
J$4DE6:	LD	A,B
	OUT	(0A8H),A
	RET	PO
	EI	
	RET	

;	  Subroutine get slotmasks of page 1 (my slot)
;	     Inputs  ________________________
;	     Outputs ________________________

C$4DEC:	LD	E,A
	RLCA	
	RLCA	
	CALL	C.4E1A
	AND	0FH
	LD	(D.7F93),A		; primairy slot OR mask for MSX-AUDIO page 0 and 1
	LD	B,A
	AND	03H 
	LD	HL,SLTTBL
	ADD	A,L
	LD	L,A
	LD	(D.7F95),HL		; SLTTBL entry for MSX-AUDIO
	LD	A,0FFH
	LD	(D.7F94),A
	LD	A,E
	AND	A
	RET	P
	CALL	C.4E1A
	AND	0FH
	LD	(D.7F94),A		; secundairy slot OR mask for MSX-AUDIO page 0 and 1
	LD	A,B
	RRCA	
	RRCA	
	OR	B
	LD	(D.7F97),A		; primary slot OR mask for MSX-AUDIO page 0,1 and 3
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.4E1A:	AND	0FCH
	LD	D,A
	RRCA	
	RRCA	
	AND	03H
	OR	D
	RET	

;	  Subroutine get slotid of page
;	     Inputs  B = page
;	     Outputs ________________________

C.4E23:	IN	A,(0A8H)
	CALL	C.4E45
	AND	03H	; 3 
	LD	E,A
	LD	D,00H
	LD	HL,EXPTBL
	ADD	HL,DE
	LD	A,(HL)
	AND	80H
	OR	E
	RET	P
	LD	E,A
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	RLCA	
	RLCA	
	CALL	C.4E45
;
	AND	0CH	; 12 
	OR	E
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4E45:	INC	B
	DEC	B
	RET	Z
	PUSH	BC
J$4E49:	RRCA	
	RRCA	
	DJNZ	J$4E49
	POP	BC
	RET	

I$4E4F:	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	EXX	
	EX	AF,AF'
	PUSH	IX
	PUSH	IY
	LD	IX,KEYINT
	LD	IY,(EXPTBL+0-1)
	CALL	CALSLT
	POP	IY
	POP	IX
	EX	AF,AF'
	EXX	
J.4E6A:	POP	HL
	POP	DE
	POP	BC
	POP	AF
	EI	
	RET
E$4E4F:	

I$4E70:	DEFB	004H,000H,0,0,0,0,0
	DEFB	1,01EH,0,080H,0
	DEFB	0FFH,0FFH
	DEFB	0,0,0,0
	DEFB	0FFH,0FFH
	DEFB	040H
	DEFB	0,0,0,0
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4E89:	PUSH	DE
	DI	
	CALL	C.4D83			; MSX-AUDIO in page 0
	CALL	C$0090
	LD	HL,I$4E4F
	LD	DE,I$7E89
	LD	BC,E$4E4F-I$4E4F
	LDIR				; copy general interrupt handler
	LD	HL,I$4E70
	LD	DE,D.7EDA
	LD	BC,25
	LDIR	
	LD	A,0C3H
	LD	(D$7300+0),A
	LD	HL,I$3E89
	LD	(D$7300+1),HL		; general interrupt handler
	LD	HL,0C937H
	LD	(D$7308),HL		; VDP interrupts are not handled
	LD	HL,I$6828
	LD	(D$7340+1),HL		; TIMER-1 handler
	LD	HL,I$4CB8
	LD	(D$7344+1),HL		; TIMER-2 handler
	LD	HL,I$4B82
	LD	(D$7370),HL		; AST MK
	LD	HL,I$4CDF
	LD	(D$7372),HL		; AST ADPCM 1st Y8950
	LD	HL,I$4CDC
	LD	(D$7374),HL		; AST ADPCM 2nd Y8950
	LD	IY,I.3280
	CALL	C.4F6D
	LD	IY,I.32C0
	CALL	C.4F6D
	LD	DE,D.FFFF
	LD	A,(D$72A3)
	CALL	C.4F64
	LD	(D.7EE4),HL
	LD	A,(D.7391)
	BIT	0,A			; 2nd Y8950 found ?
	JR	NZ,J$4F04		; nope,
	LD	A,(D$72E3)
	CALL	C.4F64
	LD	(D.7EE8),HL
	LD	(D$7EEA),DE
J$4F04:	LD	A,(MODE)
	LD	HL,63
	AND	06H
	JR	Z,J.4F14		; 16 KB VRAM, 63
	LD	L,E
	CP	02H
	JR	Z,J.4F14		; 64 KB VRAM, 255
	INC	H			; 128 KB VRAM, 511
J.4F14:	LD	(D.7EEE),HL		; VRAM mask
	CALL	C.4D8F			; restore page 0
	LD	HL,I.7F13
	LD	E,L
	LD	D,H
	INC	DE
	PUSH	DE
	LD	BC,128-1
	LD	(HL),00H
	LDIR	
	POP	HL
	INC	HL
	INC	HL
	INC	HL
	LD	(HL),80H
	INC	HL
	INC	HL
	LD	(HL),40H
	INC	HL
	LD	(HL),1FH
	LD	HL,127
	LD	(D.7E82),HL
	LD	HL,D.FFFF
	LD	(D.7E84),HL
	LD	A,1EH
	LD	(D.7E88),A
	POP	DE			; keyboard channel mask
	CALL	C$48F5
	CALL	C.4D83			; MSX-AUDIO in page 0
	LD	A,17
	LD	C,98H
	RST	00H
	LD	A,18
	LD	C,0CCH
	RST	00H
	LD	A,16
	LD	C,03H	; 3 
	RST	00H
;
	CALL	C.4D8F			; restore page 0
;
	CALL	C$4F7C
;
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4F64:	AND	A
	RRA	
	LD	H,A
	LD	L,0
	RR	L
	DEC	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4F6D:	LD	A,(D.7EDA)
	LD	C,A
	LD	A,4
	RST	00H
	LD	A,(D$7EDB)
	LD	C,A
	LD	A,7
	RST	00H
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4F7C:	LD	A,01H	; 1 
	CALL	C.4F8D
;
	LD	(D.7E86),A
	LD	A,03H	; 3 
	CALL	C.4F8D
J$4F87	EQU	$-2
;
	LD	(D.7E87),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4F8D:	CALL	C.550A
;
	XOR	A
	LD	D,A
	LD	HL,I.7500
	LD	A,(HL)
	CP	41H	; "A"
	JR	NZ,J.4FB2
;
	INC	HL
	LD	A,(HL)
	CP	42H	; "B"
	JR	NZ,J.4FB2
;
	LD	BC,19
	ADD	HL,BC
J$4FA4:	LD	A,(HL)
	INC	HL
	OR	(HL)
	JR	Z,J$4FB0
;
	INC	D
	LD	BC,7
	ADD	HL,BC
	JR	J$4FA4
;
;	-----------------
J$4FB0:	LD	A,D
	RET	
;
;	-----------------
J.4FB2:	XOR	A
	RET	

;	  Subroutine check for ","
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FB4:	CALL	C.6EE4
	DEFB	","
	RET	

;	  Subroutine check for "("
;	     Inputs  ________________________
;	     Outputs ________________________

C.4FB9:	CALL	C.6EE4
	DEFB	"("
	RET

;	  Subroutine check for ")"
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4FBE:	CALL	C.6EE4
	DEFB	")"
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4FC3:	LD	B,2
	CALL	C.4E23			; get slotid of page 2
	PUSH	AF
	LD	A,(D.7B0E)
	LD	H,80H
	CALL	ENASLT			; MSX-AUDIO on page 2
	POP	AF
	LD	L,A
	EX	(SP),HL
	JP	(HL)
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4FD5:	POP	HL
	EX	(SP),HL
	LD	A,L
	LD	H,80H
	JP	ENASLT

I$4FDD:	LD	A,H
	AND	80H
	RES	7,H
	RLCA	
	OR	02H			; first 32 KB in segment 2, second 32 KB in segment 3
	DI	
	LD	(D.7FFE),A		; select segment
	LD	A,40H
	ADD	A,H
	LD	H,A			; page 1 and 2 based
	LDIR	
	XOR	A
	LD	(D.7FFE),A		; select segment 0
	RET	
E$4FDD:

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.4FF4:	CALL	C.4FB4			; check for ","
;
	CP	2CH	; ","
	LD	DE,D.FFFF
	LD	A,E
	RET	Z
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$4FFE:	CALL	C.6EFE			; evaluate byte operand 
	CP	0FFH
	RET	NZ
	JR	J.5016
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5006:	CALL	C.4FB4			; check for ","
;
	CP	2CH	; ","
	LD	DE,D.FFFF
	RET	Z
;
	CALL	C.6EF8			; evaluate adres operand
;
	LD	A,E
	AND	D
	INC	A
	RET	NZ
;
J.5016:	JP	C.6EAB			; illegal function call
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5019:	LD	A,(HL)
	CP	29H	; ")"
	RET	NZ
;
	POP	DE
	JP	J.5082

;	  Subroutine CALL SET PCM
;	     Inputs  ________________________
;	     Outputs ________________________

C$5021:	PUSH	HL
	LD	HL,BUF+2
	LD	DE,BUF+2+1
	LD	BC,8-1
	LD	(HL),0FFH
	LDIR	
	POP	HL
	CALL	C.4FB9			; check for "("
;
	CALL	C.6EFE			; evaluate byte operand 
;
	LD	(BUF+0),A
	CALL	C.4FB4			; check for ","
;
	CALL	C.6EFE			; evaluate byte operand 
;
	LD	(BUF+1),A
	OR	A
	JR	Z,J.5057
;
	DEC	A
	JR	Z,J.5090
;
	DEC	A
	JR	Z,J.5057
;
	DEC	A
	JR	Z,J.5090
;
	DEC	A
	JR	Z,J$50A1
;
	DEC	A
	JP	Z,J$50D2
;
	JR	J.5016
;
;	-----------------
J.5057:	CALL	C.5019
;
	CALL	C.4FF4
;
	LD	(BUF+2),A
	CALL	C.5019
;
	CALL	C.4FB4			; check for ","
;
J$5066:	CALL	C.5006
;
	LD	(BUF+5),DE
J.506D:	CALL	C.5019
;
	CALL	C.5006
;
	LD	(BUF+7),DE
	CALL	C.5019
;
	CALL	C.4FF4
;
	JR	Z,J.5016
;
	LD	(BUF+9),A
J.5082:	CALL	C.4FBE			; check for ")"
;
	JP	NZ,J.6EA8
;
	PUSH	HL
	CALL	C.51BA
;
	POP	HL
	JR	C,J.5016
;
	RET	
;
;	-----------------
J.5090:	CALL	C.4FB4			; check for ","
;
	CALL	C.4FB4			; check for ","
;
	CALL	C.6EFE			; evaluate byte operand 
;
	LD	(BUF+3),A
	CALL	C.5019
;
	JR	J$5066
;
;	-----------------
J$50A1:	LD	A,04H	; 4 
	LD	(BUF+1),A
	CALL	C.4FF4
;
	LD	(BUF+2),A
	CALL	C.4FB4			; check for ","
;
	CALL	C$50F4
;
	PUSH	HL
	LD	HL,BUF+6
	LD	A,3AH	; ":"
	LD	(HL),A
	DEC	HL
	LD	(HL),A
	DEC	HL
	LD	(HL),B
	DEC	HL
	LD	(HL),C
	INC	HL
	LD	A,B
	CP	3AH	; ":"
	JR	Z,J$50C6
;
	INC	HL
J$50C6:	LD	(HL),E
	POP	HL
	LD	A,(HL)
	CP	29H	; ")"
	JR	Z,J.5082
;
	CALL	C.4FB4			; check for ","
;
	JR	J.506D
;
;	-----------------
J$50D2:	LD	A,05H	; 5 
	LD	(BUF+1),A
	CALL	C.4FF4
;
	LD	(BUF+2),A
	CALL	C.4FB4			; check for ","
;
	CALL	C.6EF8			; evaluate adres operand
;
	LD	(BUF+3),DE
	CALL	C.4FB4			; check for ","
;
	CALL	C.6EF8			; evaluate adres operand
;
	LD	(BUF+5),DE
	JP	J.506D
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$50F4:	LD	C,(HL)
	CALL	C.512B
;
	JP	C,J.6EA8
;
	LD	B,3AH	; ":"
	CALL	C.6EEC
;
	JR	C,J$5107
;
	CALL	C.512B
;
	JR	C,J$5112
;
J$5107:	LD	B,A
J.5108:	CALL	C.6EEC
;
	JR	C,J.5108
;
	CALL	C.512B
;
	JR	NC,J.5108
;
J$5112:	LD	E,3AH	; ":"
	CP	26H	; "&"
	RET	NC
;
	CP	25H	; "%"
	JR	Z,J.5126
;
	CP	24H	; "$"
	JR	Z,J.5126
;
	CP	21H	; "!"
	JR	Z,J.5126
;
	CP	23H	; "#"
	RET	NZ
;
J.5126:	LD	E,A
	CALL	C.6EEC
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.512B:	CP	41H	; "A"
	RET	C
;
	CP	5BH	; "["
	CCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5132:	LD	A,D
	AND	E
	INC	A
	JR	NZ,J$513B
;
	LD	DE,01F40H
	RET	
;
;	-----------------
J$513B:	PUSH	HL
	LD	HL,3E80H
	AND	A
	SBC	HL,DE
	JR	C,J$514A
	LD	HL,0707H
	SBC	HL,DE
	CCF	
J$514A:	POP	HL
	RET	

;	  Subroutine CALL REC PCM
;	     Inputs  ________________________
;	     Outputs ________________________

C$514C:	CALL	C.516B
;
	PUSH	HL
	CALL	C.5535
;
	JR	C,J$515E
;
	POP	HL
	RET	

;	  Subroutine CALL PLAY PCM
;	     Inputs  ________________________
;	     Outputs ________________________

C$5157:	CALL	C.516B
	PUSH	HL
	CALL	C.571C
J$515E:	JP	C,C.6EAB		; illegal function call
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5163:	LD	A,(HL)
	CP	29H	; ")"
	RET	NZ
;
	POP	DE
	JP	J$51B3
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.516B:	PUSH	HL
	LD	HL,BUF+1
	LD	B,08H	; 8 
J$5171:	LD	(HL),0FFH
	INC	HL
	DJNZ	J$5171
;
	POP	HL
	CALL	C.4FB9			; check for "("
;
I$517A:	CALL	C.6EFE			; evaluate byte operand 
;
	LD	(BUF+0),A
	CALL	C.5163
;
	CALL	C.4FF4
;
	LD	(BUF+1),A
	CALL	C.5163
;
	CALL	C.5006
;
	LD	(BUF+2),DE
	CALL	C.5163
;
	CALL	C.5006
;
	LD	(BUF+4),DE
	CALL	C.5163
;
	CALL	C.5006
;
	LD	(BUF+6),DE
	CALL	C.5163
;
	CALL	C.4FB4			; check for ","
;
	CALL	C$4FFE
;
	LD	(BUF+8),A
J$51B3:	CALL	C.4FBE			; check for ")"
;
	JP	NZ,J.6EA8
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.51BA:	LD	A,(BUF+0)
	CP	10H	; 16 
	CCF	
	RET	C
;
	LD	DE,(BUF+7)
	LD	A,(BUF+1)
	AND	05H	; 5 
	DEC	A
	CALL	NZ,C.5132
;
	RET	C
;
	LD	(BUF+7),DE
	LD	DE,(BUF+5)
	LD	A,E
	OR	D
	SCF	
	RET	Z
;
	CALL	C.521D
;
	RET	Z
;
	LD	A,33H	; "3"
	LD	(D.7EDF),A
	LD	IY,I.3280
	CALL	C.5717
;
	LD	IY,I.32C0
	CALL	C.5717
;
	CALL	C$51FC
;
	PUSH	AF
	XOR	A
	LD	(D.7EDF),A
	POP	AF
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$51FC:	LD	A,(BUF+0)
	CALL	C.54F4
;
	LD	A,(BUF+1)
	OR	A
	JR	Z,J$5239
;
	DEC	A
	JP	Z,J$52C4
;
	DEC	A
	JR	Z,J$522D
;
	DEC	A
	JP	Z,J$52B5
;
	DEC	A
	JP	Z,J$5337
;
	DEC	A
	JP	Z,J$5349
;
	SCF	
I$521C:	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.521D:	DI	
	LD	A,(D.7EDF)
	OR	A
	JR	Z,J$522B
	EI	
	CALL	C.6B8D			; CTRL-STOP pressed ?
	JR	NZ,C.521D
	RET	

J$522B:	INC	A
	RET	
;
;	-----------------
J$522D:	LD	A,(BUF+9)
	CP	0FFH
	JR	Z,J.5241
;
	DEC	A
	SCF	
	RET	NZ
;
	JR	J.5241
;
;	-----------------
J$5239:	LD	A,(BUF+9)
	LD	B,A
	RRCA	
	CP	B
	SCF	
	RET	NZ
;
J.5241:	CALL	C.54B9
;
	RET	C
;
	LD	DE,(BUF+5)
	CALL	C.5428
;
	RET	C
;
	LD	(BUF+3),BC
	EX	DE,HL
	LD	(BUF+5),HL
J.5255:	LD	HL,BUF+1
	PUSH	HL
	LD	BC,8
	LDIR	
	POP	HL
	LD	A,(HL)
	AND	07H	; 7 
	CP	04H	; 4 
	RET	Z
;
	AND	05H	; 5 
	DEC	A
	RET	Z
;
	PUSH	HL
	LD	HL,I.7500
	LD	DE,I.7500+1
	LD	BC,256-1
	LD	(HL),00H
	LDIR	
	POP	HL
	LD	A,(HL)
	AND	07H	; 7 
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	DI	
	LD	IX,D.7EAA
	LD	IY,D.7EBA
	LD	(IY),A
	LD	A,04H	; 4 
	LD	(IX),A
	LD	HL,I.7500
	LD	(D.7EAC),HL
J$529B:	LD	(D.7EBC),DE
	LD	HL,1
	LD	(D.7EAE),HL
	PUSH	BC
	PUSH	DE
	LD	A,0
	CALL	C.4D6A			; AUDIO BIOS function
;
	POP	DE
	POP	BC
	INC	DE
	DEC	BC
	LD	A,C
	OR	B
	JR	NZ,J$529B
;
	RET	
;
;	-----------------
J$52B5:	LD	A,(BUF+9)
	CP	0FFH
	JR	Z,J$52BF
;
	DEC	A
	SCF	
	RET	NZ
;
J$52BF:	LD	A,(D.7E87)
	JR	J$52CF
;
;	-----------------
J$52C4:	LD	A,(BUF+9)
	LD	B,A
	RRCA	
	CP	B
	SCF	
	RET	NZ
;
	LD	A,(D.7E86)
J$52CF:	LD	B,A
	LD	A,(BUF+3)
	CP	B
	CCF	
	RET	C
;
	CALL	C$54FF
;
	PUSH	HL
	LD	A,(BUF+1)
	CALL	C.550A
;
	POP	HL
	LD	A,(BUF+2)
	INC	A
	SCF	
	RET	NZ
;
	LD	A,(BUF+1)
	OR	(HL)
	LD	(BUF+1),A
	XOR	A
	LD	(BUF+2),A
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(BUF+3),DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	PUSH	HL
	LD	HL,(BUF+5)
	LD	A,L
	AND	H
	INC	A
	JR	NZ,J$530F
;
	POP	HL
	LD	(BUF+5),DE
	JR	J$5314
;
;	-----------------
J$530F:	EX	DE,HL
	SBC	HL,DE
	POP	HL
	RET	C
;
J$5314:	LD	DE,(BUF+7)
	LD	A,E
	AND	D
	INC	A
	JR	NZ,J$5321
;
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
J$5321:	CALL	C.5132
;
	RET	C
;
	LD	(BUF+7),DE
	LD	A,(BUF+0)
	CALL	C.54F4
;
	PUSH	HL
	CALL	C.5374
;
	POP	DE
	JP	J.5255
;
;	-----------------
J$5337:	CALL	C.54B9
;
	RET	C
;
	PUSH	HL
	LD	HL,BUF+3
	CALL	C.5E52
;
	POP	HL
	LD	A,D
	OR	A
	SCF	
	RET	Z
;
	JR	J$536A
;
;	-----------------
J$5349:	CALL	C.54B9
;
	RET	C
;
	PUSH	HL
	LD	HL,(D.7EEE)
	PUSH	HL
	LD	BC,(BUF+3)
	OR	A
	SBC	HL,BC
	POP	DE
	JR	C,J.5372
;
	INC	DE
	LD	HL,(BUF+5)
	ADD	HL,BC
	JR	C,J.5372
;
	EX	DE,HL
	OR	A
	SBC	HL,DE
	JR	C,J.5372
;
	POP	HL
J$536A:	CALL	C.5374
;
	LD	E,L
	LD	D,H
	JP	J.5255
;
;	-----------------
J.5372:	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5374:	LD	A,(HL)
	AND	07H	; 7 
	LD	(BUF+31),A
	AND	05H	; 5 
	RET	NZ
;
	PUSH	HL
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	C,(HL)
	LD	(HL),00H
	INC	HL
	LD	B,(HL)
	LD	(HL),00H
	LD	A,B
	OR	C
	JR	Z,J.53E6
;
	LD	A,10H	; 16 
	PUSH	DE
	POP	IY
J$5394:	PUSH	AF
	DEC	A
	CALL	C.54F4
;
	LD	A,(HL)
	AND	07H	; 7 
	LD	E,A
	LD	A,(BUF+31)
	CP	E
	JR	NZ,J.53C2
;
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	A,(HL)
	INC	HL
	OR	(HL)
	JR	Z,J.53C2
;
	DEC	HL
	DEC	HL
	DEC	HL
	PUSH	HL
	PUSH	IY
	POP	HL
	SBC	HL,DE
	POP	HL
	JR	NC,J.53C2
;
	EX	DE,HL
	OR	A
	SBC	HL,BC
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
J.53C2:	POP	AF
	DEC	A
	JR	NZ,J$5394
;
	PUSH	IY
	POP	HL
	PUSH	BC
	CALL	C$53E8
;
	POP	BC
	LD	A,(BUF+31)
	OR	A
	JR	NZ,J$53DE
;
	LD	HL,(D.7E82)
	SBC	HL,BC
	LD	(D.7E82),HL
	JR	J.53E6
;
;	-----------------
J$53DE:	LD	HL,(D.7E84)
	SBC	HL,BC
	LD	(D.7E84),HL
J.53E6:	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$53E8:	LD	E,L
	LD	D,H
	ADD	HL,BC
	PUSH	DE
	PUSH	HL
	EX	DE,HL
	LD	A,(BUF+31)
	OR	A
	LD	HL,(D.7E82)
	JR	Z,J$53FA
;
	LD	HL,(D.7E84)
J$53FA:	INC	HL
	SBC	HL,DE
	LD	C,L
	LD	B,H
	POP	HL
I$5400:	POP	DE
	LD	A,C
	OR	B
	RET	Z
;
	DI	
	LD	IX,D.7EAA
	LD	IY,D.7EBA
	LD	A,(BUF+31)
	LD	(IX+0),A
	LD	(IY+0),A
	LD	(D.7EAC),HL
	LD	(D.7EAE),BC
	LD	(D.7EBC),DE
	LD	A,0
	CALL	C.4D6A			; AUDIO BIOS function
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5428:	PUSH	DE
	CALL	C.5374
;
	POP	DE
	PUSH	HL
	LD	A,E
I$542F:	AND	D
	INC	A
	JR	Z,J$547D
;
	LD	A,(BUF+1)
	AND	07H	; 7 
	LD	BC,(D.7E82)
	JR	Z,J$5442
;
	LD	BC,(D.7E84)
J$5442:	LD	L,E
	LD	H,D
	LD	A,C
	AND	B
	INC	A
	JR	NZ,J$544C
;
	ADD	HL,BC
	JR	J$544F
;
;	-----------------
J$544C:	ADD	HL,BC
	JR	C,J.547B
;
J$544F:	LD	C,L
	LD	B,H
	LD	A,(BUF+1)
	AND	07H	; 7 
	JR	NZ,J$5469
;
	LD	HL,(D.7EE4)
	SBC	HL,BC
	JR	C,J.547B
;
	LD	HL,(D.7E82)
	INC	HL
	LD	(D.7E82),BC
	JR	J$5478
;
;	-----------------
J$5469:	LD	HL,(D.7EE8)
	SBC	HL,BC
	JR	C,J.547B
;
	LD	HL,(D.7E84)
	INC	HL
	LD	(D.7E84),BC
J$5478:	LD	C,L
	LD	B,H
J$547A:	OR	A
J.547B:	POP	HL
	RET	
;
;	-----------------
J$547D:	LD	A,(BUF+1)
	AND	07H	; 7 
	JR	NZ,J$549E
;
	LD	BC,(D.7E82)
	LD	HL,(D.7EE4)
	LD	A,L
	OR	H
	SCF	
	JR	Z,J.547B
;
	CCF	
	LD	E,L
	LD	D,H
	SBC	HL,BC
	SCF	
	JR	Z,J.547B
;
	EX	DE,HL
	LD	(D.7E82),HL
	JR	J$54B6
;
;	-----------------
J$549E:	LD	BC,(D.7E84)
	LD	HL,(D.7EE8)
	LD	A,L
	OR	H
	SCF	
	JR	Z,J.547B
;
	CCF	
	LD	E,L
	LD	D,H
	SBC	HL,BC
	SCF	
	JR	Z,J.547B
;
	EX	DE,HL
	LD	(D.7E84),HL
J$54B6:	INC	BC
	JR	J$547A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.54B9:	LD	A,(BUF+2)
	INC	A
	ADD	A,0FDH
	RET	C
;
	CPL	
	DEC	A
	AND	80H
	LD	B,A
	LD	A,(BUF+1)
	LD	C,A
	AND	05H	; 5 
	LD	A,(BUF+9)
	JR	NZ,J$54DC
;
	INC	A
	JR	NZ,J$54DD
;
	LD	A,C
	AND	02H	; 2 
	RRCA	
	RRCA	
	RRCA	
	LD	C,A
	JR	J$54E5
;
;	-----------------
J$54DC:	INC	A
J$54DD:	ADD	A,0FDH
	RET	C
;
	CPL	
	DEC	A
	AND	40H	; "@"
	LD	C,A
J$54E5:	LD	A,(BUF+1)
	AND	07H	; 7 
	OR	B
	OR	C
	LD	(BUF+1),A
	XOR	A
	LD	(BUF+2),A
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.54F4:	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	E,A
	LD	D,00H
	LD	HL,I.7F13
	ADD	HL,DE
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$54FF:	LD	L,A
	LD	H,00H
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	DE,I$7510
	ADD	HL,DE
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.550A:	DI	
	LD	IX,D.7EAA
	LD	IY,D.7EBA
	LD	(IX+0),A
	LD	(IY+0),04H	; 4 
	XOR	A
	LD	(IX+2),A
	LD	(IX+3),A
	LD	(IX+4),01H	; 1 
	LD	(IX+5),A
	LD	HL,I.7500
	LD	(D.7EBC),HL
	LD	A,0
	CALL	C.4D6A			; AUDIO BIOS function
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5535:	LD	A,(BUF+0)
	CP	10H	; 16 
	CCF	
	RET	C
;
	LD	A,11H	; 17 
	LD	(BUF+9),A
	LD	HL,(BUF+2)
	LD	A,L
	AND	H
	INC	A
	JR	NZ,J$554D
;
	INC	HL
	LD	(BUF+2),HL
J$554D:	LD	A,(BUF+1)
	LD	B,A
	RRCA	
	SUB	B
	CPL	
	JR	Z,J$555A
;
	DEC	B
	SCF	
	RET	NZ
;
	XOR	A
J$555A:	LD	(D$7488),A
	LD	A,(BUF+0)
	CALL	C.54F4
;
	LD	A,(BUF+8)
	CP	0FFH
	JR	NZ,J$5572
;
	LD	A,(HL)
	AND	40H	; "@"
	RLCA	
	RLCA	
	LD	(BUF+8),A
J$5572:	AND	0FEH
	SCF	
	RET	NZ
;
	LD	A,(HL)
	AND	07H	; 7 
	JR	Z,J$5592
;
	DEC	A
	JP	Z,J.561C
;
	DEC	A
	JR	Z,J$5590
;
	DEC	A
	JP	Z,J.561C
;
	DEC	A
	JP	Z,J$561E
;
	DEC	A
	JP	Z,J$5621
;
	SCF	
	RET	
;
;	-----------------
J$5590:	LD	A,02H	; 2 
J$5592:	CALL	C.5674
;
	CALL	C.57DB
;
	RET	C
;
	LD	A,(HL)
	LD	B,A
	AND	07H	; 7 
	LD	A,(BUF+8)
	JR	NZ,J$55A6
;
	OR	A
	SCF	
	RET	NZ
;
	INC	A
J$55A6:	DEC	A
	SCF	
	RET	NZ
;
	BIT	7,B
	LD	C,0CH	; 12 
	JR	Z,J.55B1
;
	LD	C,06H	; 6 
J.55B1:	CALL	C.56C0
;
	SCF	
	RET	Z
;
	CALL	C.56C7
;
	RET	C
;
	SCF	
	RET	Z
;
	DI	
J$55BD:	LD	IY,I.3280
	LD	A,(BUF+8)
	OR	A
	JR	Z,J$55CB
	LD	IY,I.32C0
J$55CB:	CALL	C$5640
	CCF	
	RET	NC
	PUSH	BC
	CALL	C.5717
	POP	BC
	PUSH	BC
	LD	A,C
	LD	C,0
	CALL	C.4D6A			; AUDIO BIOS function
	POP	BC
	JR	NC,J$55E8
	CP	3
	JR	NZ,J$55E6
	LD	(INTFLG),A
J$55E6:	LD	C,09H	; 9 
J$55E8:	PUSH	IY
	POP	HL
	LD	DE,I.3280
	OR	A
	SBC	HL,DE
	LD	D,0F0H
	JR	Z,J$55F7
	LD	D,00FH
J$55F7:	LD	A,C
	CP	0CH	; 12 
	JR	Z,J.5608
	CP	0BH	; 11 
	JR	Z,J.5608
	DI	
	LD	A,(D.7EDF)
	AND	D
	LD	(D.7EDF),A
J.5608:	EI	
	LD	A,(D.7B29)
	OR	A
	RET	Z
	LD	A,D
	CPL	
	LD	D,A
J$5611:	CALL	C.6B8D			; CTRL-STOP pressed ?
	RET	Z			; yep, quit
	LD	A,(D.7EDF)
	AND	D
	JR	NZ,J$5611
	RET	

J.561C:	SCF	
	RET	
;
;	-----------------
J$561E:	LD	A,4
	DEFB	1
J$5621:	LD	A,5
	CALL	C.5674
;
	CALL	C.57DB
;
	RET	C
;
	BIT	7,(HL)
	LD	C,09H	; 9 
	JR	Z,J.5632
;
	LD	C,06H	; 6 
J.5632:	CALL	C.56C0
;
	SCF	
	RET	Z
;
	CALL	C.56C7
;
	RET	C
;
	SCF	
	RET	Z
;
	JP	J$55BD
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$5640:	PUSH	HL
	PUSH	IY
	POP	HL
	LD	DE,I.3280
	OR	A
	SBC	HL,DE
	POP	HL
	LD	DE,00F02H
	JR	Z,J.5653
	LD	DE,0F020H
J.5653:	DI	
	LD	A,(D.7EDF)
	AND	D
	JR	Z,J$5662
	EI	
	CALL	C.6B8D			; CTRL-STOP pressed ?
	SCF	
	RET	Z
	JR	J.5653
;
;	-----------------
J$5662:	LD	A,(BUF+9)
	AND	D
	OR	E
	LD	E,A
	LD	A,(D.7EDF)
	OR	E
	LD	(D.7EDF),A
	XOR	A
	LD	(D.7EE0),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5674:	CP	04H	; 4 
	JR	Z,J$5689
;
	LD	DE,D.7EAA
	PUSH	DE
	LD	(DE),A
	INC	DE
	LD	BC,7
	PUSH	HL
	INC	HL
	LDIR	
	POP	HL
	POP	IX
	RET	
;
;	-----------------
J$5689:	LD	(D.7EAA),A
	PUSH	HL
	INC	HL
	INC	HL
	LD	DE,BUF+32
	LD	A,3AH	; ":"
	LD	(DE),A
	INC	DE
	LD	BC,4
	PUSH	DE
	LDIR	
	POP	HL
	CALL	C.5E52
;
	POP	HL
	LD	IX,D.7EAA
	LD	(D.7EAC),BC
	LD	(IX+4),D
	LD	(IX+5),00H
	PUSH	HL
	LD	BC,6
	ADD	HL,BC
	LD	A,(HL)
	LD	(IX+6),A
	INC	HL
	LD	A,(HL)
	LD	(IX+7),A
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.56C0:	LD	A,(IX+6)
	OR	(IX+7)
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.56C7:	LD	DE,(D.7EAE)
	LD	HL,(BUF+2)
	OR	A
	SBC	HL,DE
	CCF	
	RET	C
;
	LD	HL,(BUF+4)
	LD	A,H
	OR	L
	RET	Z
;
	LD	A,H
	AND	L
	INC	A
	JR	NZ,J$56E9
;
	LD	HL,(BUF+2)
	PUSH	DE
	EX	DE,HL
	SBC	HL,DE
	LD	(BUF+4),HL
	POP	DE
J$56E9:	PUSH	DE
	LD	DE,(BUF+2)
	ADD	HL,DE
	POP	DE
	RET	C
;
	EX	DE,HL
	SBC	HL,DE
	RET	C
;
	LD	HL,(D.7EAC)
	LD	DE,(BUF+2)
	LD	A,(D.7EAA)
	CP	04H	; 4 
	JR	NZ,J$570A
;
	LD	A,D
	OR	A
	SCF	
	RET	NZ
;
	LD	D,E
	LD	E,00H
J$570A:	ADD	HL,DE
	LD	(D.7EAC),HL
	LD	HL,(BUF+4)
	LD	(D.7EAE),HL
	XOR	A
	INC	A
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5717:	LD	A,10
	JP	C.4D6A			; AUDIO BIOS function
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.571C:	LD	A,(BUF+0)
	CP	16
	CCF	
	RET	C
	XOR	A
	LD	(BUF+9),A
	LD	HL,(BUF+2)
	LD	A,L
	AND	H
	INC	A
	JR	NZ,J$5733
	INC	HL
	LD	(BUF+2),HL
J$5733:	LD	A,(BUF+1)
	LD	B,A
	RRCA	
	SUB	B
	JR	Z,J$5740
	DEC	B
	SCF	
	RET	NZ
	LD	A,0FFH
J$5740:	LD	(D$7489),A
	LD	A,(BUF+0)
	CALL	C.54F4
	LD	A,(BUF+8)
	CP	0FFH
	JR	NZ,J$5758
	LD	A,(HL)
	AND	40H	; "@"
	RLCA	
	RLCA	
	LD	(BUF+8),A
J$5758:	AND	0FEH
	SCF	
	RET	NZ
	LD	A,(HL)
	AND	07H	; 7 
	JR	Z,J.5774
	DEC	A
	JR	Z,J$57BE
	DEC	A
	JR	Z,J$5772
	DEC	A
	JR	Z,J$57C0
	DEC	A
	JR	Z,J$57C4
	DEC	A
	JR	Z,J$57C7
	SCF	
	RET	
;
;	-----------------
J$5772:	LD	A,02H	; 2 
J.5774:	CALL	C.5674
;
	LD	A,(HL)
	AND	80H
	JR	Z,J$5782
;
	CALL	C.57DB
;
	RET	C
;
	JR	J.57A3
;
;	-----------------
J$5782:	LD	DE,(BUF+6)
	LD	A,E
	AND	D
	INC	A
	JR	Z,J.57A3
;
	PUSH	HL
	LD	HL,0C234H
	AND	A
	SBC	HL,DE
	POP	HL
	RET	C
;
	PUSH	HL
	LD	HL,0707H
	SBC	HL,DE
	CCF	
	POP	HL
	RET	C
;
	LD	(IX+6),E
	LD	(IX+7),D
J.57A3:	LD	A,(HL)
	LD	B,A
	AND	02H	; 2 
	LD	A,(BUF+8)
	JR	NZ,J$57B0
;
	OR	A
	SCF	
	RET	NZ
;
	INC	A
J$57B0:	DEC	A
	SCF	
	RET	NZ
;
	BIT	7,B
	LD	C,0BH	; 11 
	JR	Z,J$57BB
;
	LD	C,05H	; 5 
J$57BB:	JP	J.55B1
;
;	-----------------
J$57BE:	LD	A,0FEH
J$57C0:	ADD	A,03H	; 3 
	JR	J.5774
;
;	-----------------
J$57C4:	LD	A,4
	DEFB	1
J$57C7:	LD	A,5
	CALL	C.5674
;
	CALL	C.57DB
;
	RET	C
;
	BIT	7,(HL)
	LD	C,08H	; 8 
	JR	Z,J$57D8
;
	LD	C,05H	; 5 
J$57D8:	JP	J.5632
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.57DB:	LD	DE,(BUF+6)
	LD	A,E
	AND	D
	INC	A
	RET	Z
;
	CALL	C.5132
;
	RET	C
;
	LD	(IX+6),E
	LD	(IX+7),D
	RET	

;	  Subroutine CALL SAVE PCM
;	     Inputs  ________________________
;	     Outputs ________________________

C$57EE:	LD	D,00H
	DEFB	1

;	  Subroutine CALL LOAD PCM
;	     Inputs  ________________________
;	     Outputs ________________________

C$57F1:	LD	D,01H
	CALL	C.4FB9			; check for "("
	PUSH	HL
	PUSH	DE
	CALL	C.6EF2
	PUSH	HL
	CALL	C.6F04
	POP	HL
	CALL	C.4FB4			; check for ","
	CALL	C.6EFE			; evaluate byte operand 
	CALL	C.4FBE			; check for ")"
	JP	NZ,J.6EA8
	POP	AF
	EX	(SP),HL
	OR	A
	LD	A,E
	JR	Z,J$5817
	CALL	C.5823
	JR	J$581A

J$5817:	CALL	C.581C
J$581A:	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.581C:	CALL	C$5849
;
J$581F:	JP	C,C.6EAB		; illegal function call
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5823:	CALL	C$5A11
;
	JR	J$581F
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5828:	CP	10H	; 16 
	CCF	
	RET	C
;
	PUSH	AF
	XOR	A
	LD	(D.7B2F),A
	CALL	C$6ED2
;
	LD	A,D
	CP	09H	; 9 
	JP	NC,J$6EA5
;
	LD	(BUF+15),A
	POP	AF
	CALL	C.54F4
;
	LD	(BUF+21),HL
	LD	B,(HL)
	CALL	C$5938
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$5849:	CALL	C.5828
;
	RET	C
;
	RET	Z
;
	LD	A,0FEH
	LD	(BUF+0),A
	PUSH	BC
	PUSH	HL
	LD	HL,0
	LD	(BUF+1),HL
	CALL	C.5717
;
	POP	HL
	POP	BC
	LD	A,B
	BIT	7,A
	LD	DE,0
	JR	Z,J$586A
	LD	E,01H	; 1 
J$586A:	LD	(BUF+5),DE
	AND	07H	; 7 
	CP	04H	; 4 
	JP	Z,J$595F
;
	LD	(D.7EAA),A
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(D.7EAC),DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	A,D
	OR	E
	SCF	
	RET	Z
;
	LD	(BUF+7),DE
	LD	A,D
	LD	D,E
	LD	E,08H	; 8 
	OR	A
	JR	Z,J$5898
;
	LD	DE,0
J$5898:	DEC	DE
	LD	(BUF+3),DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(BUF+9),DE
	LD	HL,0
	LD	(BUF+11),HL
	LD	(BUF+13),HL
	LD	A,(BUF+5)
	OR	A
	JR	Z,J$58BF
;
	LD	HL,I.8000
	LD	(BUF+11),HL
	LD	HL,127
	LD	(BUF+13),HL
J$58BF:	LD	HL,BUF
	LD	DE,(NULBUF)
	PUSH	DE
	LD	BC,15
	LDIR	
	POP	BC
	LD	HL,256
	LD	E,01H	; 1 
	LD	A,(BUF+15)
	LD	D,A
	CALL	C.59CE
;
	CALL	C.5B21
;
	LD	A,0FFH
	LD	(D.7B2F),A
	LD	HL,15
	CALL	C.5B95
;
	LD	BC,(BUF+7)
	LD	A,04H	; 4 
	LD	(D.7EBA),A
	LD	HL,(NULBUF)
	LD	(D.7EBC),HL
J$58F6:	PUSH	BC
	CALL	C$591D
;
	CALL	C.5B92
;
	POP	BC
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,J$58F6
;
J$5903:	CALL	C.5BB6
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5906:	LD	HL,(BUF+21)
	LD	A,(HL)
	AND	40H	; "@"
	LD	A,0F0H
	JR	Z,J$5912
	LD	A,0FH	; 15 
J$5912:	DI	
	LD	HL,D.7EDF
	AND	(HL)
	LD	(HL),A
	CALL	C$5A07			; restore orginal H.ERRO
	EI	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$591D:	LD	IX,D.7EAA
	LD	HL,1
	LD	(D.7EAE),HL
	LD	IY,D.7EBA
	LD	A,0
	CALL	C.4D6A			; AUDIO BIOS function
;
	LD	HL,(D.7EAC)
	INC	HL
	LD	(D.7EAC),HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$5938:	BIT	6,B
	LD	DE,00F03H
	LD	IY,I.3280
	JR	Z,J.594A
	LD	DE,0F030H
	LD	IY,I.32C0
J.594A:	EI	
	CALL	C.6B8D			; CTRL-STOP pressed ?
	RET	Z			; yep, quit
	DI	
	LD	A,(D.7EDF)
	AND	D
	JR	NZ,J.594A
	LD	A,(D.7EDF)
	OR	E
	LD	(D.7EDF),A
	EI	
	RET	
;
;	-----------------
J$595F:	CALL	C.5AFD
;
	RET	C
;
	LD	E,07H	; 7 
	LD	(BUF+3),DE
	LD	E,D
	LD	D,00H
	LD	(BUF+7),DE
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(BUF+9),DE
	LD	HL,0
	LD	(BUF+11),HL
	LD	(BUF+13),HL
	LD	A,(BUF+5)
	OR	A
	JR	Z,J$5996
;
	LD	HL,I.8000
	LD	(BUF+11),HL
	LD	HL,127
	LD	(BUF+13),HL
J$5996:	LD	HL,BUF
	LD	DE,(NULBUF)
	PUSH	DE
	LD	BC,15
	LDIR	
	POP	BC
	LD	HL,256
	LD	E,01H	; 1 
	LD	A,(BUF+15)
	LD	D,A
	CALL	C.59CE
;
	CALL	C.5B21
;
	LD	A,0FFH
	LD	(D.7B2F),A
	LD	HL,15
	CALL	C.5B95
;
	LD	DE,(BUF+16)
	LD	HL,(BUF+18)
	CALL	C.5B6C
;
	CALL	C.5B92
;
	JP	J$5903
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.59CE:	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	DI	
	LD	HL,H.ERRO
	PUSH	HL
	LD	DE,I.7B2A
	CALL	C.40DC			; save H.ERRO
	LD	HL,I$59ED
	POP	DE
	CALL	C.40DC			; install new H.ERRO
	LD	A,(D.7B0E)		; slotid MSX-AUDIO
	LD	(H.ERRO+1),A
	JP	J.4E6A			; quit
;
;	-----------------
I$59ED:	RST	30H
	DEFB	0
	DEFW	C$59F2
	RET

C$59F2:	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	C.5906
	LD	A,(D.7B2F)
	OR	A
	CALL	NZ,C.5BB6
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	JP	H.ERRO			; to orginal H.ERRO hook

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5A07:	DI	
	LD	HL,I.7B2A
	LD	DE,H.ERRO
	JP	C.40DC

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5A11:	CALL	C.5828
;
	RET	C
;
	RET	Z
;
	PUSH	BC
	PUSH	HL
	CALL	C.5717
;
	LD	BC,BUF
	LD	HL,15
	PUSH	HL
	LD	E,00H
	LD	A,(BUF+15)
	LD	D,A
	CALL	C.59CE
;
	CALL	C.5B21
;
	LD	A,0FFH
	LD	(D.7B2F),A
	CALL	C.5BA3
;
	POP	DE
	OR	A
	SBC	HL,DE
	POP	HL
	POP	BC
	SCF	
	RET	NZ
;
	LD	A,(BUF+0)
	CP	0FEH
	SCF	
	RET	NZ
;
	LD	A,B
	AND	07H	; 7 
	CP	04H	; 4 
	JP	Z,J$5AEA
;
	LD	(D.7EBA),A
	AND	05H	; 5 
	DEC	A
	SCF	
	RET	Z
;
	INC	HL
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(D.7EBC),DE
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	A,D
	OR	E
	SCF	
	RET	Z
;
	LD	HL,(BUF+7)
	OR	A
	EX	DE,HL
	PUSH	HL
	SBC	HL,DE
	POP	HL
	JR	C,J$5A73
;
	EX	DE,HL
J$5A73:	PUSH	HL
	CALL	C$5B69
;
	POP	BC
	XOR	A
	LD	(BUF+25),A
	LD	HL,(BUF+23)
	LD	(D.7EAC),HL
	LD	A,04H	; 4 
	LD	(D.7EAA),A
J$5A87:	LD	A,B
	OR	C
	JR	Z,J.5A95
;
	PUSH	BC
	CALL	C.5BA3
;
	POP	BC
	CALL	C$5AB7
;
	JR	J$5A87
;
;	-----------------
J.5A95:	CALL	C.5BB6
;
	LD	HL,(BUF+21)
	LD	A,(BUF+5)
	AND	01H	; 1 
	RRCA	
	LD	B,A
	LD	A,(HL)
	AND	7FH
	OR	B
	LD	(HL),A
	LD	DE,(BUF+9)
	PUSH	HL
	LD	BC,6
	ADD	HL,BC
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	HL
	JP	C.5906
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$5AB7:	LD	A,(BUF+26)
	LD	L,A
	LD	H,00H
	OR	A
	PUSH	HL
	SBC	HL,BC
	POP	HL
	JR	C,J$5AC6
;
	LD	L,C
	LD	H,B
J$5AC6:	LD	IX,D.7EAA
	LD	(D.7EAE),HL
	LD	IY,D.7EBA
	LD	A,0
	PUSH	BC
	PUSH	HL
	CALL	C.4D6A			; AUDIO BIOS function
;
	POP	HL
	PUSH	HL
	LD	BC,(D.7EBC)
	ADD	HL,BC
	LD	(D.7EBC),HL
	POP	BC
	POP	HL
	OR	A
	SBC	HL,BC
	LD	C,L
	LD	B,H
	RET	
;
;	-----------------
J$5AEA:	CALL	C.5AFD
;
	RET	C
;
	LD	DE,(BUF+16)
	LD	HL,(BUF+18)
	CALL	C.5B6C
;
	CALL	C.5BA3
;
	JR	J.5A95
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5AFD:	INC	HL
	INC	HL
	PUSH	HL
	LD	DE,BUF+16
	LD	A,3AH	; ":"
	LD	(DE),A
	INC	DE
	LD	BC,4
	PUSH	DE
	LDIR	
	POP	HL
	CALL	C.5E52
;
	POP	HL
	LD	(BUF+16),BC
	LD	E,00H
	LD	(BUF+18),DE
	LD	A,D
	OR	A
	RET	NZ
;
	SCF	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5B21:	LD	A,(H.PHYD+0)
	CP	0C9H			; MSX disksystem ?
	JP	Z,C.6EAB		; nope, illegal function call
	PUSH	BC
	PUSH	HL
	LD	HL,BUF+27
	PUSH	HL
	LD	(HL),D
	LD	A,E
	AND	A
	PUSH	AF
	EX	DE,HL
	INC	DE
	LD	HL,FILNAM
	LD	BC,11
	LDIR	
	XOR	A
	LD	B,19H
J$5B40:	LD	(DE),A
	INC	DE
	DJNZ	J$5B40
;
	POP	AF
	POP	DE
	PUSH	AF
	LD	C,0FH			; OPEN (FCB)
	JR	Z,J$5B4D
	LD	C,16H			; CREATE (FCB)
J$5B4D:	CALL	C.F37D
;
	INC	A
	JR	NZ,J$5B5C
;
	POP	AF
	JP	Z,J$6EA2
;
	LD	E,43H	; "C"
	JP	J.6EB6
;
;	-----------------
J$5B5C:	LD	HL,1
	LD	(BUF+41),HL
	POP	AF
	POP	HL
	POP	DE
	LD	A,H
	OR	L
	JR	NZ,C.5B6C
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$5B69:	CALL	C$5B78
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5B6C:	LD	(BUF+23),DE
	LD	(BUF+25),HL
	LD	C,1AH			; SETDMA
	JP	C.F37D
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$5B78:	LD	HL,-768
	ADD	HL,SP
	JR	NC,J.5B8A
;
	LD	DE,(STREND)
	AND	A
	SBC	HL,DE
	JR	C,J.5B8A
;
	LD	A,H
	AND	A
	RET	NZ
;
J.5B8A:	LD	DE,(NULBUF)
	LD	HL,256
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5B92:	LD	HL,(BUF+25)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5B95:	LD	DE,BUF+27
	LD	C,26H			; random block write
	CALL	C.F37D
	AND	A
	RET	Z
	LD	E,42H	; "B"
	JR	J$5BB3
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5BA3:	LD	HL,(BUF+25)
	LD	DE,BUF+27
	LD	C,27H			; random block read
	CALL	C.F37D
	LD	A,L
	OR	H
	RET	NZ
;
	LD	E,37H	; "7"
J$5BB3:	JP	J.6EB6
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5BB6:	XOR	A
	LD	(D.7B2F),A
	LD	DE,BUF+27
	LD	C,10H			; CLOSE (FCB)
	JP	C.F37D

;	  Table      EXTBIO

I$5BC2:	DEFB	0,0,0
	JP	J$5CC9		; start routine in AUDIO-BIOS
	JP	C.43AA		; ´CALL AUDIO´
	JP	C.42F3		; ´CALL SYNTHE´
	JP	C.5F50		; playvoice active ?
	JP	J$4403		; set BGM
	JP	C.4514		; mk tempo
	JP	J$5CBD		; mk play
	JP	J$5CC3		; mk append
	JP	C.488C		; stopm ?
	JP	J$48B5		; mk cont
	JP	C.4576		; recmod
	JP	C.6CDC
	JP	C.51BA
	JP	C.5535		; rec pcm
	JP	C.571C		; play pcm
	JP	C.458D		; freq pcm
	JP	C.4551		; mk pcm
	JP	C.44B4		; vol pcm
	JP	C.581C		; save pcm
	JP	C.5823		; load pcm
	JP	C.463F		; copy pcm
	JP	C.4705		; convp
	JP	C.46E8		; conva
	JP	C.5D86		; set voice
	JP	C.5E5C		; copy voice
	RET	
	RET	
	RET	

;	  Subroutine initialize EXTBIO
;	     Inputs  ________________________
;	     Outputs ________________________

J$5C13:	DI	
	LD	HL,HOKVLD
	BIT	0,(HL)
	JR	NZ,J$5C2A
	SET	0,(HL)
	LD	HL,EXTBIO+0
	LD	DE,EXTBIO+1
	LD	BC,29-1
	LD	(HL),0C9H
	LDIR	
J$5C2A:	LD	DE,J.7E7C
	LD	HL,EXTBIO
	LD	BC,5
	LDIR				; save current EXTBIO
	LD	HL,I$5C46
	LD	DE,EXTBIO
	CALL	C.40DC			; MSX-AUDIO EXTBIO
	LD	A,(D.7B0E)		; slotid MSX-AUDIO
	LD	(EXTBIO+1),A
	EI	
	RET	

I$5C46:	RST	30H
	DEFB	0
	DEFW	C$5C4B
	RET	

C$5C4B:	EI	
	PUSH	AF
	LD	A,D
	INC	A			; system exclusive EXTBIO ?
	JR	Z,J$5C68		; yep, handle
	DEC	A			; broadcast EXTBIO ?
	JR	NZ,J$5C7B		; nope, check if MSX-AUDIO EXTBIO
	LD	A,E
	OR	A			; build devicename table function ?
	JR	Z,J$5C5C		; yep, handle
J.5C58:	POP	AF
	JP	J.7E7C			; control to next EXTBIO handler

J$5C5C:	LD	A,0AH
	CALL	C.5CB3			; write devicenumber (10 = MSX-AUDIO)
	LD	A,00H
	CALL	C.5CB3			; write reserved
	JR	J.5C58			; control to next EXTBIO handler

J$5C68:	LD	A,E
	OR	A
	JR	NZ,J$5C79
	CALL	C.5CA2			; write slotid and jumptable adres
	LD	A,00H
	CALL	C.5CB3			; write makerid (0 = ASCII)
	LD	A,00H
	CALL	C.5CB3			; write reserved
J$5C79:	JR	J.5C58			; control to next EXTBIO handler

J$5C7B:	CP	0AH			; MSX-AUDIO EXTBIO ?
	JR	NZ,J.5C58		; nope, control to next EXTBIO handler
	LD	A,E
	OR	A			; function 0
	JR	Z,J$5C89
	CP	01H			; function 1
	JR	Z,J$5C93
	JR	J.5C58			; control to next EXTBIO handler

J$5C89:	CALL	C.5CA2			; write slotid and jumptable adres
	LD	A,00H
	CALL	C.5CB3			; write reserved
	JR	J.5C58			; control to next EXTBIO handler

J$5C93:	POP	AF
	INC	A			; increase number of Y8950
	PUSH	HL
	LD	HL,D.7391
	BIT	0,(HL)			; 2nd Y8950 found ?
	POP	HL
	JR	NZ,J$5C9F		; nope,
	INC	A			; increase number of Y8950
J$5C9F:	PUSH	AF
	JR	J.5C58			; control to next EXTBIO handler

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5CA2:	LD	A,(D.7B0E)		; slotid MSX-AUDIO
	CALL	C.5CB3
	LD	A,LOW I$5BC2
	CALL	C.5CB3
	LD	A,HIGH I$5BC2
	CALL	C.5CB3
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5CB3:	PUSH	BC
	LD	E,A
	LD	A,B
	CALL	WRSLT
	EI	
	INC	HL
	POP	BC
	RET	
;
;	-----------------
J$5CBD:	CALL	C.5CCF
	JP	J.49B9
;
;	-----------------
J$5CC3:	CALL	C.5CCF
;
	JP	C.49D0

J$5CC9:	CALL	C.5CCF
	JP	C.4D6D			; start routine in MSX-AUDIO BIOS
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5CCF:	LD	IX,(BUF+0)
	LD	IY,(BUF+2)
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5CD8:	DI	
	LD	HL,I$7FFF
	XOR	A
	LD	E,A
	LD	(HL),A
	LD	C,0C0H
	CALL	C.5CFE			; test if Y8950 at I/O 0C0H
	JR	C,J$5CE8		; nope,
	SET	0,E
J$5CE8:	LD	C,0C2H
	CALL	C.5CFE			; test if Y8950 at I/O 0C2H
	JR	C,J$5CF1		; nope,
	SET	1,E
J$5CF1:	LD	A,E
	LD	(HL),A
	CP	3			; Y8950 found on 0C0H AND 0C2H ?
	RET	NZ			; nope, quit
	CALL	C$5D06			; check if Y8950 on 0C0H is the same as on 0C2H
	RET	NC			; it is not, quit
	LD	E,1
	LD	(HL),E			; one Y8950 on 0C0H
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5CFE:	CALL	C.5D1B			; program TIMER-1
	CALL	C.5D32			; check TIMER-1 status
	JR	J$5D12			; disable TIMER-1

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5D06:	LD	C,0C0H
	CALL	C.5D1B			; program TIMER-1 first Y8950
	LD	C,0C2H
	CALL	C.5D32			; check TIMER-1 status of second Y8950
	LD	C,0C0H
J$5D12:	LD	A,78H

;	  Subroutine write OPL register
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D14:	OUT	(C),D
	INC	C
	OUT	(C),A
	DEC	C
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5D1B:	LD	D,02H
	LD	A,0FCH
	CALL	C.5D14			; OPL TIMER-1 register
	LD	D,04H
	LD	A,78H			; mask timer 1, mask timer 2, ....
	CALL	C.5D14			; OPL FLAG CONTROL register
	LD	A,39H			; timer 1 enabled
	CALL	C.5D14			; OPL FLAG CONTROL register
	LD	A,80H			; irq reset
	JR	C.5D14			; OPL FLAG CONTROL register

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D32:	IN	A,(C)
	AND	40H			; TIMER-1 interrupt ?
	RET	NZ			; yep, quit
	LD	B,A
J$5D38:	IN	A,(C)
	AND	40H
	SCF	
	RET	NZ
	DJNZ	J$5D38
	OR	A
	RET	

;	  Subroutine CALL VOICE
;	     Inputs  ________________________
;	     Outputs ________________________

C$5D42:	CALL	C.6EE4
	DEFB	"("			; check for "("
	LD	DE,BUF
	LD	B,9
J$5D4B:	LD	A,(HL)
	CP	","
	JR	Z,J$5D6F
	PUSH	BC
	LD	A,9
	SUB	B
	LD	(DE),A			; channelnumber
	INC	DE
	PUSH	DE
	LD	A,(HL)
J$5D58:	CALL	C.5E28			; evaluate instrument operand
	LD	A,0
	JR	C,J$5D60		; instrument number,
	CPL				; variable
J$5D60:	EX	(SP),HL
	LD	(HL),A
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL			; instrument or address variable
	EX	(SP),HL
	POP	DE
	POP	BC
	LD	A,(HL)
	CP	")"
	JR	Z,J$5D75
J$5D6F:	CALL	C.6EE4
	DEFB	","
	DJNZ	J$5D4B
J$5D75:	CALL	C.6EE4
	DEFB	")"
	JP	NZ,J.6EA8
	LD	A,0FFH
	LD	(DE),A			; end marker
	CALL	C.5D86
	JP	C,C.6EAB		; illegal function call
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5D86:	PUSH	HL
	LD	HL,BUF
J$5D8A:	LD	A,(HL)
	CP	0FFH
	JR	Z,J$5DC4
	INC	HL
	CALL	C$5DD0			; get pointer to channel
	LD	A,(HL)
	INC	HL
	OR	A
	JR	Z,J$5DA8
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	PUSH	HL
	CALL	C.4D83			; MSX-AUDIO in page 0
	LD	A,29H
	CALL	C.5DC7			; do AUDIO function and next
	LD	A,29H
	JR	J$5DBA

J$5DA8:	LD	C,(HL)
	LD	A,C
	CP	64
	CCF	
	RET	C
	INC	HL
	PUSH	HL
	CALL	C.4D83			; MSX-AUDIO in page 0
J$5DB3:	LD	A,27H
	CALL	C.5DC7			; do AUDIO function and next
	LD	A,27H
J$5DBA:	CALL	C.5DC7			; do AUDIO function and next
	CALL	C.4D8F			; restore page 0
	POP	HL
	INC	HL
	JR	J$5D8A			; next channel

J$5DC4:	POP	HL
	OR	A
	RET	

;	  Subroutine do AUDIO function
;	     Inputs  ________________________
;	     Outputs ________________________

C.5DC7:	PUSH	BC
	RST	00H
	LD	BC,32
	ADD	IX,BC
	POP	BC
	RET	

;	  Subroutine get pointer to channel
;	     Inputs  ________________________
;	     Outputs ________________________

C$5DD0:	LD	IX,I.3000
	OR	A
	RET	Z
	PUSH	BC
	LD	BC,64
J$5DDA:	ADD	IX,BC
	DEC	A
	JR	NZ,J$5DDA
	POP	BC
	RET	

;	  Subroutine CALL VOICE COPY
;	     Inputs  ________________________
;	     Outputs ________________________

C$5DE1:	CALL	C.6EE4
	DEFB	"("
	CALL	C.5E28			; evaluate instrument operand
	CCF	
	SBC	A,A
	LD	(BUF+0),A		; instrumentnumber or variable
	LD	(BUF+1),DE		; instrumentnumber or address of variable
	LD	(BUF+3),BC		; variablesize
	CALL	C.6EE4
	DEFB	","			; check for ","
	CALL	C.5E28			; evaluate instrument operand
	CCF	
	SBC	A,A
	LD	(BUF+5),A		; instrumentnumber or variable
	LD	(BUF+6),DE		; instrumentnumber or address of variable
	LD	(BUF+8),BC		; variablesize
	JR	NZ,J$5E10		; destination a variable, skip
	LD	A,E
	CP	32			; destination a readonly instrument ?
	JR	C,J.5E41		; yep, illegal function call
J$5E10:	CALL	C.6EE4
	DEFB	")"			; check for ")"
	JP	NZ,J.6EA8
	PUSH	HL
	LD	HL,BUF+0
	LD	A,(BUF+5)
	AND	(HL)			; source and destination both variables ?
	JR	NZ,J.5E41		; yep, illegal function call
	CALL	C.5E5C			; copy instrument definition
	JR	C,J.5E41		; error, illegal function call
	POP	HL
	RET	

;	  Subroutine evaluate instrument operand
;	     Inputs  ________________________
;	     Outputs ________________________

C.5E28:	CP	"@"
	JR	Z,J$5E38
	CP	0F3H			; * token ?
	JR	NZ,J$5E44
	CALL	C.6EEC			; read * token
	LD	DE,255			; indicates all changable instruments
	SCF
	RET	

J$5E38:	CALL	C.6EEC			; read "@" char
	CALL	C.6EFE			; evaluate byte operand 
	CP	64
	RET	C
J.5E41:	JP	C.6EAB			; illegal function call

J$5E44:	CALL	C.5E52
	LD	A,E
	AND	0E0H
	OR	D
	JR	Z,J.5E41
	PUSH	DE
	LD	E,C
	LD	D,B
	POP	BC
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.5E52:	CALL	C.4935
;
	EX	DE,HL
	OR	A
	SBC	HL,BC
	INC	HL
	EX	DE,HL
	RET	

;	  Subroutine copy instrument definition
;	     Inputs  ________________________
;	     Outputs ________________________

C.5E5C:	LD	A,(BUF+5)
	LD	HL,(BUF+6)
	OR	A			; destination a variable ?
	JR	NZ,J$5E6C		; yep, already a address
	LD	A,L
	INC	A			; instrument 255 ?
	JR	Z,J$5EA6		; yep, destination is all instrument definitions 32-63
	CALL	C.5EBB			; get pointer to instrument definition
J$5E6C:	PUSH	HL
	LD	A,(BUF+0)
	LD	HL,(BUF+1)
	OR	A			; source a variable ?
	JR	NZ,J$5E7D		; yep, already a address
	LD	A,L
	INC	A			; instrument 255 ?
	JR	Z,J$5E8D		; yep, source is all instrument definitions 32-63
	CALL	C.5EBB			; get pointer to instrument definition
J$5E7D:	POP	DE
	LD	BC,32
J$5E81:	DI	
	CALL	C.4D83			; MSX-AUDIO in page 0
	LDIR				; copy instrument definition
	CALL	C.4D8F			; restore page 0
	OR	A
	EI	
	RET	

J$5E8D:	POP	HL			; clean stack
	LD	A,(BUF+5)
	OR	A			; destination a instrument ?
	SCF	
	RET	Z			; yep, quit with error
	LD	A,(BUF+9)
	CP	HIGH (32*32)		; variablesize big enough ?
	RET	C			; nope, quit with error
	LD	HL,(D.7382)		; pointer to programable instrument definitions (32-63)
	LD	DE,(BUF+6)		; destination
J$5EA1:	LD	BC,32*32
I$5EA4:	JR	J$5E81			; copy instrument definitions

J$5EA6:	LD	A,(BUF+0)
	OR	A			; source a instrument ?
	SCF	
	RET	Z			; yep, quit with error
	LD	A,(BUF+4)
	CP	HIGH (32*32)		; variablesize big enough ?
	RET	C			; nope, quit with error
	LD	HL,(BUF+1)
	LD	DE,(D.7382)		; pointer to programable instrument definitions (32-63)
	JR	J$5EA1			; copy instrument definitions

;	  Subroutine get pointer to instrument definition
;	     Inputs  L = instrumentnumber
;	     Outputs HL = pointer

C.5EBB:	LD	A,L
	CP	32
	LD	HL,(D$7380)		; pointer to predefined instrument definitions (00-31)
	JR	C,J$5ECC
	LD	HL,(D.7382)		; pointer to programable instrument definitions (32-63)
	LD	DE,4000H
	ADD	HL,DE			; page 1 based
	SUB	32
J$5ECC:	EX	DE,HL
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	H,00H
	LD	L,A
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,DE
	RET	

;	  Subroutine CALL MK VOICE
;	     Inputs  ________________________
;	     Outputs ________________________

C$5ED7:	CALL	C.6EE4
	DEFB	"("
	CALL	C.5E28
	CCF	
	SBC	A,A
	PUSH	DE
	PUSH	AF
	PUSH	DE
	PUSH	AF
	LD	A,(HL)
	CP	")"
	JR	Z,J$5EF6
	POP	AF
	POP	DE
	CALL	C.6EE4
	DEFB	","
	CALL	C.5E28
	CCF	
	SBC	A,A
	PUSH	DE
	PUSH	AF
J$5EF6:	CALL	C.6EE4
	DEFB	")"
	JP	NZ,J.6EA8
	POP	AF
	POP	DE
	POP	BC
	EX	(SP),HL
	CALL	C$5F09
	JP	C,C.6EAB		; illegal function call
	POP	HL
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5F09:	PUSH	AF
	PUSH	DE
	PUSH	BC
	PUSH	HL
	POP	BC
	POP	AF
	LD	IY,I.3280
	CALL	C$5F1E
	JR	C,J$5F32
	POP	BC
	POP	AF
	LD	IY,I.32C0

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$5F1E:	DI	
	OR	A
	LD	A,56
	JR	NZ,J$5F2F
	LD	A,B
	OR	A
	SCF	
	RET	NZ
	LD	A,C
	CP	40H
	CCF	
	RET	C
	LD	A,54
J$5F2F:	JP	C.4D6A			; AUDIO BIOS function
J$5F32:	POP	BC
	POP	AF
	SCF	
	RET	

;	  Subroutine CALL PLAY
;	     Inputs  ________________________
;	     Outputs ________________________

C$5F36:	CALL	C.42BE			; check for "(" and evaluate byte operand
	LD	A,(D.7B22)
J$5F3C:	CP	E
	JP	C,C.6EAB		; illegal function call
	LD	A,E
	PUSH	HL
	CALL	C.5F50
	EX	(SP),HL
	CALL	C.4FB4			; check for ","
	CALL	C.6ED8
	EX	(SP),HL
	JP	J.4A41
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.5F50:	LD	HL,(D.7B26)
	OR	A
	JR	NZ,J.5F61
	LD	A,H
	AND	1FH
	OR	L
	JR	Z,J.5F5E
J$5F5C:	LD	A,0FFH
J.5F5E:	LD	L,A
	LD	H,A
	RET	

J.5F61:	SRL	H
	RR	L
	DEC	A
	JR	NZ,J.5F61
	SBC	A,A
	JR	J.5F5E
;
;	-----------------
I$5F6B:	LD	A,(D.7B0E)		; slotid MSX-AUDIO
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	A,(EXPTBL+0)
	LD	H,40H
	CALL	ENASLT
	POP	HL
	POP	DE
	POP	BC
	CALL	M2F8A
	POP	AF
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	H,40H
	CALL	ENASLT
	JP	J.4E6A
;
;	-----------------
I.5F8D:	DEFB	" "

;	  Subroutine PLAY statement handler
;	     Inputs  ________________________
;	     Outputs ________________________

C$5F8E:	CALL	C$411C
	CALL	C$5FC5
	PUSH	HL
	LD	A,(D.7B0E)		; slotid MSX-AUDIO
	DI	
	ADD	A,A
	LD	HL,8
	JR	NC,J$5FA1
	LD	L,8+8
J$5FA1:	ADD	HL,SP
	PUSH	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	HL,M73E5+3
	OR	A
	SBC	HL,DE
	JP	NZ,J$6E9F
	POP	HL
	DEC	HL
	LD	D,H
	LD	E,L
	INC	DE
	INC	DE
	LD	A,(D.7B0E)		; slotid MSX-AUDIO
	ADD	A,A
	LD	BC,8
	JR	NC,J$5FC0
	LD	C,8+8
J$5FC0:	LDDR	
	POP	HL
	POP	HL
	RET	

;	  Subroutine execute PLAY statement
;	     Inputs  ________________________
;	     Outputs ________________________

C$5FC5:	CP	"#"			; playdevice specified ?
	JP	NZ,J.5FE5		; no, use PSG
	CALL	C.6EEC			; read "#" char
	CALL	C.6EFE			; evaluate byte operand
	PUSH	AF
	CALL	C.4FB4			; check for ","
	POP	AF
	OR	A
	JR	Z,J.5FE5		; 0, use PSG
	DEC	A
	JR	Z,J$5FE2		; 1, use MIDI
	SUB	3
	JR	C,J$6018		; 2-3, use AUDIO/PSG
	JP	C.6EAB			; illegal function call

J$5FE2:	INC	A			; MIDI
	JR	J$6019

J.5FE5:	XOR	A			; no MIDI
	LD	(D.7B0F),A
	PUSH	HL
	LD	A,(D.7B23)
	OR	A
	JR	Z,J$600E
	LD	B,A
J$5FF1:	PUSH	BC
	LD	A,B
	DEC	A
	CALL	C.6F0F
	LD	DE,I.5F8D
	LD	(HL),01H	; 1 
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	D,H
	LD	E,L
J.6003:	LD	BC,28
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	BC
	DJNZ	J$5FF1
;
J$600E:	POP	HL
	XOR	A
	LD	(PRSCNT),A
	LD	A,(D.7B23)
C$6015	EQU	$-1
	JR	J$6020
;
;	-----------------
J$6018:	XOR	A			; no MIDI
J$6019:	LD	(D.7B0F),A
	XOR	A
	LD	(PRSCNT),A
J$6020:	PUSH	HL
	LD	HL,-10
	ADD	HL,SP
	LD	(SAVSP),HL
	POP	HL
	PUSH	AF
J$602A:	PUSH	HL
	LD	HL,I$5F6B
	LD	DE,BUF+128
	LD	BC,0022H
	LDIR	
	POP	HL
	CALL	C.6EF2
;
	EX	(SP),HL
	PUSH	HL
	CALL	C.6F04
;
	CALL	C.6F5D
;
	LD	A,E
	OR	A
	JR	NZ,J$604D
;
	LD	E,01H	; 1 
	LD	BC,I.5F8D
	LD	D,C
	LD	C,B
J$604D:	POP	AF
	PUSH	AF
	CALL	C.66CC
;
	XOR	A
	LD	(IX),A
	POP	AF
	PUSH	AF
	CALL	C.6F0F
;
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	(HL),C
	INC	HL
	LD	D,H
	LD	E,L
	LD	BC,28
	ADD	HL,BC
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	POP	BC
	POP	HL
	INC	B
	LD	A,(D.7B22)
	DEC	A
	CP	B
	JR	C,J$6090
;
	DEC	HL
	CALL	C.6EEC
;
	JR	Z,J.6081
;
	PUSH	BC
	CALL	C.4FB4			; check for ","
;
	JR	J$602A
;
;	-----------------
J.6081:	LD	A,B
	LD	(VOICEN),A
	CALL	C.6191
;
	INC	B
	LD	A,(D.7B22)
	DEC	A
	CP	B
	JR	NC,J.6081
;
J$6090:	DEC	HL
	CALL	C.6EEC
;
	JP	NZ,J.6EA8
;
	PUSH	HL
J$6098:	XOR	A
J$6099:	PUSH	AF
	LD	(VOICEN),A
	LD	C,A
	LD	A,(D.7B22)
	SUB	C
	SUB	04H	; 4 
	LD	HL,I$61C8
	JR	C,J.60B8
	LD	HL,I$6454
	JR	NZ,J.60B8
	LD	A,(D.7B1F)
	AND	01H			; drum mode ?
	JR	Z,J.60B8		; nope,
	LD	HL,I$676F
J.60B8:	LD	(MCLTAB),HL
	LD	A,C
	LD	B,A
	CALL	C.61BB
	JP	C,J.6153
	LD	A,B
	CALL	C.6F0F
	LD	A,(HL)
	OR	A
	JP	Z,J.6153
	LD	(MCLLEN),A
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	(MCLPTR),DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	PUSH	HL
	LD	L,24H	; "$"
	CALL	C.6F13
;
	PUSH	HL
	LD	HL,(SAVSP)
	DEC	HL
	POP	BC
	DI	
	CALL	C.6F50
;
	POP	DE
	LD	H,B
	LD	L,C
	LD	SP,HL
	EI	
	LD	A,(VOICEN)
	OR	A
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$60F5:	JR	NZ,J.6108
	LD	A,(D.7B0F)		; PLAY MIDI
	LD	HL,D.7B10
	CP	(HL)
	JR	Z,J.6108
	LD	(HL),A
	LD	A,88H
	OR	(HL)
	LD	E,A
	CALL	C.61AB
J.6108:	JP	J.6D1A
;
;	-----------------
J.610B:	LD	A,(MCLLEN)
	OR	A
	JR	NZ,J$6114
;
J$6111:	CALL	C.6191
;
J$6114:	LD	A,(VOICEN)
	CALL	C.6F0F
;
	LD	A,(MCLLEN)
	LD	(HL),A
	INC	HL
	LD	DE,(MCLPTR)
	LD	(HL),E
	INC	HL
	LD	(HL),D
	LD	HL,0
	ADD	HL,SP
	EX	DE,HL
	LD	HL,(SAVSP)
	DI	
	LD	SP,HL
	POP	BC
	POP	BC
	POP	BC
	PUSH	HL
	OR	A
	SBC	HL,DE
	JR	Z,J$6151
;
	LD	A,0F0H
	AND	L
	OR	H
	JP	NZ,C.6EAB		; illegal function call
;
	LD	L,24H	; "$"
	CALL	C.6F13
;
	POP	BC
	DEC	BC
	CALL	C.6F50
;
	POP	HL
	DEC	HL
	LD	(HL),B
	DEC	HL
	LD	(HL),C
	JR	J.6153
;
;	-----------------
J$6151:	POP	BC
	POP	BC
J.6153:	EI	
	POP	AF
	INC	A
	LD	HL,D.7B22
	CP	(HL)
	JP	C,J$6099
	DI	
	CALL	C.6B8D			; CTRL-STOP pressed ?
	JR	Z,J$618B		; yep,
	LD	A,(PRSCNT)
	RLCA	
	JR	C,J$6174
;
	LD	HL,D.7B28
	INC	(HL)
	LD	A,(HL)
	LD	(PLYCNT),A
	CALL	C.6F66
;
J$6174:	EI	
	LD	HL,PRSCNT
	SET	7,(HL)
	LD	A,(HL)
	LD	HL,D.7B24
	CP	(HL)
	JP	NZ,J$6098
;
	LD	A,(D.7B29)
	OR	A
	CALL	NZ,C.6B79
;
	JR	NC,J$618F
;
J$618B:	CALL	C.6CDC
;
	EI	
J$618F:	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6191:	LD	A,(PRSCNT)
	INC	A
	LD	(PRSCNT),A
	LD	E,0FFH
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$619A:	PUSH	HL
	PUSH	BC
J$619C:	PUSH	DE
	LD	A,(VOICEN)
	DI	
	CALL	C.6E25
;
	EI	
	POP	DE
	JR	Z,J$619C
;
J$61A8:	POP	BC
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.61AB:	PUSH	HL
	PUSH	BC
J$61AD:	PUSH	DE
	LD	A,(VOICEN)
	DI	
	CALL	C.6E25
;
	POP	DE
	JR	NZ,J$61A8
;
	EI	
	JR	J$61AD
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.61BB:	LD	A,(VOICEN)
	PUSH	BC
	DI	
	CALL	C$6E6D
	EI	
	POP	BC
	CP	8
	RET	

;	  Table      MCL PSG
;	     Inputs  ________________________
;	     Outputs ________________________

I$61C8:	DEFB	"A"
	DEFW	C$6303
	DEFB	"M"+128
	DEFW	C$623A
	DEFB	"V"+128
	DEFW	C$6223
	DEFB	"S"+128
	DEFW	C$625C
	DEFB	"N"+128
	DEFW	C$62C0
	DEFB	"O"+128
	DEFW	C$628C
	DEFB	"R"+128
	DEFW	C$629B
	DEFB	"T"+128
	DEFW	C$627F
	DEFB	"L"+128
	DEFW	C$6266
	DEFB	"X"
	DEFW	C$6E0B
	DEFB	">"
	DEFW	C$657A
	DEFB	"<"
	DEFW	C$6587
	DEFB	"Y"+128
	DEFW	C$63E8
	DEFB	"Q"+128
	DEFW	C$63FE
	DEFB	"@"
	DEFW	C$640D
	DEFB	"&"
	DEFW	C$63E7
	DEFB	"Z"+128
	DEFW	C$6409
	DEFB	0

I.61FC:	DEFB	010H,012H,014H,016H
	DEFB	000H,000H,002H,004H
	DEFB	006H,008H,00AH,00AH
	DEFB	00CH,00EH,010H

I$620B:	DEFW	3421,3228,3047,2876,2715,2562
	DEFW	2419,2283,2155,2034,1920,1812


C$6223:	JR	C,J$6227
	LD	E,08H	; 8 
J$6227:	LD	A,0FH	; 15 
	CP	E
	JR	C,J.627C
;
J$622C:	CALL	C.6425
;
	LD	L,12H	; 18 
	CALL	C.6F13
;
	LD	A,40H	; "@"
	AND	(HL)
	OR	E
	LD	(HL),A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$623A:	LD	A,E
	JR	C,J$6240
;
	CPL	
	INC	A
	LD	E,A
J$6240:	OR	D
	JR	Z,J.627C
;
	LD	L,13H	; 19 
	CALL	C.6F13
;
	PUSH	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	CALL	C.6FF4
;
	POP	HL
	RET	Z
;
	LD	(HL),E
	INC	HL
	LD	(HL),D
	DEC	HL
	DEC	HL
	LD	A,40H	; "@"
	OR	(HL)
	LD	(HL),A
	RET	

C$625C:	LD	A,E
	CP	10H	; 16 
	JR	NC,J.627C
	OR	10H	; 16 
	LD	E,A
	JR	J$622C
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$6266:	JR	C,J$626A
;
	LD	E,04H	; 4 
J$626A:	LD	A,E
	CP	41H	; "A"
	JR	NC,J.627C
;
	LD	L,10H	; 16 
J.6271:	CALL	C.6F13
;
	CALL	C.6425
;
	OR	E
	JR	Z,J.627C
;
	LD	(HL),A
	RET	
;
;	-----------------
J.627C:	JP	C.6EAB			; illegal function call
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$627F:	JR	C,J$6283
;
	LD	E,78H	; "x"
J$6283:	LD	A,E
	CP	20H	; " "
	JR	C,J.627C
;
	LD	L,11H	; 17 
	JR	J.6271
;
;	-----------------
C$628C:	JR	C,J$6290
;
	LD	E,04H	; 4 
J$6290:	LD	A,E
	CP	09H	; 9 
	JR	NC,J.627C
;
	LD	L,0FH	; 15 
	JR	J.6271
;
;	-----------------
J$6299:	XOR	A
	LD	D,A
C$629B:	JR	C,J.629F
;
	LD	E,04H	; 4 
J.629F:	XOR	A
	OR	D
	JR	NZ,J.627C
;
	OR	E
	JR	Z,J.627C
;
	CP	41H	; "A"
	JR	NC,J.627C
;
J$62AA:	LD	HL,0
	PUSH	HL
	LD	L,10H	; 16 
	CALL	C.6F13
;
	PUSH	HL
	INC	HL
	INC	HL
	LD	A,(HL)
	LD	(SAVVOL),A
	LD	(HL),80H
	DEC	HL
	DEC	HL
	JR	J$633C
;
;	-----------------
C$62C0:	JR	NC,J.627C
;
	CALL	C.6425
;
	OR	E
	JR	Z,J$62AA
;
	CP	61H	; "a"
	JR	NC,J.627C
;
	LD	A,E
	LD	B,00H
	LD	E,B
J$62D0:	SUB	0CH	; 12 
	INC	E
	JR	NC,J$62D0
;
	ADD	A,0CH	; 12 
	ADD	A,A
	LD	C,A
	JP	J$6313
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.62DC:	LD	B,C
	LD	A,C
	SUB	40H	; "@"
	ADD	A,A
	LD	C,A
	CALL	C.6D6E
;
	JR	Z,J.6301
;
	CP	23H	; "#"
	RET	Z
;
	CP	2BH	; "+"
	RET	Z
;
	CP	2DH	; "-"
	JR	Z,J$62F6
;
	CALL	C.6D94
;
	JR	J.6301
;
;	-----------------
J$62F6:	DEC	C
	LD	A,B
	CP	43H	; "C"
	JR	Z,J$6300
;
	CP	46H	; "F"
	JR	NZ,J.6301
;
J$6300:	DEC	C
J.6301:	DEC	C
	RET	
;
;	-----------------
C$6303:	CALL	C.62DC
;
	LD	L,0FH	; 15 
	CALL	C.6F13
;
	LD	E,(HL)
	LD	B,00H
	LD	HL,I.61FC
	ADD	HL,BC
	LD	C,(HL)
J$6313:	LD	HL,I$620B
	ADD	HL,BC
	LD	A,E
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
J$631B:	DEC	A
	JR	Z,J$6327
;
	SRL	D
	RR	E
	JR	J$631B
;
;	-----------------
J$6324:	CALL	C.6EAB			; illegal function call
;
J$6327:	ADC	A,E
	LD	E,A
	ADC	A,D
	SUB	E
	LD	D,A
	PUSH	DE
	LD	L,10H	; 16 
	CALL	C.6F13
;
	LD	C,(HL)
	PUSH	HL
	CALL	C.6D6E
;
	JR	Z,J.6348
;
	CALL	C.6DA5
;
J$633C:	LD	A,40H	; "@"
	CP	E
	JR	C,J$6324
;
	CALL	C.6425
;
	OR	E
	JR	Z,J.6348
;
	LD	C,E
J.6348:	POP	HL
	INC	HL
	PUSH	HL
	CALL	C$667B
;
	EX	DE,HL
	LD	BC,-9
	POP	HL
	PUSH	HL
	ADD	HL,BC
	LD	(HL),D
	INC	HL
	LD	(HL),E
	INC	HL
	LD	C,02H	; 2 
	EX	(SP),HL
	INC	HL
	LD	E,(HL)
	LD	A,E
	AND	0BFH
	LD	(HL),A
	EX	(SP),HL
	LD	A,80H
	OR	E
	LD	(HL),A
	INC	HL
	INC	C
	EX	(SP),HL
	LD	A,E
	AND	40H	; "@"
	JR	Z,J$637B
;
	INC	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	POP	HL
	LD	(HL),D
	INC	HL
	LD	(HL),E
	INC	HL
	INC	C
	INC	C
	CP	0E1H
J$637B	EQU	$-1
	POP	DE
	LD	A,D
	OR	E
	JR	Z,J$6386
;
	LD	(HL),D
	INC	HL
	LD	(HL),E
	INC	C
	INC	C
J$6386:	LD	L,07H	; 7 
	CALL	C.6F13
;
	LD	(HL),C
	LD	A,C
	SUB	02H	; 2 
	RRCA	
	RRCA	
	RRCA	
	INC	HL
	OR	(HL)
	LD	(HL),A
	DEC	HL
	LD	A,D
	OR	E
	JR	NZ,J$63A6
;
	PUSH	HL
	LD	A,(SAVVOL)
	OR	80H
	LD	BC,11
	ADD	HL,BC
	LD	(HL),A
	POP	HL
J$63A6:	POP	DE
	LD	B,(HL)
	INC	HL
J$63A9:	LD	E,(HL)
	INC	HL
	CALL	C$619A
;
	DJNZ	J$63A9
;
	CALL	C.61BB
;
	JP	C,J.610B
;
	JP	J.6D1A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.63B9:	LD	B,H
	LD	C,L
	XOR	A
	LD	H,A
	LD	L,A
	PUSH	HL
	SBC	HL,BC
	EX	DE,HL
	ADD	HL,HL
	LD	A,H
	LD	C,L
	POP	HL
	LD	B,10H	; 16 
J$63C8:	ADC	HL,HL
	ADD	HL,DE
	JR	C,J$63CF
;
	SBC	HL,DE
J$63CF:	RL	C
	RLA	
	DJNZ	J$63C8
;
	LD	D,A
	LD	E,C
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.63D7:	LD	E,08H	; 8 
	LD	HL,0
J$63DC:	ADD	HL,HL
	RLA	
	JR	NC,J$63E3
;
	ADD	HL,BC
	ADC	A,00H
J$63E3:	DEC	E
	JP	NZ,J$63DC
;
C$63E7:	RET	
;
;	-----------------
C$63E8:	JR	NC,J.6428
;
	LD	A,E
	CP	0C9H
	JR	NC,J.6428
;
	CALL	C.6425
;
	CALL	C.6D6E
;
	CP	2CH	; ","
	JR	NZ,J.6428
;
	CALL	C.6DA2
;
	JR	C.6425
;
;	-----------------
C$63FE:	JR	C,J$6402
;
	LD	E,08H	; 8 
J$6402:	LD	A,E
	CP	09H	; 9 
	JR	NC,J.6428
;
	JR	C.6425
;
;	-----------------
C$6409:	JR	NC,J.6428
;
	JR	C.6425
;
;	-----------------
C$640D:	CALL	C.6D68
;
	CP	56H	; "V"
	JR	Z,J$642B
;
	CP	57H	; "W"
	JR	Z,J$643E
;
	CALL	C.64ED
;
	JR	C,J.6428
;
	CALL	C.6DA5
;
	LD	A,E
	CP	40H	; "@"
	JR	NC,J.6428
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6425:	LD	A,D
	OR	A
	RET	Z
;
J.6428:	JP	C.6EAB			; illegal function call
;
;	-----------------
J$642B:	CALL	C.6D6E
;
	RET	Z
;
	CALL	C.64ED
;
	JR	C,J.6428
;
	CALL	C.6DA5
;
	LD	A,E
	CP	80H
	JR	NC,J.6428
;
	JR	C.6425
;
;	-----------------
J$643E:	CALL	C.6D6E
;
	JR	Z,J$6451
;
	CALL	C.64ED
;
	JR	C,J$644E
;
	CALL	C.6DA5
;
	JP	J.629F
;
;	-----------------
J$644E:	CALL	C.6D94
;
J$6451:	JP	J$6299

;	  Table      MCL FM
;	     Inputs  ________________________
;	     Outputs ________________________

I$6454:	DEFB	"A"
	DEFW	C$65BC
	DEFB	"&"
	DEFW	C$66DB
	DEFB	"{"
	DEFW	C$66E4
	DEFB	"}"+128
	DEFW	C$6763
	DEFB	"Y"+128
	DEFW	C$64FD
	DEFB	"L"+128
	DEFW	C$6266
	DEFB	"Q"+128
	DEFW	C$656C
	DEFB	"V"+128
	DEFW	C$6533
	DEFB	"O"+128
	DEFW	C$628C
	DEFB	">"
	DEFW	C$657A	
	DEFB	"<"
	DEFW	C$6587
	DEFB	"Z"+128
	DEFW	C$6529
	DEFB	"X"
	DEFW	C$6E0B
	DEFB	"R"+128
	DEFW	C$6592
	DEFB	"N"+128
	DEFW	C$65AF
	DEFB	"T"+128
	DEFW	C$627F
	DEFB	"@"
	DEFW	C$648E
	DEFB	"M"+128
	DEFW	C$655D
	DEFB	"S"+128
	DEFW	C$6564
	DEFB	0

C$648E:	CALL	C.6D68
;
	CP	56H	; "V"
	JR	Z,J.64C1
;
	CP	57H	; "W"
	JR	Z,J$64E1
;
	CALL	C.64ED
;
	JR	C,J.64EA
;
	CALL	C.6DA5
;
	CALL	C.6425
;
	LD	A,E
	CP	40H	; "@"
	JR	NC,J.64EA
;
	LD	C,A
	LD	A,(VOICEN)
	CALL	C.696D
;
	JR	NC,J$64B7
;
	LD	A,C
	CP	10H	; 16 
	JR	NC,J.64EA
;
J$64B7:	LD	E,84H
	CALL	C.61AB
;
	LD	E,C
	POP	BC
	JP	J.6646
;
;	-----------------
J.64C1:	CALL	C.6D68
;
	CALL	C.64ED
;
	JR	C,J.64EA
;
	CALL	C.6DA5
;
	LD	A,7FH
	SUB	E
	JP	M,J.64EA
;
	RRA	
	LD	C,A
	CALL	C.6425
;
	LD	E,85H
	CALL	C.61AB
;
	LD	E,C
	POP	BC
	JP	J.6646
;
;	-----------------
J$64E1:	POP	DE
	CALL	C.6652
;
	LD	E,83H
	JP	J.6631
;
;	-----------------
J.64EA:	JP	C.6EAB			; illegal function call
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.64ED:	CP	2BH	; "+"
	RET	Z
;
	CP	2DH	; "-"
	RET	Z
;
	CP	3DH	; "="
	RET	Z
;
	CP	30H	; "0"
	RET	C
;
	CP	3AH	; ":"
	CCF	
	RET	
;
;	-----------------
C$64FD:	JR	NC,J.6526
;
	LD	A,E
	CP	0C9H
	JR	NC,J.6526
;
	CALL	C.6425
;
	PUSH	DE
	CALL	C.6D68
;
	CP	2CH	; ","
	JR	NZ,J.6526
;
	CALL	C.6DA2
;
	CALL	C.6425
;
	PUSH	DE
	LD	E,82H
	CALL	C.61AB
;
	POP	HL
	EX	(SP),HL
	LD	E,L
	CALL	C.61AB
;
	POP	DE
	POP	BC
	JP	J.6646
;
;	-----------------
J.6526:	JP	C.6EAB			; illegal function call
;
;	-----------------
C$6529:	JR	NC,J.6526
;
	CALL	C.6425
;
	LD	C,E
	LD	E,8AH
	JR	J$6542
;
;	-----------------
C$6533:	JR	C,J$6537
;
	LD	E,08H	; 8 
J$6537:	CALL	C.6425
;
	LD	A,E
	CP	10H	; 16 
	JR	NC,J.6561
;
J$653F:	LD	C,A
	LD	E,81H
J$6542:	CALL	C.61AB
;
	LD	E,C
	POP	BC
	JP	J.6646
;
;	-----------------
C$654A:	JR	C,J$654E
;
	LD	E,08H	; 8 
J$654E:	CALL	C.6425
;
	LD	A,E
	CP	10H	; 16 
	JR	NC,J.6561
;
	LD	A,0FH	; 15 
	SUB	E
	ADD	A,A
	LD	E,A
	JR	J$653F
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$655D:	RET	NC
;
	LD	A,E
	OR	D
	RET	NZ
;
J.6561:	JP	C.6EAB			; illegal function call
;
;	-----------------
C$6564:	LD	A,E
	CP	10H	; 16 
	JR	NC,J.6561
;
	JP	C.6425
;
;	-----------------
C$656C:	JR	C,J$6570
;
	LD	E,08H	; 8 
J$6570:	LD	A,E
	CP	09H	; 9 
	JR	NC,J.6561
;
	LD	L,26H	; "&"
	JP	J.6271
;
;	-----------------
C$657A:	LD	L,0FH	; 15 
	CALL	C.6F13
;
	LD	A,(HL)
	INC	A
	CP	09H	; 9 
	JR	NC,J.6561
;
	LD	(HL),A
	RET	
;
;	-----------------
C$6587:	LD	L,0FH	; 15 
	CALL	C.6F13
;
	LD	A,(HL)
	DEC	A
	JR	Z,J.6561
;
	LD	(HL),A
	RET	
;
;	-----------------
C$6592:	JR	C,J$6596
;
	LD	E,04H	; 4 
J$6596:	CALL	C.6425
;
	OR	E
	JR	Z,J.6561
;
	CP	41H	; "A"
	JR	NC,J.6561
;
	XOR	A
	PUSH	AF
	LD	HL,I$65DC
	PUSH	HL
	LD	L,10H	; 16 
	CALL	C.6F13
;
	PUSH	HL
	JP	J.666D
;
;	-----------------
C$65AF:	JR	NC,J.6561
;
	CALL	C.6425
;
	LD	A,E
	CP	61H	; "a"
	JR	C,J$65D6
;
	JP	C.6EAB			; illegal function call
;
;	-----------------
C$65BC:	CALL	C.62DC
;
	LD	L,0FH	; 15 
	CALL	C.6F13
;
	LD	D,0CH	; 12 
	LD	B,(HL)
	LD	A,0F4H
J$65C9:	ADD	A,D
	DJNZ	J$65C9
;
	LD	D,A
	LD	B,00H
	LD	HL,I.61FC
	ADD	HL,BC
	LD	A,(HL)
	RRCA	
	ADD	A,D
J$65D6:	ADD	A,0CH	; 12 
	PUSH	AF
	CALL	C.6652
;
I$65DC:	PUSH	HL
	CALL	C.6D6E
;
	JR	Z,J$65EB
;
	CP	26H	; "&"
	PUSH	AF
	CALL	C.6D94
;
	POP	AF
	JR	Z,J.662D
;
J$65EB:	LD	L,26H	; "&"
	CALL	C.6F13
;
	LD	A,(HL)
	CP	08H	; 8 
	JR	Z,J.662D
;
	POP	DE
	PUSH	DE
	LD	B,A
	LD	HL,0
J$65FB:	ADD	HL,DE
	DJNZ	J$65FB
;
	SRL	H
	RR	L
	SRL	H
	RR	L
	SRL	H
	RR	L
	POP	DE
	EX	DE,HL
	OR	A
	SBC	HL,DE
	EX	DE,HL
	JR	Z,J$662E
;
	POP	AF
	POP	BC
	PUSH	DE
	LD	E,A
	CALL	C.61AB
;
	LD	E,L
	CALL	C.61AB
;
	LD	E,H
	CALL	C.61AB
;
	LD	E,00H
	CALL	C.61AB
;
	POP	DE
	CALL	C.61AB
;
	LD	E,D
	JR	J$6639
;
;	-----------------
J.662D:	POP	HL
J$662E:	POP	AF
	POP	DE
	LD	E,A
J.6631:	CALL	C.61AB
;
	LD	E,L
	CALL	C.61AB
;
	LD	E,H
J$6639:	CALL	C.61AB
;
	CALL	C.61BB
;
	EI	
	JP	C,J.610B
;
	JP	J.6D1A
;
;	-----------------
J.6646:	CALL	C.61AB
;
	CALL	C.61BB
;
	JP	C,J.610B
;
	JP	J.6D1A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6652:	LD	L,09H	; 9 
	CALL	C.6F13
;
	LD	C,(HL)
	LD	A,C
	OR	A
	PUSH	AF
	LD	L,10H	; 16 
	CALL	C.6F13
;
	POP	AF
	JR	NZ,J$6664
;
	LD	C,(HL)
J$6664:	PUSH	HL
	CALL	C.6D6E
;
	JR	Z,J.6679
;
	CALL	C.6DA5
;
J.666D:	LD	A,40H	; "@"
	CP	E
	JR	C,J.66E1
;
	CALL	C.6425
;
	OR	E
	JR	Z,J.6679
;
	LD	C,E
J.6679:	POP	HL
	INC	HL
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$667B:	LD	A,(HL)
	LD	B,00H
	CALL	C.63D7
;
	PUSH	HL
	LD	DE,7080H
	CALL	C.63B9
	EX	DE,HL
	EX	(SP),HL
	LD	B,05H	; 5 
J$668C:	SRL	H
	RR	L
	DJNZ	J$668C
	CALL	C.63B9
;
	CALL	C.66CC
;
	LD	L,(IX)
	LD	H,00H
	ADD	HL,DE
	LD	(IX),L
	LD	DE,-32
	ADD	HL,DE
	JR	NC,J$66AD
;
	LD	(IX),L
	POP	HL
	INC	HL
	PUSH	HL
J$66AD:	POP	DE
	LD	H,D
	LD	L,E
J$66B0:	CALL	C.6D6E
;
	JR	Z,J.66CB
;
	CP	2EH	; "."
	JR	NZ,J$66C8
;
	SRL	D
	RR	E
	ADC	HL,DE
	LD	A,0E0H
	AND	H
	JR	Z,J$66B0
;
	XOR	H
	LD	H,A
	JR	J.66CB
;
;	-----------------
J$66C8:	CALL	C.6D94
;
J.66CB:	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.66CC:	PUSH	BC
	LD	A,(VOICEN)
	LD	C,A
	LD	B,00H
	LD	IX,I$7FC6
	ADD	IX,BC
	POP	BC
	RET	
;
;	-----------------
C$66DB:	LD	E,87H
	POP	BC
	JP	J.6646
;
;	-----------------
J.66E1:	JP	C.6EAB			; illegal function call
;
;	-----------------
C$66E4:	LD	L,09H	; 9 
	CALL	C.6F13
;
	LD	A,(HL)
	JR	NZ,J.66E1
;
	LD	C,00H
	LD	HL,(MCLPTR)
	PUSH	HL
	LD	A,(MCLLEN)
	PUSH	AF
J.66F6:	CALL	C.6D68
;
J$66F9:	CP	4EH	; "N"
	JR	Z,J.6709
;
	CP	52H	; "R"
	JR	Z,J.6709
;
	CP	41H	; "A"
	JR	C,J.670C
;
	CP	48H	; "H"
	JR	NC,J.670C
;
J.6709:	INC	C
	JR	J.66F6
;
;	-----------------
J.670C:	CP	7DH	; "}"
	JR	Z,J$6722
;
	CP	7BH	; "{"
	JR	Z,J.66E1
;
	CP	3DH	; "="
	JR	NZ,J.66F6
;
J$6718:	CALL	C.6D68
;
	CALL	C.6FCE
;
	JR	C,J$6718
;
	JR	J$66F9
;
;	-----------------
J$6722:	LD	L,10H	; 16 
	CALL	C.6F13
;
	LD	E,(HL)
	LD	D,00H
	CALL	C.6D6E
;
	JR	Z,J.673C
;
	CALL	C.6D94
;
	CALL	C.64ED
;
	JR	C,J.673C
;
	PUSH	BC
	CALL	C.6DA2
;
	POP	BC
J.673C:	LD	A,40H	; "@"
	CP	E
	JR	C,J.66E1
;
	CALL	C.6425
;
	LD	A,C
	LD	B,D
	LD	C,E
	CALL	C.63D7
;
	OR	H
	JR	NZ,J.66E1
;
	LD	A,L
	CP	41H	; "A"
	JR	NC,J.66E1
;
	PUSH	AF
	LD	L,09H	; 9 
	CALL	C.6F13
;
	POP	AF
	LD	(HL),A
	POP	AF
	LD	(MCLLEN),A
	POP	HL
	LD	(MCLPTR),HL
	RET	
;
;	-----------------
C$6763:	LD	L,09H	; 9 
	CALL	C.6F13
	LD	A,(HL)
	OR	A
	JR	Z,J.679B
	LD	(HL),00H
	RET	

;	  Table      MCL drum
;	     Inputs  ________________________
;	     Outputs ________________________

I$676F:	DEFB	"B"
	DEFW	C$679E
	DEFB	"S"
	DEFW	C$679E
	DEFB	"M"
	DEFW	C$679E
	DEFB	"C"
	DEFW	C$679E
	DEFB	"H"
	DEFW	C$679E
	DEFB	"R"+128
	DEFW	C$6592
	DEFB	"@"
	DEFW	C$67F7
	DEFB	"T"+128
	DEFW	C$627F
	DEFB	"Y"+128
	DEFW	C$64FD
	DEFB	"V"+128
	DEFW	C$654A
	DEFB	"X"
	DEFW	C$6E0B
	DEFB	0

I$6791:	DEFB "B","S","M","C","H"
	DEFB 010H,008H,004H,002H,001H


J.679B:	JP	C.6EAB			; illegal function call

C$679E:	LD	BC,0
	CALL	C.6D94
;
J$67A4:	CALL	C.6D68
;
	CALL	C.64ED
;
	JR	NC,J.67D0
;
	PUSH	BC
	LD	HL,I$6791
	LD	BC,5
	CPIR	
	JR	NZ,J.679B
;
	LD	C,04H	; 4 
	ADD	HL,BC
	LD	D,(HL)
	POP	BC
	CALL	C.6D68
;
	CP	21H	; "!"
	PUSH	AF
	CALL	NZ,C.6D94
;
	POP	AF
	JR	NZ,J$67CB
;
	LD	A,D
	OR	B
	LD	B,A
J$67CB:	LD	A,D
	OR	C
	LD	C,A
	JR	J$67A4
;
;	-----------------
J.67D0:	INC	C
	DEC	C
	JR	Z,J.679B
;
	LD	A,0C0H
	OR	C
	PUSH	AF
	PUSH	BC
	LD	HL,I$67EC
	PUSH	HL
	LD	L,10H	; 16 
	CALL	C.6F13
;
	PUSH	HL
	CALL	C.6D94
;
	CALL	C.6DA2
;
	JP	J.666D
;
;	-----------------
I$67EC:	POP	BC
	POP	AF
	POP	DE
	LD	E,A
	CALL	C.61AB
;
	LD	E,B
	JP	J.6631
;
;	-----------------
C$67F7:	CALL	C.6D68
;
	CP	56H	; "V"
	JP	Z,J.64C1
;
	CP	41H	; "A"
	JR	NZ,J.679B
;
	CALL	C.6D68
;
	CALL	C.64ED
;
	JR	C,J.6825
;
	CALL	C.6DA5
;
	CALL	C.6425
;
	LD	A,E
	CP	10H	; 16 
	JR	NC,J.6825
;
	LD	A,0FH	; 15 
	SUB	E
	ADD	A,A
	LD	C,A
	LD	E,86H
	CALL	C.61AB
;
	LD	E,C
	POP	BC
	JP	J.6646
;
;	-----------------
J.6825:	JP	C.6EAB			; illegal function call

;	  Subroutine TIMER-1 handler
;	     Inputs  ________________________
;	     Outputs ________________________

I$6828:	PUSH	AF
	DI	
	LD	HL,D.7B30
	LD	A,(D.7B14)
	OR	A
	JR	NZ,J$6845
J$6833:	CPL	
	LD	(D.7B14),A
	PUSH	HL
	CALL	C$6848
	POP	HL
	DI	
	XOR	A
	LD	(D.7B14),A
	DEC	(HL)
	JP	P,J$6833
J$6845:	INC	(HL)
	POP	AF
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$6848:	LD	A,(MUSICF)
	OR	A
	JR	Z,J$6858
	CALL	C.6B8D			; CTRL-STOP pressed ?
	JR	NZ,J$6865		; nope,
	LD	A,(MUSICF)
	AND	7FH
J$6858:	LD	HL,(D.7B26)
	OR	L
	OR	H
	LD	HL,D.7B28
	OR	(HL)
	CALL	NZ,C.6CDC
;
	RET	
;
;	-----------------
J$6865:	LD	BC,(D.7B26)
	LD	A,B
	OR	C
	JR	Z,J$6897
;
	LD	HL,(D.7F98)
	PUSH	HL
	CALL	C.4D83			; MSX-AUDIO in page 0
;
	LD	HL,(D.7F98)
	PUSH	HL
	XOR	A
J$6879:	SRL	B
	RR	C
	PUSH	AF
	PUSH	BC
	CALL	C,C$6898
;
	POP	BC
	POP	AF
	INC	A
	LD	HL,D.7B22
	CP	(HL)
	JR	C,J$6879
;
	DI	
	POP	HL
	LD	(D.7F98),HL
	CALL	C.4D8F			; restore page 0
;
	POP	HL
	LD	(D.7F98),HL
J$6897:	RET	

;	  Subroutine service playvoice
;	     Inputs  ________________________
;	     Outputs ________________________

C$6898:	LD	(D.7B31),A		; current playvoice serviced
	DI	
	LD	L,00H
	CALL	C.6F16
;
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	A,D
	OR	E
	JR	Z,J$68B0
;
	DEC	DE
	LD	(HL),D
	DEC	HL
	LD	(HL),E
	LD	A,D
	OR	E
	RET	NZ
;
	INC	HL
J$68B0:	LD	A,(D.7B23)
	LD	B,A
	LD	A,(D.7B31)		; current playvoice serviced
	CP	B
	JP	NC,J$2F70
;
J.68BB:	CALL	C.6B64			; get from voicequeue serviced
;
	RET	Z
;
J.68BF:	INC	A
	JP	Z,J$69E0
;
	DEC	A
	JP	M,J$6A0A
;
	PUSH	HL
	PUSH	AF
	LD	L,0DH	; 13 
	CALL	C.6B72
;
	POP	AF
	LD	(HL),A
	POP	HL
	LD	D,A
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	C,A
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	(HL),A
	DEC	HL
	LD	(HL),C
	LD	A,D
	OR	A
	JP	Z,C.6945
;
	CALL	C$693F
;
	CALL	C.69B2
;
	LD	L,12H	; 18 
	CALL	C.6B72
;
	LD	C,(HL)
	LD	E,00H
	CALL	C$4A9A
;
	CALL	C.690D
;
	JP	NZ,J$6B99
;
	CALL	C.696A
;
	JP	C,J$6936
;
J$68FE:	PUSH	BC
	PUSH	DE
	LD	A,35
	RST	00H
	LD	BC,64
	ADD	IX,BC
	POP	DE
	POP	BC
	DJNZ	J$68FE
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.690D:	PUSH	HL
	LD	HL,D.7B11
	BIT	0,(HL)
	POP	HL
	RET	
;
;	-----------------
C$6915:	CALL	C.6B64			; get from voicequeue serviced
;
	RET	Z
;
	OR	A
	JP	M,J.68BF
;
	JR	Z,J.68BF
;
	PUSH	HL
	PUSH	AF
	LD	L,0DH	; 13 
	CALL	C.6B72
;
	POP	AF
	CP	(HL)
	POP	HL
	JR	NZ,J.68BF
;
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	C,A
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	(HL),A
	DEC	HL
	LD	(HL),C
	RET	
;
;	-----------------
J$6936:	LD	A,(D.7B12)
	JP	J$4BCF
;
;	-----------------
J$693C:	JP	J$4C3A
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$693F:	PUSH	DE
	CALL	C.6945
;
	POP	DE
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6945:	CALL	C.696A
;
	JR	NC,J$6954
;
	RET	NZ
;
	CALL	C.690D
;
	JP	NZ,J.6BA4
;
	JP	J$693C
;
;	-----------------
J$6954:	CALL	C.690D
;
	JP	NZ,J.6BA4
;
	CALL	C.69B2
;
J$695D:	PUSH	BC
	LD	A,37
	RST	00H
	LD	BC,64
	ADD	IX,BC
	POP	BC
	DJNZ	J$695D
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.696A:	LD	A,(D.7B31)		; current playvoice serviced

;	  Subroutine get playvoice type
;	     Inputs  ________________________
;	     Outputs ________________________

C.696D:	LD	HL,D.7B15
	CP	(HL)			; number of FM-AUDIO playvoices
	CCF	
	RET	NC			; FM-AUDIO playvoice
	PUSH	AF
	LD	A,(D.7B1F)
	DEC	A			; audio mode 1 ?
	JR	Z,J$697C		; yep,
	POP	AF
	RET	

J$697C:	POP	AF
	ADC	A,A
	RRA	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$6980:	CALL	C.690D
;
	JP	NZ,J$6BA8
;
	CALL	C.696A
;
	JR	NC,J$6990
;
	LD	A,C
	LD	(D.7B12),A
	RET	
;
;	-----------------
J$6990:	PUSH	BC
	CALL	C.69B2
;
	POP	DE
	LD	C,E
J$6996:	PUSH	BC
	LD	A,34
	RST	00H
	POP	BC
	PUSH	BC
	LD	A,39
	RST	00H
	LD	BC,32
	ADD	IX,BC
	POP	BC
	PUSH	BC
	LD	A,39
	RST	00H
	LD	BC,32
	ADD	IX,BC
	POP	BC
	DJNZ	J$6996
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.69B2:	LD	A,(D.7B31)		; current playvoice serviced
	CALL	C.696D
;
	JR	NC,J.69C3
;
	JR	Z,J.69C3
;
	LD	IX,I.3000+6*64
	LD	B,3
	RET	

J.69C3:	LD	HL,I.7B16
	OR	A			; first AUDIO playvoice ?
	JR	Z,J$69CF		; yep, first channel = 0
	LD	B,A
	XOR	A
J$69CB:	ADD	A,(HL)
	INC	HL
	DJNZ	J$69CB			; calculate first channel of AUDIO playvoice
J$69CF:	LD	IX,I.3000		; buffer channel 0
	OR	A			; channel 0 ?
	JR	Z,J$69DE
	LD	BC,64
J$69D9:	ADD	IX,BC
	DEC	A
	JR	NZ,J$69D9		; get pointer to channel buffer
J$69DE:	LD	B,(HL)
	RET	

J$69E0:	CALL	C.6945
	LD	L,0DH	; 13 
	CALL	C.6B72
	LD	(HL),00H

J$69EA:	LD	A,(D.7B31)		; current playvoice serviced
	LD	HL,1
	LD	B,A
	OR	A
	JR	Z,J$69F7
J$69F4:	ADD	HL,HL
	DJNZ	J$69F4
J$69F7:	EX	DE,HL
	DI	
	LD	HL,(D.7B26)
	LD	A,E
	AND	L
	XOR	L
	LD	L,A
	LD	A,D
	AND	H
	XOR	H
	LD	H,A
	LD	(D.7B26),HL
	JP	C.6F66
;
;	-----------------
J$6A0A:	LD	E,A
	AND	0C0H
	CP	0C0H
	JP	Z,J$6B1D
	LD	A,E
	ADD	A,A
	EX	DE,HL
	ADD	A,LOW I$6A23
	LD	L,A
	LD	A,0
	ADC	A,HIGH I$6A23
	LD	H,A
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	EX	DE,HL
	PUSH	BC
	RET	

I$6A23:	DEFW	C$6A43
	DEFW	C$6A46
	DEFW	C$6A73
	DEFW	C$6A80
	DEFW	C$6A8B
	DEFW	C$6A95
	DEFW	C$6AF0
	DEFW	C$6915
	DEFW	C$6A39
	DEFW	C$6A3B
	DEFW	C$6BD0

C$6A39:	XOR	A
	DEFB	1

C$6A3B:	LD	A,1
	LD	(D.7B11),A
	JP	J.68BB

C$6A43:	JP	C.6945

C$6A46:	PUSH	HL
	CALL	C.696A
	POP	HL
	JR	NC,J$6A52
	JP	NZ,J$6AD8
	JR	J$6A60
;
;	-----------------
J$6A52:	PUSH	HL
	LD	L,12H	; 18 
	CALL	C.6B72
;
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	(HL),A
J.6A5C:	POP	HL
	JP	J.68BB
;
;	-----------------
J$6A60:	PUSH	HL
	LD	L,12H	; 18 
	CALL	C.6B72
;
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	(HL),A
	ADD	A,A
	ADD	A,A
	ADD	A,03H	; 3 
	CALL	C.6ACF
;
	JR	J.6A5C
;
;	-----------------
C$6A73:	PUSH	HL
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	C,A
	CALL	C.6B64			; get from voicequeue serviced
;
	CALL	C$009C
;
	JR	J.6A5C
;
;	-----------------
C$6A80:	CALL	C.6B64			; get from voicequeue serviced
;
	LD	C,A
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	(HL),A
	DEC	HL
	LD	(HL),C
	RET	
;
;	-----------------
C$6A8B:	PUSH	HL
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	C,A
	CALL	C$6980
;
	JR	J.6A5C
;
;	-----------------
C$6A95:	CALL	C.690D
;
	JP	NZ,J$6BAD
;
	PUSH	HL
	CALL	C.696A
;
	JR	NC,J$6AA3
;
	JR	Z,J$6AC3
;
J$6AA3:	CALL	C.69B2
;
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	E,A
	LD	C,15H
J$6AAC:	CALL	C.6AB6
;
	CALL	C.6AB6
;
	DJNZ	J$6AAC
;
	JR	J.6A5C
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6AB6:	PUSH	BC
	PUSH	DE
	LD	A,38
	RST	00H
	LD	BC,32
	ADD	IX,BC
	POP	DE
	POP	BC
	RET	
;
;	-----------------
J$6AC3:	CALL	C.6B64			; get from voicequeue serviced
;
	LD	E,A
	LD	A,3FH	; "?"
	SUB	E
	CALL	C.6ACF
;
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6ACF:	LD	C,A
	LD	B,00H
	LD	E,A
	LD	D,00H
	JP	C.44B4
;
;	-----------------
J$6AD8:	PUSH	HL
	LD	L,0AH	; 10 
	CALL	C.6B72
;
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	(HL),A
	LD	E,A
	LD	L,08H	; 8 
	CALL	C.6B72
;
	LD	A,(HL)
	CPL	
	CALL	C.6B07
;
	JP	J.6A5C
;
;	-----------------
C$6AF0:	PUSH	HL
	LD	L,0CH	; 12 
	CALL	C.6B72
;
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	(HL),A
	LD	E,A
	LD	L,08H	; 8 
	CALL	C.6B72
;
	LD	A,(HL)
	CALL	C.6B07
;
	JP	J.6A5C
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6B07:	AND	1FH
	RET	Z
;
	CALL	C.690D
;
	JP	NZ,J$6BC0
;
	PUSH	BC
	PUSH	DE
	LD	C,A
	LD	A,44
	LD	IX,I.3000
	RST	00H
	POP	DE
	POP	BC
	RET	
;
;	-----------------
J$6B1D:	CALL	C.6B64			; get from voicequeue serviced
;
	LD	D,A
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	C,A
	CALL	C.6B64			; get from voicequeue serviced
;
	LD	(HL),A
	DEC	HL
	LD	(HL),C
	PUSH	HL
	LD	L,08H	; 8 
	CALL	C.6B72
;
	LD	A,D
	XOR	(HL)
	JR	Z,J$6B55
;
	LD	(HL),D
	PUSH	DE
	PUSH	AF
	AND	D
	PUSH	AF
	LD	L,0CH	; 12 
	CALL	C.6B72
;
	LD	E,(HL)
	POP	AF
	CALL	C.6B07
;
	LD	A,D
	CPL	
	LD	D,A
	POP	AF
	AND	D
	PUSH	AF
	LD	L,0AH	; 10 
	CALL	C.6B72
;
	LD	E,(HL)
	POP	AF
	CALL	C.6B07
;
	POP	DE
J$6B55:	POP	HL
	LD	A,E
	AND	3FH	; "?"
	LD	C,A
	CALL	C.690D
;
	JP	NZ,J$6BCB
;
	LD	A,21
	RST	00H
;
	RET	

;	  Subroutine get from voicequeue serviced
;	     Inputs  ________________________
;	     Outputs ________________________

C.6B64:	PUSH	HL
	PUSH	DE
	PUSH	BC
	LD	A,(D.7B31)		; current playvoice serviced
	DI	
	CALL	C$6E40
	POP	BC
	POP	DE
	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6B72:	LD	A,(D.7B31)		; current playvoice serviced
	DI	
	JP	C.6F16

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.6B79:	EI	
	CALL	C.6B8D			; CTRL-STOP pressed ?
	SCF	
	RET	Z			; yep, quit
	DI	
	LD	HL,(D.7B26)
	LD	A,L
	OR	H
	LD	HL,D.7B28
	OR	(HL)
	JR	NZ,C.6B79
	EI	
	RET	

;	  Subroutine CTRL-STOP pressed ?
;	     Inputs  ________________________
;	     Outputs ________________________

C.6B8D:	LD	A,(BASROM)
	OR	A
	RET	NZ
	LD	A,(INTFLG)
	SUB	3
	OR	A
	RET	
;
;	-----------------
J$6B99:	LD	B,00H

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.6B9B:	LD	A,(D.7B31)		; current playvoice serviced
	PUSH	HL
	CALL	C.7B00
	POP	HL
	RET	
;
;	-----------------
J.6BA4:	LD	B,01H	; 1 
	JR	C.6B9B
;
;	-----------------
J$6BA8:	LD	B,02H	; 2 
	LD	D,C
	JR	C.6B9B
;
;	-----------------
J$6BAD:	CALL	C.6B64			; get from voicequeue serviced
;
	LD	D,A
	PUSH	HL
	CALL	C.696A
;
	POP	HL
	LD	B,03H	; 3 
	JR	NC,C.6B9B
;
	JR	Z,C.6B9B
;
	LD	B,04H	; 4 
	JR	C.6B9B
;
;	-----------------
J$6BC0:	PUSH	BC
	PUSH	DE
	LD	D,A
	LD	B,05H	; 5 
	CALL	C.6B9B
;
	POP	DE
	POP	BC
	RET	
;
;	-----------------
J$6BCB:	LD	B,06H	; 6 
	LD	D,C
	JR	C.6B9B
;
;	-----------------
C$6BD0:	CALL	C.6B64			; get from voicequeue serviced
;
	LD	D,A
	LD	B,07H	; 7 
	JR	C.6B9B

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$6BD8:	XOR	A
	LD	(D.7B29),A
	LD	A,(D.7B15)		; number of FM-AUDIO playvoices
	LD	HL,D.7B1F
	BIT	0,(HL)			; drum mode ?
	JR	Z,J$6BE7
	INC	A			; yep, extra playvoice
J$6BE7:	BIT	1,(HL)			; sample mode ?
	JR	Z,J$6BEC
	INC	A			; yep, extra playvoice
J$6BEC:	LD	(D.7B23),A		; number of AUDIO playvoices
	ADD	A,3			; and 3 playvoices for PSG
	LD	(D.7B22),A		; total number of playvoices
	LD	B,A
	OR	80H
	LD	(D.7B24),A
	LD	HL,0
J$6BFD:	SCF	
	ADC	HL,HL
	DJNZ	J$6BFD
	LD	(D.7B20),HL
	LD	A,(D.7B23)
	ADD	A,LOW I$6C31
	LD	L,A
	LD	A,00H
	ADC	A,HIGH I$6C31
	LD	H,A
	LD	A,(HL)			; voicequeue size
	LD	(D.7B25),A
	LD	HL,I$7B34
	LD	(D.7B32),HL
	LD	A,(EXPTBL+0)
	LD	HL,M002B
	CALL	RDSLT
	AND	80H			; VDP interrupt frequency
	LD	HL,14400
	JR	Z,J$6C2D		; 60 Hz
	LD	HL,12000		; 50 Hz
J$6C2D:	LD	(D$7B0A),HL
	RET	

I$6C31:	DEFB	000H,0FFH,07FH,07FH,03FH,03FH,03FH,01FH,01FH,01FH,01FH
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6C3C:	DI	
	XOR	A
	LD	(D.7B30),A
	LD	(D.7B28),A
	LD	(D.7B14),A
	LD	(D.7B0F),A
	LD	(D.7B10),A
	LD	(D.7B11),A
	LD	(D.7B12),A
	LD	HL,0
	LD	(D.7B26),HL
	LD	A,(D.7B23)
	OR	A
	JR	Z,J$6C98
	LD	B,A
	LD	DE,I$7B70
J$6C63:	PUSH	BC
	PUSH	DE
	LD	A,(D.7B23)
	SUB	B
	LD	(D.7B31),A		; current playvoice serviced
	LD	HL,D.7B25
	LD	B,(HL)
	CALL	C$6E5C
	POP	DE
	POP	BC
	LD	A,(D.7B25)
	INC	A
	LD	L,A
	LD	H,00H
	ADD	HL,DE
	EX	DE,HL
	DJNZ	J$6C63
	LD	A,(D.7B23)
	LD	B,A
J$6C84:	PUSH	BC
	LD	A,B
	DEC	A
	LD	L,00H
	CALL	C.6F16
	EX	DE,HL
	LD	HL,I$6CB5
	LD	BC,39
	LDIR	
	POP	BC
	DJNZ	J$6C84
J$6C98:	XOR	A
	LD	(MUSICF),A
	JP	J$6EC6

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6C9F:	LD	A,(D.7B1F)
	AND	01H			; drum mode ?
	RET	Z			; nope, quit
	LD	A,(I$6CB5+10)
	LD	E,A
	LD	A,1FH
	CALL	C.4D83			; MSX-AUDIO in page 0
	CALL	C.6B07
	CALL	C.4D8F			; restore page 0
	RET	

I$6CB5:	DEFW	0			; +0 , duration counter
	DEFB	0			; +2 , stringlength
	DEFW	0			; +3 , stringadres
	DEFW	0			; +5 , stackdata
	DEFB	0			; +7 , music packet length
	DEFB	0,0,14,0,0,0,0		; +8 , music packet
	DEFB	4			; +15, octave
	DEFB	4			; +16, length
	DEFB	120			; +17, tempo
	DEFB	8			; +18, volume
	DEFW	0			; +19, envelope period
	DEFB	0,0,0			; stack
	DEFB	0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,8
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.6CDC:	CALL	C.6C3C
	CALL	C.6C9F
	CALL	C.4D83			; MSX-AUDIO in page 0
	LD	A,(D.7B23)
	CALL	C.6CEE
	JP	C.4D8F			; restore page 0
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6CEE:	DEC	A
	RET	M
;
	LD	(D.7B31),A		; current playvoice serviced
	PUSH	AF
	CALL	C.6945
;
	POP	AF
	JR	C.6CEE
;
;	-----------------
J$6CFA:	CALL	C.6F04
;
	CALL	C.6F5D
;
	LD	B,C
	LD	C,D
	LD	D,E
	LD	A,B
	OR	C
	JR	Z,J.6D0D
;
	LD	A,D
	OR	A
	JR	Z,J.6D0D
;
	PUSH	BC
	PUSH	DE
J.6D0D:	POP	AF
	LD	(MCLLEN),A
	POP	HL
	LD	A,H
	OR	L
	JP	Z,J$6111
;
	LD	(MCLPTR),HL
J.6D1A:	CALL	C.6D6E
;
	JR	Z,J.6D0D
;
	LD	HL,(MCLTAB)
	CP	41H	; "A"
	JR	C,J$6D2A
;
	CP	48H	; "H"
	JR	C,J$6D3A
;
J$6D2A:	ADD	A,A
	LD	C,A
J$6D2C:	LD	A,(HL)
	ADD	A,A
J$6D2E:	CALL	Z,C.6EAB		; illegal function call
;
	CP	C
	JR	Z,J$6D39
;
	INC	HL
	INC	HL
	INC	HL
	JR	J$6D2C
;
;	-----------------
J$6D39:	LD	A,(HL)
J$6D3A:	LD	BC,J.6D1A
	PUSH	BC
	LD	C,A
	ADD	A,A
	JR	NC,J$6D62
;
	OR	A
	RRA	
	LD	C,A
	PUSH	BC
	PUSH	HL
	CALL	C.6D6E
;
	LD	DE,1
	JP	Z,J$6D5F
;
	CALL	C.6FCE
;
	JP	NC,J$6D5C
;
	CALL	C.6DA5
;
	SCF	
	JR	J$6D60
;
;	-----------------
J$6D5C:	CALL	C.6D94
;
J$6D5F:	OR	A
J$6D60:	POP	HL
	POP	BC
J$6D62:	INC	HL
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	JP	(HL)
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6D68:	CALL	C.6D6E
;
	JR	Z,J$6D2E
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6D6E:	PUSH	HL
J$6D6F:	LD	HL,MCLLEN
	LD	A,(HL)
	OR	A
	JR	Z,J$6DA0
;
	DEC	(HL)
	LD	HL,(MCLPTR)
	LD	A,(HL)
	INC	HL
	LD	(MCLPTR),HL
	CP	20H	; " "
	JR	Z,J$6D6F
;
	POP	HL
	CALL	C$6D8B
;
	SCF	
	ADC	A,A
	RRA	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$6D8B:	CP	61H	; "a"
	RET	C
;
	CP	7BH	; "{"
	RET	NC
;
	SUB	20H	; " "
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6D94:	PUSH	HL
	LD	HL,MCLLEN
	INC	(HL)
	LD	HL,(MCLPTR)
	DEC	HL
	LD	(MCLPTR),HL
J$6DA0:	POP	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6DA2:	CALL	C.6D68
;
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6DA5:	CP	3DH	; "="
	JP	Z,J$6E03
;
	CP	2BH	; "+"
	JR	Z,C.6DA2
;
	CP	2DH	; "-"
	JR	NZ,J$6DB8
;
	LD	DE,I$6E1E
	PUSH	DE
	JR	C.6DA2
;
;	-----------------
J$6DB8:	LD	DE,0
J$6DBB:	CP	2CH	; ","
	JR	Z,C.6D94
;
	CP	3BH	; ";"
	RET	Z
;
	CP	3AH	; ":"
	JR	NC,C.6D94
;
	CP	30H	; "0"
	JR	C,C.6D94
;
	LD	HL,0
	LD	B,0AH	; 10 
J$6DCF:	ADD	HL,DE
	JR	C,J.6DFC
;
	DJNZ	J$6DCF
;
	SUB	30H	; "0"
	LD	E,A
	LD	D,00H
	ADD	HL,DE
	JR	C,J.6DFC
;
	EX	DE,HL
	CALL	C.6D6E
;
	JR	NZ,J$6DBB
;
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6DE3:	CALL	C.6D68
;
	LD	DE,BUF
	PUSH	DE
	LD	B,28H	; "("
	CALL	C.6FCE
;
	JR	C,J.6DFC
;
J$6DF1:	LD	(DE),A
	INC	DE
	CP	3BH	; ";"
	JR	Z,J$6DFF
;
	CALL	C.6D68
;
	DJNZ	J$6DF1
;
J.6DFC:	CALL	C.6EAB			; illegal function call
;
J$6DFF:	POP	HL
	JP	J$6ECC
;
;	-----------------
J$6E03:	CALL	C.6DE3
;
	CALL	BUF+128
;
	EX	DE,HL
	RET	
;
;	-----------------
C$6E0B:	CALL	C.6DE3
;
	LD	A,(MCLLEN)
	LD	HL,(MCLPTR)
	EX	(SP),HL
	PUSH	AF
	LD	C,02H	; 2 
	CALL	C$6FB4
;
	JP	J$6CFA
;
;	-----------------
I$6E1E:	XOR	A
	SUB	E
	LD	E,A
	SBC	A,D
	SUB	E
	LD	D,A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6E25:	CALL	C.6E7C
;
	LD	A,B
	INC	A
	INC	HL
	AND	(HL)
	CP	C
	RET	Z
;
	DEC	HL
	DEC	HL
	DEC	HL
	LD	(HL),A
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	LD	C,A
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	LD	B,00H
	ADD	HL,BC
	LD	(HL),E
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$6E40:	CALL	C.6E7C
;
	LD	A,C
	CP	B
	RET	Z
;
	INC	HL
	INC	A
	AND	(HL)
	DEC	HL
	DEC	HL
	LD	(HL),A
	INC	HL
	INC	HL
	INC	HL
	LD	C,A
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	LD	B,00H
	ADD	HL,BC
	LD	A,(HL)
	SCF	
	ADC	A,A
	RRA	
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$6E5C:	PUSH	BC
	CALL	C.6E84
;
	LD	(HL),B
	INC	HL
	LD	(HL),B
	INC	HL
	LD	(HL),B
	INC	HL
	POP	AF
	LD	(HL),A
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$6E6D:	CALL	C.6E7C
;
	LD	A,B
	INC	A
	INC	HL
	AND	(HL)
	LD	B,A
	LD	A,C
	SUB	B
	AND	(HL)
	LD	L,A
	LD	H,00H
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6E7C:	CALL	C.6E84
;
	LD	B,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	RET	

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.6E84:	LD	C,A
	LD	A,(D.7B22)
	SUB	C
	SUB	04H	; 4 
	LD	HL,(QUEUES)
	JR	C,J$6E95
	LD	HL,(D.7B32)
	LD	A,C
	CPL	
J$6E95:	CPL	
	ADD	A,A
	LD	B,A
	ADD	A,A
	ADD	A,B
	LD	C,A
	LD	B,00H
	ADD	HL,BC
	RET	

J$6E9F:	LD	E,33H
	DEFB	1
J$6EA2:	LD	E,35H
	DEFB	1
J$6EA5:	LD	E,38H
	DEFB	1
J.6EA8:	LD	E,02H
	DEFB	1
C.6EAB:	LD	E,05H
	DEFB	1
J$6EAE:	LD	E,0DH
	DEFB	1
	LD	E,06H
	DEFB	1
J.6EB4:	LD	E,07H
J.6EB6:	LD	A,(D.7B13)
	AND	01H			; AUDIO-BASIC initialized ?
	PUSH	DE
	CALL	NZ,C.6CDC		; yep,
	POP	DE
	LD	IX,M406F
	JR	J.6F08

J$6EC6:	LD	IX,GICINI
	JR	J.6F08

J$6ECC:	LD	IX,M4E9B
	JR	J.6F08

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C$6ED2:	LD	IX,M6A0E
	JR	J.6F08

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.6ED8:	LD	IX,M5EA4
	JR	J.6F08

;	  Subroutine convert DAC
;	     Inputs  ________________________
;	     Outputs ________________________

C.6EDE:	LD	IX,M517A
	JR	J.6F08

;	  Subroutine check for
;	     Inputs  ________________________
;	     Outputs ________________________

C.6EE4:	LD	A,(HL)
	EX	(SP),HL
	CP	(HL)
	JP	NZ,J.6EA8
	INC	HL
	EX	(SP),HL

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.6EEC:	LD	IX,M4666
	JR	J.6F08

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.6EF2:	LD	IX,M4C64
	JR	J.6F08

;	  Subroutine evaluate adres operand 
;	     Inputs  ________________________
;	     Outputs ________________________

C.6EF8:	LD	IX,M542F
	JR	J.6F08

;	  Subroutine evaluate byte operand
;	     Inputs  ________________________
;	     Outputs ________________________

C.6EFE:	LD	IX,M521C
	JR	J.6F08

;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________

C.6F04:	LD	IX,M67D0

;	  Subroutine start MAIN-ROM routine
;	     Inputs  ________________________
;	     Outputs ________________________

J.6F08:	LD	IY,(EXPTBL+0-1)
	JP	CALSLT
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6F0F:	LD	L,02H	; 2 
	JR	C.6F16
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6F13:	LD	A,(VOICEN)
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6F16:	LD	H,00H
	PUSH	DE
	LD	E,A
	LD	A,(D.7B22)
	SUB	E
	SUB	04H	; 4 
	JR	C,J$6F2F
;
	LD	A,E
	LD	DE,I.7CF0
	ADD	HL,DE
	OR	A
	JR	Z,J.6F4E
;
	LD	DE,39
	JR	J.6F4A
;
;	-----------------
J$6F2F:	CPL	
	EX	AF,AF'
	LD	A,L
	OR	A
	JR	NZ,J$6F3F
;
	EX	AF,AF'
	LD	HL,D.7E76
	ADD	A,A
	ADD	A,L
	LD	L,A
	POP	DE
	XOR	A
	RET	
;
;	-----------------
J$6F3F:	EX	AF,AF'
	LD	DE,VCBA
	ADD	HL,DE
	OR	A
	JR	Z,J.6F4E
;
	LD	DE,37
J.6F4A:	ADD	HL,DE
	DEC	A
	JR	NZ,J.6F4A
;
J.6F4E:	POP	DE
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6F50:	PUSH	BC
	EX	(SP),HL
	POP	BC
J$6F53:	CALL	C.6FF4
;
	LD	A,(HL)
	LD	(BC),A
	RET	Z
;
	DEC	BC
	DEC	HL
	JR	J$6F53
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6F5D:	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	C,(HL)
	INC	HL
	LD	B,(HL)
	INC	HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6F66:	DI	
	LD	HL,(D.7B26)
	LD	A,L
	OR	H
	RET	NZ
;
	LD	HL,PLYCNT
	OR	(HL)
	JR	Z,J$6F90
;
	DEC	(HL)
	LD	HL,D.FFFF
	LD	(VCBA+0),HL
	LD	(VCBB+0),HL
	LD	(VCBC+0),HL
	INC	HL
	INC	HL
	LD	(D.7E76),HL
	LD	(D$7E78),HL
	LD	(D$7E7A),HL
	LD	A,87H
	LD	(MUSICF),A
J$6F90:	LD	HL,D.7B28
	LD	A,(HL)
	OR	A
	RET	Z
;
	DEC	(HL)
	LD	A,(D.7B23)
	OR	A
	JR	Z,J$6FAD
;
	LD	B,A
	LD	HL,I.7CF0
	LD	DE,39
J$6FA4:	LD	(HL),01H	; 1 
	INC	HL
	LD	(HL),00H
	DEC	HL
	ADD	HL,DE
	DJNZ	J$6FA4
;
J$6FAD:	LD	HL,(D.7B20)
	LD	(D.7B26),HL
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C$6FB4:	PUSH	HL
	LD	HL,(STREND)
	LD	B,00H
	ADD	HL,BC
	ADD	HL,BC
	LD	A,0E5H
	LD	A,88H
	SUB	L
	LD	L,A
	LD	A,0FFH
	SBC	A,H
	LD	H,A
	JR	C,J$6FCB
;
	ADD	HL,SP
	POP	HL
	RET	C
;
J$6FCB:	JP	J.6EB4
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6FCE:	CP	7BH	; "{"
	RET	Z
;
	CP	7DH	; "}"
	RET	Z
;
	CP	3EH	; ">"
	RET	Z
;
	CP	3CH	; "<"
	RET	Z
;
	CP	26H	; "&"
	RET	Z
;
	CP	40H	; "@"
	RET	C
;
	CP	5BH	; "["
	CCF	
	RET	
;
;	-----------------
?.6FE4:	LD	A,(VALTYP)
	CP	08H	; 8 
	JR	NC,J$6FF0
;
	SUB	03H	; 3 
	OR	A
	SCF	
	RET	
;
;	-----------------
J$6FF0:	SUB	03H	; 3 
	OR	A
	RET	
;
;	-----------------
;
;	  Subroutine __________________________
;	     Inputs  ________________________
;	     Outputs ________________________
;
C.6FF4:	LD	A,H
	SUB	D
	RET	NZ
;
	LD	A,L
	SUB	E
	RET	

	DEFS	08000H-$,0

	END
